// Code generated by go-bindata.
// sources:
// 0_create_users_table.up.sql
// 0_drop_users_table.down.sql
// 10_add_reports_delete_cascade.up.sql
// 10_remove_reports_delete_cascade.down.sql
// 11_add_lat_long.up.sql
// 11_drop_lat_long.down.sql
// 1_create_events_table.up.sql
// 1_drop_events_table.down.sql
// 2_create_matches_table.up.sql
// 2_drop_matches_table.down.sql
// 3_create_alliances_table.up.sql
// 3_drop_alliances_table.down.sql
// 4_create_reports_table.up.sql
// 4_drop_reports_table.down.sql
// 5_add_event_type.up.sql
// 5_remove_event_type.down.sql
// 6_add_bluewon.down.sql
// 6_remove_bluewon.up.sql
// 7_add_photos_table.up.sql
// 7_remove_photos_table.down.sql
// 8_add_isdmin.up.sql
// 8_remove_isadmin.down.sql
// 9_add_reports_cascade.up.sql
// 9_remove_reports_cascade.down.sql
// bindata.go
// DO NOT EDIT!

package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __0_create_users_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\xf0\xf3\x0f\x51\x70\x8d\xf0\x0c\x0e\x09\x56\x28\x2d\x4e\x2d\x2a\x56\xd0\xe0\xe2\x04\x31\xf2\x12\x73\x53\x15\x42\x5c\x23\x42\xc0\x2a\xfc\x42\x7d\x7c\x14\x42\xfd\x3c\x03\x43\x5d\x75\xb8\x38\x33\x12\x8b\x33\x52\x53\x02\x12\x8b\x8b\xcb\xf3\x8b\x52\x50\x55\x71\x69\x02\x02\x00\x00\xff\xff\xe1\x96\xd7\xd2\x62\x00\x00\x00")

func _0_create_users_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__0_create_users_tableUpSql,
		"0_create_users_table.up.sql",
	)
}

func _0_create_users_tableUpSql() (*asset, error) {
	bytes, err := _0_create_users_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0_create_users_table.up.sql", size: 98, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __0_drop_users_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\xb6\x06\x04\x00\x00\xff\xff\xbd\x6d\xc5\x8d\x11\x00\x00\x00")

func _0_drop_users_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__0_drop_users_tableDownSql,
		"0_drop_users_table.down.sql",
	)
}

func _0_drop_users_tableDownSql() (*asset, error) {
	bytes, err := _0_drop_users_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0_drop_users_table.down.sql", size: 17, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __10_add_reports_delete_cascadeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcb\xbd\xaa\x02\x31\x14\xc4\xf1\xfe\x3e\xc5\x94\xbb\xcf\x70\xab\x63\xce\xac\x2c\x86\x64\x39\x89\x85\xd5\x62\x11\x1b\xf1\x83\x44\x0b\xdf\x5e\x16\x59\x6c\x6c\x66\xe0\x07\x7f\xf1\x99\x86\x2c\x1b\x4f\xd4\x72\xbf\xd5\x47\x83\x5a\x9c\xe0\x62\x48\xd9\x64\x0c\x79\xf5\xf9\xf3\xa5\xce\xa7\x73\x79\xfd\xff\xfd\x4a\x45\x15\x43\x34\x8e\xdb\x80\x1d\x0f\xdd\x9a\xf4\x30\x0e\x34\x06\xc7\x84\x67\x2b\xb5\x75\xcb\x5e\x8f\x97\xd2\x23\x06\xec\x27\x95\x4c\x38\x49\x4e\x94\x8b\x28\x3d\xbf\xf2\x0e\x00\x00\xff\xff\xcf\x01\x46\xde\xa7\x00\x00\x00")

func _10_add_reports_delete_cascadeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__10_add_reports_delete_cascadeUpSql,
		"10_add_reports_delete_cascade.up.sql",
	)
}

func _10_add_reports_delete_cascadeUpSql() (*asset, error) {
	bytes, err := _10_add_reports_delete_cascadeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "10_add_reports_delete_cascade.up.sql", size: 167, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __10_remove_reports_delete_cascadeDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x81\x89\xc7\x43\xe8\xd4\xa2\xf8\xb4\xec\xd4\x4a\x6b\x2e\x6c\x5a\x1d\x5d\x5c\x14\xdc\xfc\x83\x5c\x3d\xdd\xfd\x14\xbc\x5d\x23\x35\x60\x5a\x34\x15\x82\x5c\xdd\x5c\x83\x5c\xfd\x9c\x5d\x83\x15\x4a\x8b\x53\x8b\x8a\x35\x40\x64\x5e\x62\x6e\xaa\xa6\x82\xbf\x9f\x42\x68\x80\x8b\x63\x88\xab\x82\xb3\x63\xb0\xb3\xa3\x8b\x2b\x20\x00\x00\xff\xff\xd6\xa5\x2c\xc4\x95\x00\x00\x00")

func _10_remove_reports_delete_cascadeDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__10_remove_reports_delete_cascadeDownSql,
		"10_remove_reports_delete_cascade.down.sql",
	)
}

func _10_remove_reports_delete_cascadeDownSql() (*asset, error) {
	bytes, err := _10_remove_reports_delete_cascadeDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "10_remove_reports_delete_cascade.down.sql", size: 149, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __11_add_lat_longUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x49\x2c\x51\x28\x4a\x4d\xcc\xb1\xe6\x22\xa0\x2e\x3f\x2f\x1d\xaa\x10\x10\x00\x00\xff\xff\x85\xb1\x54\x59\x51\x00\x00\x00")

func _11_add_lat_longUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__11_add_lat_longUpSql,
		"11_add_lat_long.up.sql",
	)
}

func _11_add_lat_longUpSql() (*asset, error) {
	bytes, err := _11_add_lat_longUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "11_add_lat_long.up.sql", size: 81, mode: os.FileMode(436), modTime: time.Unix(1519518430, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __11_drop_lat_longDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x49\x2c\xe1\x22\xa4\x24\x3f\x2f\x1d\x10\x00\x00\xff\xff\xa6\xdb\x0e\x19\x46\x00\x00\x00")

func _11_drop_lat_longDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__11_drop_lat_longDownSql,
		"11_drop_lat_long.down.sql",
	)
}

func _11_drop_lat_longDownSql() (*asset, error) {
	bytes, err := _11_drop_lat_longDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "11_drop_lat_long.down.sql", size: 70, mode: os.FileMode(436), modTime: time.Unix(1519518449, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1_create_events_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8b\x4d\x0a\xc2\x30\x10\x85\xd7\x99\x53\xbc\xa5\x42\x2f\x11\x65\x84\x60\x12\x4b\xf2\x84\xd6\x5d\xc1\x01\x41\xac\x60\x83\xe0\xed\x45\x44\xb7\xdf\xcf\xb6\xa8\xa7\x82\x7e\x13\x15\x61\x87\x7c\x20\x74\x08\x95\x15\xf6\xb4\xb9\x2d\x58\x89\xbb\xda\x0b\xd4\x81\xe8\x4b\x48\xbe\x8c\xd8\xeb\xd8\x89\x9b\xa7\x9b\x7d\xf9\xe7\xca\xc7\x18\x3b\x71\xcb\xe5\xfe\x68\xf9\x67\x3a\x71\xe7\xa9\x19\x18\x92\x56\xfa\xd4\xf3\xf4\x8f\x65\xfd\x0e\x00\x00\xff\xff\x50\xda\x81\x7d\x7d\x00\x00\x00")

func _1_create_events_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_create_events_tableUpSql,
		"1_create_events_table.up.sql",
	)
}

func _1_create_events_tableUpSql() (*asset, error) {
	bytes, err := _1_create_events_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_create_events_table.up.sql", size: 125, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1_drop_events_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x06\x04\x00\x00\xff\xff\x27\xe5\x89\x64\x11\x00\x00\x00")

func _1_drop_events_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_drop_events_tableDownSql,
		"1_drop_events_table.down.sql",
	)
}

func _1_drop_events_tableDownSql() (*asset, error) {
	bytes, err := _1_drop_events_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_drop_events_table.down.sql", size: 17, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_create_matches_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x4d\x6a\xc3\x30\x10\x46\xd7\xd2\x29\x66\x69\x83\x2e\xa1\x84\x71\x10\x91\xa5\x20\x4d\x69\xd2\x9d\x2b\x0f\x34\xf8\xaf\xd8\x72\xc1\xb7\x2f\x2e\xf5\xa6\x74\xfb\xde\xf7\xc1\x3b\x07\xd4\x84\x40\xfa\x64\x11\x4c\x05\xce\x13\xe0\xdd\x44\x8a\x30\x34\x39\x7d\xf0\x02\x85\x14\x1d\x6f\x40\x78\x27\xb8\x05\x53\xeb\xf0\x80\x2b\x3e\x94\x14\xfc\xc5\x63\xbe\x1e\x6e\xbf\xba\x17\x6b\x95\x14\x9f\x33\xb7\xcf\x94\xb9\xa5\xe7\xc0\x40\xa6\xc6\x48\xba\xbe\xd1\x9b\x92\xa2\x49\x79\x6d\xfa\x7f\xc4\x7b\xbf\xf2\xeb\x34\xc2\xc9\x7b\x8b\xda\x29\x29\x66\x6e\x63\x9a\x66\x06\xe3\x08\x2f\x18\x7e\x47\x7f\x59\xe5\x03\x9a\x8b\xdb\xa3\x8a\x23\xa9\x84\x80\x15\x06\x74\x67\x8c\xf0\x03\x97\xa2\xe3\xad\x94\xe5\x77\x00\x00\x00\xff\xff\x95\xc6\xa5\x34\xf2\x00\x00\x00")

func _2_create_matches_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_create_matches_tableUpSql,
		"2_create_matches_table.up.sql",
	)
}

func _2_create_matches_tableUpSql() (*asset, error) {
	bytes, err := _2_create_matches_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_create_matches_table.up.sql", size: 242, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_drop_matches_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x06\x04\x00\x00\xff\xff\xed\x06\x12\x35\x12\x00\x00\x00")

func _2_drop_matches_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_drop_matches_tableDownSql,
		"2_drop_matches_table.down.sql",
	)
}

func _2_drop_matches_tableDownSql() (*asset, error) {
	bytes, err := _2_drop_matches_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_drop_matches_table.down.sql", size: 18, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_create_alliances_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8c\x41\x0a\x83\x30\x14\x44\xd7\xe6\x14\xb3\x34\xe0\x25\x54\xc6\x12\x0c\x09\x8d\x11\xec\xd2\xca\x87\x4a\xd5\x45\xad\x0b\x6f\x5f\xb0\xb4\x14\xba\x9d\x79\xef\x95\x81\x79\x24\x62\x5e\x58\xc2\x54\x70\x3e\x82\x9d\x69\x62\x83\x7e\x9a\xc6\x7e\x19\x64\x45\xaa\x92\xb9\x7f\x0e\xb7\x5a\x76\x44\x76\xf1\xa0\x5c\x6b\x6d\xa6\x92\x71\x2d\xa6\x4d\x50\x78\x6f\x99\xbb\xdf\x67\xd9\xe6\xab\x3c\xfe\x84\xca\x07\x9a\x93\x43\xcd\x4b\xfa\xa9\x6a\x04\x56\x0c\x74\x25\x1b\x1c\xa3\xac\xe9\x5d\x76\x9d\xa9\xa4\x75\xe6\xdc\xf2\x8b\x66\x78\x77\xb5\xd2\xaf\x00\x00\x00\xff\xff\x80\x51\xbd\xfc\xbc\x00\x00\x00")

func _3_create_alliances_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_create_alliances_tableUpSql,
		"3_create_alliances_table.up.sql",
	)
}

func _3_create_alliances_tableUpSql() (*asset, error) {
	bytes, err := _3_create_alliances_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_create_alliances_table.up.sql", size: 188, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_drop_alliances_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\xcc\xc9\xc9\x4c\xcc\x4b\x4e\x2d\x06\x04\x00\x00\xff\xff\x17\xe1\x40\xdc\x14\x00\x00\x00")

func _3_drop_alliances_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_drop_alliances_tableDownSql,
		"3_drop_alliances_table.down.sql",
	)
}

func _3_drop_alliances_tableDownSql() (*asset, error) {
	bytes, err := _3_drop_alliances_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_drop_alliances_table.down.sql", size: 20, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_create_reports_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xc1\x6a\x86\x30\x10\x84\xcf\xe6\x29\xf6\x98\x40\x5e\x42\x7f\xd6\x12\x0c\x09\x8d\x11\xec\x31\x94\x85\x96\x56\x5b\x92\x58\xf0\xed\x8b\x4a\x40\x6b\x2f\x21\xcc\x7c\x3b\x33\x0f\x87\xb5\x47\xf0\x75\xa3\x11\x54\x0b\xc6\x7a\xc0\x51\xf5\xbe\x87\x48\xdf\x5f\x31\x27\xe0\xac\x3a\xbe\x14\xc1\xe3\xe8\x77\xc6\x0c\x5a\x4b\x56\xd1\x0f\xcd\xb9\xa3\xf5\x66\x4c\x21\xbf\xbe\xfd\x67\xbc\xa7\xe6\x73\x21\x68\xac\xd5\x58\x9b\xb3\x93\x29\x4c\x37\x3c\xe5\x90\xd3\x4d\x1d\x8c\x7a\x1e\x90\x97\x76\x09\xa5\x4e\xc2\x96\x22\x24\x03\x68\xad\x43\xf5\x64\xa0\xc3\x17\x5e\xf6\x0b\x70\xd8\xa2\x43\xf3\xc0\x1e\x96\x44\x31\xf1\xed\x9d\xc3\x44\x42\xb2\xea\x7c\x52\xb2\x2f\x27\xbb\x98\xf8\x07\xad\x7f\xf1\x32\xe0\x82\xef\x22\x1d\x3c\x13\xbf\x01\x00\x00\xff\xff\xf1\xac\xe6\x8d\x6b\x01\x00\x00")

func _4_create_reports_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_create_reports_tableUpSql,
		"4_create_reports_table.up.sql",
	)
}

func _4_create_reports_tableUpSql() (*asset, error) {
	bytes, err := _4_create_reports_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_create_reports_table.up.sql", size: 363, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_drop_reports_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\xb6\x06\x04\x00\x00\xff\xff\x55\x5c\x72\x90\x13\x00\x00\x00")

func _4_drop_reports_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_drop_reports_tableDownSql,
		"4_drop_reports_table.down.sql",
	)
}

func _4_drop_reports_tableDownSql() (*asset, error) {
	bytes, err := _4_drop_reports_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_drop_reports_table.down.sql", size: 19, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_add_event_typeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x83\x88\x84\x54\x16\xa4\x2a\x78\xfa\x85\xb8\xba\xbb\x06\x29\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\x00\x02\x00\x00\xff\xff\x47\xcd\xa1\xbe\x38\x00\x00\x00")

func _5_add_event_typeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_add_event_typeUpSql,
		"5_add_event_type.up.sql",
	)
}

func _5_add_event_typeUpSql() (*asset, error) {
	bytes, err := _5_add_event_typeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_add_event_type.up.sql", size: 56, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_remove_event_typeDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x83\x08\x85\x54\x16\xa4\x02\x02\x00\x00\xff\xff\xfa\x1d\x58\x8e\x28\x00\x00\x00")

func _5_remove_event_typeDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_remove_event_typeDownSql,
		"5_remove_event_type.down.sql",
	)
}

func _5_remove_event_typeDownSql() (*asset, error) {
	bytes, err := _5_remove_event_typeDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_remove_event_type.down.sql", size: 40, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __6_add_bluewonDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xca\x29\x4d\x0d\xcf\xcf\x53\x70\xf2\xf7\xf7\x71\x75\xf4\x03\x04\x00\x00\xff\xff\x08\x2a\x0a\x8b\x2e\x00\x00\x00")

func _6_add_bluewonDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__6_add_bluewonDownSql,
		"6_add_bluewon.down.sql",
	)
}

func _6_add_bluewonDownSql() (*asset, error) {
	bytes, err := _6_add_bluewonDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "6_add_bluewon.down.sql", size: 46, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __6_remove_bluewonUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xca\x29\x4d\x0d\xcf\xcf\x03\x04\x00\x00\xff\xff\xc2\xb9\xb0\x4c\x27\x00\x00\x00")

func _6_remove_bluewonUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__6_remove_bluewonUpSql,
		"6_remove_bluewon.up.sql",
	)
}

func _6_remove_bluewonUpSql() (*asset, error) {
	bytes, err := _6_remove_bluewonUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "6_remove_bluewon.up.sql", size: 39, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __7_add_photos_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\xf0\xf3\x0f\x51\x70\x8d\xf0\x0c\x0e\x09\x56\x28\xc8\xc8\x2f\xc9\x2f\x56\xd0\xe0\xe2\x2c\x49\x4d\xcc\x55\x08\x71\x8d\x08\x01\x4b\xfb\x85\xfa\xf8\xe8\x70\x71\x96\x16\xe5\xa0\x8b\x29\x28\x28\x28\x84\xfa\x79\x06\x86\xba\x6a\x80\xb4\xe8\x28\x94\x16\xe5\x68\x72\x69\x02\x02\x00\x00\xff\xff\x7a\x9d\xf7\x09\x64\x00\x00\x00")

func _7_add_photos_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__7_add_photos_tableUpSql,
		"7_add_photos_table.up.sql",
	)
}

func _7_add_photos_tableUpSql() (*asset, error) {
	bytes, err := _7_add_photos_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "7_add_photos_table.up.sql", size: 100, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __7_remove_photos_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\xc8\xc8\x2f\xc9\x2f\x06\x04\x00\x00\xff\xff\xb4\x52\x78\x3f\x11\x00\x00\x00")

func _7_remove_photos_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__7_remove_photos_tableDownSql,
		"7_remove_photos_table.down.sql",
	)
}

func _7_remove_photos_tableDownSql() (*asset, error) {
	bytes, err := _7_remove_photos_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "7_remove_photos_table.down.sql", size: 17, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __8_add_isdminUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xd1\x09\x85\x30\x0c\x05\xd0\x55\xee\x2a\xe9\x6b\xde\xd7\x35\x01\x49\x06\x10\xac\x50\x50\x3f\x0c\xee\xef\x11\x86\xae\x08\x69\x54\xbc\x35\x9e\x82\xf4\x8e\x9f\x33\x17\xc3\x2c\xd9\xaf\x79\xa3\xb9\x53\xc5\x60\x1e\xb0\x24\xd1\xf5\x2f\xc9\xc0\xb1\x9d\x35\xbe\x00\x00\x00\xff\xff\xe7\x70\xa1\xca\x43\x00\x00\x00")

func _8_add_isdminUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__8_add_isdminUpSql,
		"8_add_isdmin.up.sql",
	)
}

func _8_add_isdminUpSql() (*asset, error) {
	bytes, err := _8_add_isdminUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "8_add_isdmin.up.sql", size: 67, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __8_remove_isadminDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x2c\x76\x4c\xc9\xcd\xcc\x03\x04\x00\x00\xff\xff\x54\xf1\x61\xd5\x25\x00\x00\x00")

func _8_remove_isadminDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__8_remove_isadminDownSql,
		"8_remove_isadmin.down.sql",
	)
}

func _8_remove_isadminDownSql() (*asset, error) {
	bytes, err := _8_remove_isadminDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "8_remove_isadmin.down.sql", size: 37, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __9_add_reports_cascadeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x81\x89\xc7\x43\xe8\xd4\xa2\xf8\xb4\xec\xd4\x4a\x6b\x2e\x6c\x5a\x1d\x5d\x5c\x14\xdc\xfc\x83\x5c\x3d\xdd\xfd\x14\xbc\x5d\x23\x35\x60\x5a\x34\x15\x82\x5c\xdd\x5c\x83\x5c\xfd\x9c\x5d\x83\x15\x4a\x8b\x53\x8b\x8a\x35\x40\x64\x5e\x62\x6e\xaa\xa6\x82\xbf\x9f\x42\x68\x80\x8b\x63\x88\xab\x82\xb3\x63\xb0\xb3\xa3\x8b\x2b\x20\x00\x00\xff\xff\xd6\xa5\x2c\xc4\x95\x00\x00\x00")

func _9_add_reports_cascadeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__9_add_reports_cascadeUpSql,
		"9_add_reports_cascade.up.sql",
	)
}

func _9_add_reports_cascadeUpSql() (*asset, error) {
	bytes, err := _9_add_reports_cascadeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "9_add_reports_cascade.up.sql", size: 149, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __9_remove_reports_cascadeDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x81\x89\xc7\x43\xe8\xd4\xa2\xf8\xb4\xec\xd4\x4a\x6b\x2e\x6c\x5a\x1d\x5d\x5c\x14\xdc\xfc\x83\x5c\x3d\xdd\xfd\x14\xbc\x5d\x23\x35\x60\x5a\x34\x15\x82\x5c\xdd\x5c\x83\x5c\xfd\x9c\x5d\x83\x15\x4a\x8b\x53\x8b\x8a\x35\x40\x64\x5e\x62\x6e\xaa\x26\x20\x00\x00\xff\xff\x47\x73\x6b\x93\x83\x00\x00\x00")

func _9_remove_reports_cascadeDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__9_remove_reports_cascadeDownSql,
		"9_remove_reports_cascade.down.sql",
	)
}

func _9_remove_reports_cascadeDownSql() (*asset, error) {
	bytes, err := _9_remove_reports_cascadeDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "9_remove_reports_cascade.down.sql", size: 131, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bindataGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5c\x5d\x6f\xe3\xb6\xd2\xbe\xb6\x7f\x85\x1a\xa0\x85\xfd\x22\x6f\x22\xea\x5b\x01\xf6\xa6\xdd\x1e\xa0\x17\xa7\x05\x4e\xdb\xab\xc3\x83\x80\xa2\xa8\xd4\x38\x8e\x9d\xda\xce\x2e\x77\x17\xfb\xdf\x0f\x1e\xce\x28\xf1\x87\x28\x6b\xbd\x46\xd2\x5e\x28\xb1\x25\x71\xc8\xa1\x66\x9e\x67\x66\x48\xf9\xfa\x3a\xf8\x61\x59\x9b\xe0\xce\x2c\xcc\x4a\x6d\x4c\x1d\x54\x1f\x82\xbb\xe5\xff\x57\xb3\x45\xad\x36\xea\x6a\x7c\x7d\x1d\xac\x97\x8f\x2b\x6d\xd6\x37\xf8\x1c\xde\xea\x95\x51\x1b\x73\xfb\xb8\x36\xab\xf5\xed\x46\x55\x73\x73\xf5\xf8\x70\xb5\xfe\x73\x4e\x97\xeb\xd5\xf2\x61\xe7\x62\xbd\x7c\xbf\x68\x2f\x8b\xf0\x56\xd5\xf5\xed\xca\x3c\x2c\x57\x9b\xf5\x6d\x6d\xe6\x66\x63\x6e\xb5\x5a\x6b\x55\x6f\x8b\x11\xe1\xed\xca\xdc\x2f\xdf\x19\xdf\xad\x3b\x42\x85\x13\x3a\x57\x9b\xdb\xf9\x72\x71\xb7\x2d\x46\xd0\x70\x9e\x2e\xed\x34\x6b\x35\x31\xef\xcc\x62\x73\xa8\x0a\xb7\xdd\xb9\xba\xdd\x3e\x6a\xdb\xdf\xab\x8d\xfe\xc3\x1c\x0a\x88\x48\xc0\xee\xe5\x6d\x09\x71\x2b\x41\xcd\xe7\x33\xb5\xd0\x1d\x32\x62\x92\xb1\x7f\xc3\xb6\x94\xa4\x95\xd2\x4e\xd5\xbe\x8c\x84\x64\xec\x5e\xde\x96\x90\xba\xf9\x73\x8a\xde\x6e\x3e\x3c\x6c\xb7\x4d\xdb\xe7\xb0\x75\x75\xbb\x69\xe6\x9a\x56\xf3\x47\xf3\x7e\xb9\xd8\xbb\xc2\x2d\xdb\x8b\xcf\x42\x73\xd7\xe8\xe1\x8f\xe5\x66\x79\x38\xda\xbc\x6d\xb7\x73\x7d\x5b\x72\xe1\x9a\xcf\xd6\xf5\xfd\x6c\x5b\x6a\xd1\x36\x9c\xad\x95\xbb\xb4\xdd\xa6\xdc\xb1\xbb\x43\x83\x2b\xf7\xed\xad\xcb\xd0\x5a\x9f\xb8\x5b\xe2\xdb\xdb\x5f\x82\x9f\x7f\xf9\x2d\xf8\xf1\xed\x4f\xbf\x7d\x33\x1e\x3f\x28\xfd\x5f\x75\x67\x82\xfb\xd9\xdd\x4a\x6d\x66\xcb\xc5\x7a\x3c\x9e\xdd\x43\x56\x30\x19\x8f\x2e\xaa\x0f\x1b\xb3\xbe\x18\x8f\x2e\xf4\xf2\xfe\x61\x65\xd6\xeb\xeb\xbb\x8f\xb3\x07\x9c\x68\xee\x37\xf8\x37\x5b\xd2\xdf\xeb\xd9\xf2\x71\x33\x9b\xe3\xcb\xd2\x35\x78\x50\x9b\x3f\xae\x9b\xd9\xdc\xe0\x03\x4e\xac\x37\xab\xd9\xe2\xce\x5d\xdb\xcc\xee\xcd\xc5\x78\x3a\x1e\x37\x8f\x0b\xdd\x0e\xef\x5f\x46\xd5\x13\x7c\x08\xfe\xfd\x1f\x74\x7b\x19\x2c\xd4\xbd\x09\xa8\xd9\x34\x98\xb4\x67\xcd\x6a\xb5\x5c\x4d\x83\x4f\xe3\xd1\xdd\x47\xf7\x2d\xb8\x79\x13\x60\x54\x57\x3f\x9b\xf7\x10\x62\x56\x13\x37\x6c\x7c\xff\xfe\xb1\x69\xcc\xca\x89\x9d\x4e\xc7\xa3\x59\xe3\x1a\x7c\xf3\x26\x58\xcc\xe6\x10\x31\x5a\x99\xcd\xe3\x6a\x81\xaf\x97\x41\x73\xbf\xb9\xfa\x11\xd2\x9b\xc9\x05\x04\x05\xdf\xfe\x79\x13\x7c\xfb\xee\x82\x46\xe2\xfa\x9a\x8e\x47\x9f\xc7\xe3\xd1\x3b\xb5\x0a\xaa\xc7\x26\xa0\x7e\xa8\x93\xf1\xe8\x96\x86\xf3\x26\x98\x2d\xaf\x7e\x58\x3e\x7c\x98\x7c\x57\x3d\x36\x97\xc1\xdd\xc7\xe9\x78\xa4\xe7\x3f\xb6\x23\xbd\xfa\x61\xbe\x5c\x9b\xc9\x74\x7c\xae\xf1\x40\x0c\xc9\xf7\x08\x32\xab\x15\x8d\x9b\x4f\x56\x8f\xcd\xd5\xf7\x18\xfa\x64\x7a\x89\x3b\xc6\x9f\xc7\x63\xb8\x48\xa0\xd6\x6b\xb3\xc1\x94\x3f\xea\x0d\xa4\x38\xfd\xf8\x79\x8c\x47\xb3\x45\xb3\x0c\x82\xe5\xfa\xea\x1f\xb3\xb9\xf9\x69\xd1\x2c\x9f\xda\xf1\x23\x6c\xcf\x6f\x49\x70\xcf\x30\x08\xf8\x31\x8e\x47\xeb\xd9\x47\xf7\x7d\xb6\xd8\x64\xc9\x78\x74\x0f\x0c\x0f\x9e\x84\xfe\x73\x59\x1b\x77\xf2\xb7\xd9\xbd\x09\x60\x26\x57\xf8\x84\x7e\x9c\xa9\x4c\x9a\xd9\x7e\x5f\xd3\xe0\x67\x75\x6f\x26\x53\xee\x01\x7d\xb2\x96\xcd\xec\x0a\xbd\x8f\x3f\xf7\xb4\xfd\x75\xf6\x11\x6d\xdd\x68\x76\x9b\x62\xa0\xbd\x4d\x31\xd6\xc9\x74\x7b\xe4\xbb\x02\xa0\xda\x31\x01\x50\x6e\x32\x7d\x56\xf4\x40\x02\x6b\xef\x17\xf2\xd3\xfa\xed\x6c\x35\x99\x06\xd5\x72\x39\xdf\x6e\xad\xe6\xeb\x23\x9a\x7f\x58\x93\xe2\x66\xd5\x28\x6d\x3e\x7d\xde\x6a\xcd\x26\x01\x2b\xbf\xbd\xed\x62\xce\xdf\x1f\x7e\xfd\x73\x1e\xbc\x61\xcb\x98\x5c\x48\x2b\x1a\x69\x8b\x4a\xda\xb0\x90\x36\x0c\xbb\x8f\xa6\x91\x36\x8f\xa4\x0d\x0d\xfd\xcf\x53\x69\x43\x2d\x6d\x2e\xa4\x4d\x53\x6a\x8b\xcf\x79\x22\x6d\x13\x3d\x9f\x6f\x42\x3a\x97\xc6\xf4\xb9\x89\xa5\x0d\x1b\x69\x53\xdc\x1b\x4a\x5b\xd4\x74\x1e\xb2\x20\x3b\x2c\xa5\x4d\x33\x69\xa3\x42\xda\xa8\x96\x36\x31\xf4\x3f\x52\x74\xbe\x0e\xa5\x35\x38\x30\x96\x44\xda\x58\x50\x7f\x02\x7d\xc6\xd4\x8f\x48\xa5\x4d\x22\x69\x53\x2d\x6d\x14\xd3\x67\x1d\x92\x8c\x46\xd3\xf7\xbc\x96\x36\xd7\xd2\x8a\x84\xbe\x37\xb5\xb4\x31\xc6\x80\xfb\x21\xa7\x26\x1d\xab\x42\xda\x18\x47\x4c\x7d\x60\x9e\xf0\x39\x8d\xa8\xaf\x30\x7a\x3e\x8f\x43\x57\xa4\x23\x3e\xbb\x7b\x42\x9a\x07\xcc\x47\x56\xd2\xfd\xee\xd8\x9a\x57\x1c\x46\x48\x5b\x42\xbf\x5c\xda\x3a\x92\x36\x8b\xb6\xe7\xff\xa2\xc5\x5b\xff\x13\x65\x4c\xe8\xc2\xda\x16\x39\xb6\xb0\x7a\x3c\x1a\xf5\x58\xc7\xe5\x78\x34\xba\xe8\x89\xba\x2e\x2e\xc7\xa3\xe9\x93\x63\xfb\xe5\x60\x38\xff\xe7\x70\x69\x7b\x38\x0e\x98\x9e\xd0\xff\xa8\x46\xc7\x90\xf6\x09\x20\x1d\xc4\xdd\xbc\xd9\x77\x97\x4f\x00\x92\x9b\xa0\x5f\x9f\x00\x90\x71\x13\x94\xc5\x65\x00\xdf\xbf\xd9\x86\x86\x49\x12\x67\x53\x77\x1e\x1e\x7d\x43\x1e\xff\xfb\x62\x66\x27\x22\x15\x45\x52\x44\x59\x94\x5c\x06\xe1\xf4\xf3\x78\xa4\xd0\xff\x77\x4e\xe3\x4f\x4e\xcd\x9b\x80\xb5\xc5\xe0\x6e\xdc\xdf\xcf\x4f\x0f\x44\x5d\xee\x7b\xeb\x7e\x20\xfb\x76\xf9\x7e\xf1\x55\xde\x5a\x92\x77\x38\x8f\x0b\xfd\x5e\xda\xe5\x6d\x55\x26\x6d\x98\x91\x97\xed\x5b\x6b\x55\x4b\x9b\xd5\xd2\xea\x94\x3c\x58\x08\x9f\xb5\x7a\x34\x3a\xc9\x5a\x3d\xb2\xd8\x5a\xbd\x49\xc0\x81\xb5\x7a\xe4\x0c\xb4\xd6\x7e\x8d\xce\x67\xad\x3d\xfa\xb0\xb5\x8a\xfc\x35\xad\xb5\x37\xaf\x3a\x9d\x64\x32\x4d\x20\x0a\x13\x53\x8a\xc0\x12\x20\x0f\xa0\xd6\x30\x5b\x00\xbe\x91\x36\x36\x64\x7e\x65\x22\x6d\x05\xe0\x6d\x88\x50\x54\x25\x6d\x16\x4b\xab\x8d\xb4\x0a\x04\xa0\xa5\x2d\x32\x69\x33\x90\x45\x29\x6d\x81\x23\x95\xb6\x4e\x09\x64\x61\xba\xa2\x22\xb9\x05\xc0\x1f\xe6\x5e\x49\x5b\xc3\x65\x8c\xb4\x22\x93\x36\x2d\x69\x5c\xee\xc8\x88\x80\xc2\x5c\xda\xbc\xa1\x76\x65\x49\x7d\xa0\x2f\xc8\x4a\x1a\x69\xeb\x84\x5c\xb0\x6a\xa8\xaf\x24\x27\xf9\xa9\x92\xb6\xd4\x24\x03\xfd\x27\x85\xb4\x75\x49\xe3\x73\x84\x0a\x97\x05\x71\x96\x44\x24\x2a\x65\x5d\x72\x22\x38\x77\xbd\x66\x57\x84\xcb\x2a\x69\x93\x94\x49\x2f\x96\x36\x4e\xa4\x2d\x8c\xb4\x35\x08\x29\x94\x56\xd4\xe4\xfe\x75\x2d\x6d\x09\x02\xc4\x3c\x84\x44\xb6\xb8\x17\x2e\xae\x31\xb6\x44\xda\x2c\x97\x36\xc2\xdc\xa7\x44\x7e\x78\x0e\x98\x83\xa2\x91\xb6\x64\x62\x02\xa1\xa2\x8d\xc1\xdc\xe6\xd2\x96\xe8\x57\x13\x49\x26\x25\x41\x08\x9e\x09\x9e\x35\x60\x25\xae\x69\x0e\x1a\x0e\x1e\xf6\xa1\x04\xcf\x2d\x14\xd2\x26\x20\x3f\xd6\xb3\x0b\x4a\x8e\x9b\xdb\x09\x98\x72\x5c\xa8\x03\x97\x21\x25\x84\x3d\x94\x39\x2e\x79\x10\xdc\x0c\xd6\xfa\x5c\xb8\x33\x4c\xd5\x16\x80\xb2\xd7\x46\xa0\xde\x8a\xcd\xd7\xb2\x27\x5c\x05\x0c\x0a\x96\x0c\x6b\x8a\xe7\xfa\x18\x14\xae\x08\xf6\xd4\x60\xd3\x86\x58\x34\xe2\x78\x16\xd0\xb4\xcf\xc6\x38\xd7\x64\xd2\x36\x39\x41\x4e\x1b\xff\xb6\x7d\x37\x0c\x45\x85\x20\xd8\x82\x9b\xc2\xc5\x4d\x41\xf0\xa2\x70\x5f\x21\x6d\x95\x90\x3b\xe2\x1c\xc6\x90\xc1\xf5\x0c\xc1\x15\xe0\x06\x10\x80\x78\x36\xe5\x78\xb7\xd6\x14\x07\x3b\x38\xd2\xe4\xa2\x80\x07\xc0\x09\xae\x57\x9a\xee\x87\xab\xc7\x80\xc9\x90\xe4\x00\x2e\x00\x33\x05\xc7\xd6\x35\xcb\x6c\xe5\xa0\x7d\xc9\x6d\x8b\x36\x0e\x57\x1c\x0b\x73\x4c\x5c\x28\x92\x99\x84\x04\x79\x80\x17\xc0\x60\x66\x08\xee\x55\x46\xf2\x01\x19\x65\x43\xb1\x79\x56\x10\x94\x15\x0c\xed\x45\x41\x30\xef\xee\x8b\xe9\x5c\x15\xd2\x67\xc5\xfd\x00\xc6\xa2\xf0\x10\x6e\xea\x8c\x20\x15\x50\x0d\x3a\x01\x7c\x79\xe0\x66\x88\x6d\x9d\x86\x39\x43\x24\xb7\xc0\x33\xac\x26\x79\x88\x3e\x43\xfa\x18\x0a\x41\x5f\x30\x13\x67\xc4\xa1\xa1\x9a\xb7\x60\x94\x94\xaf\x0a\x46\xbb\x15\xe1\xaf\xcb\xb2\xbf\x04\x79\x92\x36\x76\x47\x10\x54\xb3\xe5\x6f\xa1\x0e\xee\x77\xf7\x8a\x3d\xc4\x69\x03\x8d\x94\xbc\x53\x33\x81\xc3\x33\x70\x6f\x8b\x68\x09\x10\x4d\x4b\x5b\x09\x69\x0d\x82\x9c\x48\x5a\x15\x12\xc2\xc4\x0d\x21\x9d\xe0\x60\x4d\x84\x74\xec\x7b\x1d\x02\x2e\xb4\x4f\x13\x0a\xa6\x52\x4f\xbe\xd0\x35\x89\xa7\xb8\x58\x87\x18\xf2\xa7\xce\xb2\xfd\xbe\xf3\x74\xb4\x1e\xe6\x29\xfe\xd1\x9f\xcd\x2d\x3c\x0a\xb0\x0f\x14\xe2\x4b\x5d\xa0\x84\x17\xc4\xe1\xb9\x5c\x60\x67\xe9\xe3\x25\xf9\xf7\x98\x17\xf4\x72\x6f\x8f\x27\x18\xc1\x16\x9f\x48\x1b\x25\xbb\x16\xdf\x65\xe9\xe0\xaf\x9a\xb9\x5c\x94\x14\xd6\x7a\x2c\xbd\x6b\xae\x4e\x33\xf6\x2e\x49\xad\xbd\x77\x2f\x46\x1d\x9a\x7c\x97\x8c\xa1\x56\xdf\xa3\xc9\x19\x0d\xdf\xa7\x09\xdb\x7e\x1e\x9e\x64\xfb\x60\x8d\x73\xd8\x7e\xd7\xca\xde\xe9\x24\x10\x6b\xba\x0f\xe0\x1b\x2a\x69\x75\x44\x59\x1b\x4c\xce\x65\xaf\x39\x65\x9d\x30\x57\x84\x6b\x8a\x4b\x9e\xce\x34\x85\xb4\x59\xca\x19\x5d\x48\xe5\x49\xb8\x05\xcc\x1f\xe7\x10\x02\x21\x44\xd3\x82\x33\x2f\x41\x99\x32\xee\x45\xd8\xe6\xca\xab\x35\x65\x95\xc8\x86\xab\x9c\xb2\x61\x64\x6a\x15\xc2\xa7\x82\xb2\x34\x84\x5f\x39\xcc\x9c\x43\xbd\x0c\x61\x6a\x4e\x65\xd5\x88\x89\x07\x7a\x96\x9c\x9d\xc2\xdd\x10\xaa\x56\x25\xb9\x6a\x5a\x50\x58\x8b\xec\xbd\x56\x9c\x75\x27\x14\xee\x22\xc4\xc5\x98\xe1\xd6\x15\x32\x50\x84\x9b\x85\xb4\xa6\xa2\xff\x68\x57\x56\x34\x0e\xfc\xcf\x6b\xca\x98\x4d\x2e\xad\x56\x14\x2a\x0b\x64\x9f\x15\x41\x04\x32\x59\x93\x52\xe5\x00\xe1\x24\xee\x45\xb6\x1b\x2b\xba\x8e\x76\xaa\x24\x97\x45\xbb\x32\x22\xe8\x68\x14\x8d\x09\x99\x38\xe0\x08\x99\x30\xe6\x16\xa1\x6e\x57\x36\x0b\x68\x81\x2e\xd0\xc1\x95\x98\x6b\x8f\xfb\x7b\xcd\xe5\x14\x04\xf0\x0a\x23\x10\xe8\x59\x74\xde\xc7\x01\xaf\xa4\x61\x50\x70\x4c\xab\xb3\xa1\x41\xaf\x4a\x6d\x40\x18\xa5\xaf\x1a\x10\x1e\xae\xe5\xbf\x54\x39\xd7\x47\x86\xbe\x72\x6e\x94\x93\x77\x14\x5c\x87\xf2\x95\x73\xfd\x2a\x9d\x64\xb5\x3e\x61\x6c\xb5\xfe\xad\x10\x07\x56\xeb\x93\x34\xd0\x6a\x8f\x68\x75\x3e\xab\xed\x53\xe9\x2f\x51\xd4\xed\xde\x60\xf2\x75\xd5\xdc\xc2\x10\x8f\x65\xc0\xe5\xf8\x99\xc7\x92\xad\xe5\x2e\x58\x67\x96\xd1\x12\x19\x38\x08\xc9\x85\x12\xc4\x57\xb0\x6a\xdc\x5f\x0a\x4e\xdd\x43\x96\x57\x52\xdb\x92\x2d\x1c\x5e\x11\x27\x54\x12\x51\x0d\xf1\x04\xbc\x06\x3c\x07\x0e\x73\x25\x19\x43\x61\x1e\xc2\x34\xe7\x35\x15\x55\x1d\x11\x06\xe2\x3e\xf0\x45\x98\x33\x0f\x25\x54\xa6\x00\x07\xb4\x5e\x91\x68\x69\x43\xae\xc8\x0a\xe6\xca\xba\x26\x9e\x74\xa5\x8d\x90\xc6\x10\x97\xcc\x49\x21\x55\xb0\xc1\xd9\x22\xa1\xb0\x31\x6b\x48\x6e\x5e\x90\xe7\x55\x05\xc9\x04\x97\x83\xdf\xd0\xa6\x08\x49\xa7\x98\xab\xa9\x68\xdb\x68\xaa\x78\xbb\x72\x07\xfa\x37\x54\x36\xa9\xc0\xcb\x48\xbe\x72\x2a\xfd\x94\xdc\x57\xd9\xd0\x52\x25\x74\x07\x77\x97\xcc\xbd\x98\x43\xc7\x93\x21\x8d\x03\x73\xa1\x33\xe6\x5a\x45\xb2\x6b\x41\xbc\x0a\x1e\x54\x11\x85\xc3\x79\x49\x8b\x3e\x98\x8f\xbc\xa1\xf2\x49\x5e\x3d\x57\x77\x31\x76\xe8\x8e\x58\x45\x97\x74\xad\x60\x6e\xc7\xf3\x7d\x7a\xc6\x86\x74\x28\x15\x7d\x77\xd5\xe4\x98\x6c\xc9\xc5\x2f\x05\xc5\x15\x09\x57\xd8\x91\x30\x02\x9d\x42\x6e\xe3\x64\x56\x5c\xea\x51\x54\xa6\x02\x77\xe3\x79\xb9\x8a\x77\x4a\x32\x73\xae\x68\x23\x76\x70\xcf\x21\xa6\x2a\x36\xf4\x41\x7f\xaa\xa6\x39\x81\xec\x3c\x3f\xb4\x5d\x1c\x98\x4b\xcd\x25\xa3\x98\x51\xb6\x0b\x19\x7b\xfc\xe6\x04\x68\xec\x91\xe6\xb0\xb1\x77\x1b\xd8\x1e\x38\xf6\xc8\x1a\x84\x8e\xc7\x35\x3b\x17\x3c\x1e\xd1\x8a\xf1\x31\x4a\xa2\xd7\x05\xc8\xc3\x0d\x76\x2f\x45\xeb\x2e\x2f\xad\x29\x2f\x85\x43\x02\x84\x5a\xaa\xf7\x51\xbb\xe1\x6b\x48\x02\xe2\x94\xfe\x77\x1b\xb0\x57\xaf\x93\x0c\xd8\x2b\x8d\x0d\xb8\x67\x9b\xe2\x81\x01\x7b\x65\x0d\x34\xe0\x63\x9a\x9d\xcf\x80\x7b\xb5\x6a\x09\xfe\x55\xf7\x18\xf8\xf6\x7f\x7e\x05\xc5\x27\x04\xb1\x48\x23\x91\xaa\x16\x2d\xc5\x27\x44\x8b\xa0\x78\x93\xf1\xca\x02\x2f\x50\x82\x36\xa3\x94\xea\x81\x9a\xad\xd3\xed\x00\x2a\x9f\xf7\x13\xb8\x15\x8d\x88\xd2\x39\xa4\x95\x89\xe2\x85\xd4\x94\xa0\x1b\xe9\x22\xa8\x34\x6d\xb8\xfa\xcf\x34\x09\x0a\x43\x48\x00\xba\x32\x0c\xe1\x2e\x1d\x2b\xa9\x82\x93\x45\xb4\xea\x80\xf4\x13\x54\x85\x31\xe4\x21\x51\x6d\xc1\xe1\x04\x42\x0b\xdc\x07\x5d\x40\x45\xa0\x1d\x8c\x33\xe7\xaa\x0e\x74\x76\xe3\x50\x44\x91\xa0\x55\x50\x15\x52\x42\xd0\x6d\x0a\x8a\xcc\x48\x7f\xfc\x6f\x04\xd5\x4c\x53\x4d\x14\x0d\x1a\x05\xed\x96\xec\xdd\x11\x7f\x87\x77\xa7\x1c\x1a\x40\xb7\xb2\x4d\x8f\x1b\xa2\xb2\xba\xa4\xb9\x54\x15\x95\x08\x90\xce\x82\xf6\x30\x47\x08\x5b\x30\xce\x92\x77\x30\x69\x4e\x00\x40\xd7\xa0\x47\x84\x5f\x40\x08\xa4\xb5\x6e\xa1\x39\xa1\x67\x20\x2a\x69\x85\x26\x3a\x55\x5a\x5a\x53\xf2\xee\xa7\x8c\xe6\x02\x6d\x55\x42\x0b\xc2\xe8\xdb\xad\x1e\xf1\x8e\x27\xd0\x37\xc6\x0a\xfa\xac\x52\x7a\x5e\x08\xbd\xba\xa8\x14\xd4\x9c\x0a\x5a\xd8\x47\x28\x53\xe9\x6e\x24\xea\xb5\xd0\x13\xb0\xa8\x57\x9e\x43\xa3\x23\x7b\xa2\xf7\xf0\xa8\x57\xde\x20\x44\x1a\xa2\xe1\xb9\x30\xe9\xa8\x6e\x4f\xa8\xf4\xca\xb0\xd4\xb5\xe7\xfc\x25\xf3\x65\xad\x29\x6a\xc5\x81\x28\x1f\xdf\x5d\x05\xca\xf4\x13\x2c\xa2\x6e\x23\x28\x92\xae\x79\x81\xb5\xdb\xac\x7b\x34\x3c\xc9\xac\x7b\xe4\xb1\x59\xf7\xee\xe3\x3f\x30\xeb\x1e\x79\x03\xcd\xfa\xb8\x86\xe7\x33\xeb\x23\xba\xb5\xd1\xe2\x17\x17\x85\xcf\x69\xd5\xdd\xaf\x49\x7c\x7d\x36\x8d\x4c\x15\x70\x5e\x64\x5b\x55\xe1\x84\xb2\x3c\xb7\x44\x57\x52\xb5\xb5\x2c\xc8\x2e\x41\x77\x6e\xd3\x2b\x2f\x80\xfb\xe8\x36\x16\xbc\x77\x27\xa5\xcd\xa8\xa0\x8a\x94\xb3\x40\xd0\x65\xc3\x95\x61\x57\x99\x56\xbc\x88\x5f\x71\x66\x2d\xc8\x67\x72\x4d\x59\x74\xcc\x1b\x7d\x0b\xa6\x06\x64\x73\x6e\x33\x70\x4a\x54\x23\x78\x39\x10\x34\xee\xa8\x55\x51\x46\x0a\x8a\x40\x86\xee\xaa\xbe\x39\xef\x8f\x62\x9a\xc7\xf8\x5c\xad\x2a\x24\xaa\x8a\x39\x5b\x75\x7b\xc3\x04\x65\x75\x86\xe9\x48\x33\xcd\x81\x8a\xe1\xc7\x6e\xf3\xb0\xa0\x31\x81\x1a\x5d\x26\x1c\x53\x5f\xa0\x31\xf8\x3c\x74\x70\xd9\xb4\xa1\x0a\x2f\x28\xd7\x55\xd7\x39\x84\xc9\x63\xba\x27\x2b\xa8\x7f\x84\x23\x98\x17\x64\xca\x08\x6d\x40\xbd\x11\xe3\x47\x9c\x13\x45\x23\xbb\x2c\x81\x0d\x31\xd1\xbb\xa8\x29\x5c\x82\xbe\xc8\xe0\x71\x0d\x59\x29\xe8\x36\xe4\xec\x1c\x98\x83\xd0\xa4\xe4\xe5\x56\x84\x2d\xc8\x5e\x5d\xbf\x35\xd1\xbb\x1b\x77\x42\x61\x85\x8e\x09\x87\xf0\x9c\xf1\xdc\x31\xa7\x08\x69\xea\x82\xb3\xf7\x98\x2a\xd8\x98\x5f\xd7\x27\x87\x26\x6e\xf3\xb4\xa0\x67\x0a\xaa\xd7\xbc\xff\x0d\xb6\x52\x21\x4b\x56\xf4\x3c\x53\xfe\x1e\x71\xad\x10\x21\x09\x6c\xab\x29\x28\xec\xc0\x98\xda\xbd\x70\x71\x44\xcf\x07\xa1\x14\xc2\x2f\x8c\x5f\xf0\xe6\x6a\x11\xd3\xfc\x86\xe2\x10\x47\x1b\x5e\x85\xc0\x3c\xc3\x26\x61\x57\xcf\xf7\x3d\xe3\x68\x8f\x4f\x9d\x80\xa2\x3d\xd2\x1c\x86\xf6\xbe\xe8\xb4\x87\xa0\x3d\xb2\x06\xe1\xe7\x71\xcd\xce\x85\x9e\x47\xb4\x62\xec\x8c\xb3\xf8\x75\xc1\xf3\xf0\x15\xb2\x97\xdc\x0f\xed\xdb\xcd\xd5\xb7\x2f\x1a\x6d\x11\xe3\xa3\x2f\x38\x36\x0c\xbe\x2b\x18\xe8\xd1\xed\x24\x23\xf6\x4a\x63\x23\xee\x79\x19\xef\xc0\x88\xbd\xb2\x06\x1a\xf1\x31\xcd\xce\x67\xc4\xbd\x5a\xb5\x71\xed\xab\x6e\x0a\xda\x7f\xcb\xf1\xef\xb5\x2b\xa8\xe0\xbd\x76\x08\x2d\x40\xd5\x22\xe3\x7d\x10\x8a\xb2\x3e\x64\x96\x05\xbf\x23\xe3\x0a\xc7\x15\x79\x86\x0b\x3f\x78\x91\x15\x14\x1e\x31\x55\xe0\x5e\xb4\x69\x5a\x5d\x3b\xde\x83\x41\x98\x80\xf1\x2a\x41\x34\x1c\x17\xdd\x1e\xd4\x39\xb3\x27\xf8\x4e\xa7\x1c\xe7\x35\x9e\x37\x54\xf7\xfc\xa5\xb3\xfd\x20\x4f\xe9\xd3\xe0\x5c\x3e\xe2\xd5\x81\xbd\x23\xcd\x5e\xd7\x3b\x0e\x5e\xf4\xfd\x3b\x6e\x19\x2a\x78\xed\xa2\x48\x77\xdd\xc4\xf7\xaa\x57\xd3\x6e\xc9\x2d\x28\x9a\x8f\xbc\x26\xee\x9b\x9e\x93\xec\xdc\x27\x8c\x8d\xdd\xff\xce\xf5\x81\xc5\xfb\x24\x0d\x34\xfb\x23\x5a\x9d\xcf\xf6\xfb\x54\x62\x07\x48\x5e\x35\x3f\xdc\x79\x93\xfd\x25\x4d\xbf\x6f\x25\xe1\x4b\xf7\x8d\xba\xe2\x09\xc7\x46\x6e\xbb\x52\x4d\x89\x28\x0e\x5c\x77\x6d\x23\x6a\x8b\xc3\x8d\x27\xe5\xf1\xc6\xdd\x71\x94\x5b\x0a\x54\x5c\x4f\xe6\xdd\xec\x5d\x2e\xd2\x35\x81\x27\x38\x47\x97\x18\xe7\x16\xdd\x3f\x35\xb0\xe7\x10\x5d\xad\x07\xb9\x42\xcf\xe8\xcf\xe5\x04\x3e\x05\x5a\xf3\x7f\x55\xfc\xdf\xff\xb9\x86\x97\x8b\x8e\x86\xd8\xff\x97\xec\x18\xed\xf3\x01\x9f\x8d\x6b\x5e\x37\xa8\x42\x2e\x3e\x78\x5e\x7c\xea\x9c\xa5\x93\x8c\xbc\x43\x0e\x5b\x79\xe7\xcf\x66\x1c\x98\x79\x47\xfb\x81\x76\xee\xd7\xe0\x7c\x86\xee\xd1\xa1\x4d\x66\x5f\x35\x0f\x38\xfc\xf5\x91\xbf\xcf\x5b\xf8\xba\x78\xce\x81\x75\x49\xff\xf7\xdf\xc4\x6f\xfd\xa8\x7d\x57\x60\x7b\x2c\x90\xed\x74\x12\xbc\x1e\x55\xed\x66\x02\xae\x60\x17\xd2\xbd\x65\x46\xe1\x93\x49\xa9\xb0\x55\x70\x48\xe6\xde\x4f\xe6\x03\xd9\x88\xdb\x82\xc2\x1b\xda\x8a\x8c\xb2\x0f\x57\x10\xe5\x75\x40\xc3\xf7\x96\xc9\xb3\xbc\x8c\xb7\x03\xf5\xbd\x85\x9f\xf3\xda\x61\xeb\xe3\x99\xa7\x98\xef\x79\x9e\x27\x78\xa5\x47\x92\xf3\x4b\xef\x6f\xd6\xec\x79\xa6\x47\xc6\x20\xdf\xec\xd7\xe4\x5c\xde\xd9\xa3\x49\x9b\xa7\x87\xaf\x1a\x89\x75\xfe\x02\xd0\x4b\x56\x9b\xba\xbc\xcc\xfb\xf6\x7d\x42\xec\x86\x1c\x3c\x6e\xfc\xdb\x35\xfb\x94\x3a\xc9\x54\xfd\xe2\xd8\x5e\xfb\x7e\x46\xe9\xc0\x68\xfd\xd2\x06\x5a\xee\x51\xed\xce\x67\xbe\xfd\x8a\xfd\x25\xb6\x6e\x6e\xff\x44\xd5\xe9\xec\x02\x7b\xd3\x21\x2f\x95\xf0\xab\xf2\x71\xcb\x0c\x29\xa1\x3e\x6c\xd6\x18\x8a\xd0\x4d\x49\xa5\xfa\xda\xd0\x4e\x8f\x38\x65\xa4\x67\x74\x16\xbc\x54\xe3\x7e\x07\x25\x24\x7b\x85\x2c\xb4\x37\x6c\xbb\x40\x70\x65\x68\x6c\x40\xe7\x94\xdf\x41\x85\xac\x92\x77\x65\x34\xfc\x5a\x7b\xbb\xa9\x51\xe4\xb4\x5c\x01\xe6\xa9\x4b\xda\x75\x90\xf3\x92\x4e\xc5\x2f\x46\x68\x7e\x77\x55\x18\x8a\xb2\xa2\x84\xf4\x42\xd4\xd6\xfa\x19\x74\xad\x04\xa1\x7e\xcc\xcb\x4e\x5d\xbb\x17\x4c\xce\x3f\x2f\x20\x28\xd2\x4b\x3c\x95\xdd\x83\xa7\x70\x82\xa3\x1d\xc8\x70\xde\xd5\xf1\x13\x64\x7b\x2e\x75\xd0\x6e\x90\x1f\xf9\x46\x7c\x2e\xe7\x39\x1c\xf7\xff\x02\x00\x00\xff\xff\x7d\x68\x51\x69\x00\x50\x00\x00")

func bindataGoBytes() ([]byte, error) {
	return bindataRead(
		_bindataGo,
		"bindata.go",
	)
}

func bindataGo() (*asset, error) {
	bytes, err := bindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bindata.go", size: 36864, mode: os.FileMode(436), modTime: time.Unix(1519518769, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"0_create_users_table.up.sql": _0_create_users_tableUpSql,
	"0_drop_users_table.down.sql": _0_drop_users_tableDownSql,
	"10_add_reports_delete_cascade.up.sql": _10_add_reports_delete_cascadeUpSql,
	"10_remove_reports_delete_cascade.down.sql": _10_remove_reports_delete_cascadeDownSql,
	"11_add_lat_long.up.sql": _11_add_lat_longUpSql,
	"11_drop_lat_long.down.sql": _11_drop_lat_longDownSql,
	"1_create_events_table.up.sql": _1_create_events_tableUpSql,
	"1_drop_events_table.down.sql": _1_drop_events_tableDownSql,
	"2_create_matches_table.up.sql": _2_create_matches_tableUpSql,
	"2_drop_matches_table.down.sql": _2_drop_matches_tableDownSql,
	"3_create_alliances_table.up.sql": _3_create_alliances_tableUpSql,
	"3_drop_alliances_table.down.sql": _3_drop_alliances_tableDownSql,
	"4_create_reports_table.up.sql": _4_create_reports_tableUpSql,
	"4_drop_reports_table.down.sql": _4_drop_reports_tableDownSql,
	"5_add_event_type.up.sql": _5_add_event_typeUpSql,
	"5_remove_event_type.down.sql": _5_remove_event_typeDownSql,
	"6_add_bluewon.down.sql": _6_add_bluewonDownSql,
	"6_remove_bluewon.up.sql": _6_remove_bluewonUpSql,
	"7_add_photos_table.up.sql": _7_add_photos_tableUpSql,
	"7_remove_photos_table.down.sql": _7_remove_photos_tableDownSql,
	"8_add_isdmin.up.sql": _8_add_isdminUpSql,
	"8_remove_isadmin.down.sql": _8_remove_isadminDownSql,
	"9_add_reports_cascade.up.sql": _9_add_reports_cascadeUpSql,
	"9_remove_reports_cascade.down.sql": _9_remove_reports_cascadeDownSql,
	"bindata.go": bindataGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"0_create_users_table.up.sql": &bintree{_0_create_users_tableUpSql, map[string]*bintree{}},
	"0_drop_users_table.down.sql": &bintree{_0_drop_users_tableDownSql, map[string]*bintree{}},
	"10_add_reports_delete_cascade.up.sql": &bintree{_10_add_reports_delete_cascadeUpSql, map[string]*bintree{}},
	"10_remove_reports_delete_cascade.down.sql": &bintree{_10_remove_reports_delete_cascadeDownSql, map[string]*bintree{}},
	"11_add_lat_long.up.sql": &bintree{_11_add_lat_longUpSql, map[string]*bintree{}},
	"11_drop_lat_long.down.sql": &bintree{_11_drop_lat_longDownSql, map[string]*bintree{}},
	"1_create_events_table.up.sql": &bintree{_1_create_events_tableUpSql, map[string]*bintree{}},
	"1_drop_events_table.down.sql": &bintree{_1_drop_events_tableDownSql, map[string]*bintree{}},
	"2_create_matches_table.up.sql": &bintree{_2_create_matches_tableUpSql, map[string]*bintree{}},
	"2_drop_matches_table.down.sql": &bintree{_2_drop_matches_tableDownSql, map[string]*bintree{}},
	"3_create_alliances_table.up.sql": &bintree{_3_create_alliances_tableUpSql, map[string]*bintree{}},
	"3_drop_alliances_table.down.sql": &bintree{_3_drop_alliances_tableDownSql, map[string]*bintree{}},
	"4_create_reports_table.up.sql": &bintree{_4_create_reports_tableUpSql, map[string]*bintree{}},
	"4_drop_reports_table.down.sql": &bintree{_4_drop_reports_tableDownSql, map[string]*bintree{}},
	"5_add_event_type.up.sql": &bintree{_5_add_event_typeUpSql, map[string]*bintree{}},
	"5_remove_event_type.down.sql": &bintree{_5_remove_event_typeDownSql, map[string]*bintree{}},
	"6_add_bluewon.down.sql": &bintree{_6_add_bluewonDownSql, map[string]*bintree{}},
	"6_remove_bluewon.up.sql": &bintree{_6_remove_bluewonUpSql, map[string]*bintree{}},
	"7_add_photos_table.up.sql": &bintree{_7_add_photos_tableUpSql, map[string]*bintree{}},
	"7_remove_photos_table.down.sql": &bintree{_7_remove_photos_tableDownSql, map[string]*bintree{}},
	"8_add_isdmin.up.sql": &bintree{_8_add_isdminUpSql, map[string]*bintree{}},
	"8_remove_isadmin.down.sql": &bintree{_8_remove_isadminDownSql, map[string]*bintree{}},
	"9_add_reports_cascade.up.sql": &bintree{_9_add_reports_cascadeUpSql, map[string]*bintree{}},
	"9_remove_reports_cascade.down.sql": &bintree{_9_remove_reports_cascadeDownSql, map[string]*bintree{}},
	"bindata.go": &bintree{bindataGo, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

