// Code generated by go-bindata.
// sources:
// 0_create_users_table.up.sql
// 0_drop_users_table.down.sql
// 10_add_reports_delete_cascade.up.sql
// 10_remove_reports_delete_cascade.down.sql
// 11_add_lat_long.up.sql
// 11_drop_lat_long.down.sql
// 12_add_end_date_rename_start_date.up.sql
// 12_drop_end_date_rename_start_date.down.sql
// 13_add_notes_field.up.sql
// 13_remove_notes_field.down.sql
// 14_add_youtube_url_table.up.sql
// 14_remove_youtube_url.down.sql
// 15_add_is_blue_reports.down.sql
// 15_remove_is_blue_reports.up.sql
// 16_create_picklist_tables.up.sql
// 17_drop_picklist_tables.down.sql
// 1_create_events_table.up.sql
// 1_drop_events_table.down.sql
// 2_create_matches_table.up.sql
// 2_drop_matches_table.down.sql
// 3_create_alliances_table.up.sql
// 3_drop_alliances_table.down.sql
// 4_create_reports_table.up.sql
// 4_drop_reports_table.down.sql
// 5_add_event_type.up.sql
// 5_remove_event_type.down.sql
// 6_add_bluewon.down.sql
// 6_remove_bluewon.up.sql
// 7_add_photos_table.up.sql
// 7_remove_photos_table.down.sql
// 8_add_isdmin.up.sql
// 8_remove_isadmin.down.sql
// 9_add_reports_cascade.up.sql
// 9_remove_reports_cascade.down.sql
// bindata.go
// DO NOT EDIT!

package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __0_create_users_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\xf0\xf3\x0f\x51\x70\x8d\xf0\x0c\x0e\x09\x56\x28\x2d\x4e\x2d\x2a\x56\xd0\xe0\xe2\x04\x31\xf2\x12\x73\x53\x15\x42\x5c\x23\x42\xc0\x2a\xfc\x42\x7d\x7c\x14\x42\xfd\x3c\x03\x43\x5d\x75\xb8\x38\x33\x12\x8b\x33\x52\x53\x02\x12\x8b\x8b\xcb\xf3\x8b\x52\x50\x55\x71\x69\x02\x02\x00\x00\xff\xff\xe1\x96\xd7\xd2\x62\x00\x00\x00")

func _0_create_users_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__0_create_users_tableUpSql,
		"0_create_users_table.up.sql",
	)
}

func _0_create_users_tableUpSql() (*asset, error) {
	bytes, err := _0_create_users_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0_create_users_table.up.sql", size: 98, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __0_drop_users_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\xb6\x06\x04\x00\x00\xff\xff\xbd\x6d\xc5\x8d\x11\x00\x00\x00")

func _0_drop_users_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__0_drop_users_tableDownSql,
		"0_drop_users_table.down.sql",
	)
}

func _0_drop_users_tableDownSql() (*asset, error) {
	bytes, err := _0_drop_users_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0_drop_users_table.down.sql", size: 17, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __10_add_reports_delete_cascadeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcb\xbd\xaa\x02\x31\x14\xc4\xf1\xfe\x3e\xc5\x94\xbb\xcf\x70\xab\x63\xce\xac\x2c\x86\x64\x39\x89\x85\xd5\x62\x11\x1b\xf1\x83\x44\x0b\xdf\x5e\x16\x59\x6c\x6c\x66\xe0\x07\x7f\xf1\x99\x86\x2c\x1b\x4f\xd4\x72\xbf\xd5\x47\x83\x5a\x9c\xe0\x62\x48\xd9\x64\x0c\x79\xf5\xf9\xf3\xa5\xce\xa7\x73\x79\xfd\xff\xfd\x4a\x45\x15\x43\x34\x8e\xdb\x80\x1d\x0f\xdd\x9a\xf4\x30\x0e\x34\x06\xc7\x84\x67\x2b\xb5\x75\xcb\x5e\x8f\x97\xd2\x23\x06\xec\x27\x95\x4c\x38\x49\x4e\x94\x8b\x28\x3d\xbf\xf2\x0e\x00\x00\xff\xff\xcf\x01\x46\xde\xa7\x00\x00\x00")

func _10_add_reports_delete_cascadeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__10_add_reports_delete_cascadeUpSql,
		"10_add_reports_delete_cascade.up.sql",
	)
}

func _10_add_reports_delete_cascadeUpSql() (*asset, error) {
	bytes, err := _10_add_reports_delete_cascadeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "10_add_reports_delete_cascade.up.sql", size: 167, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __10_remove_reports_delete_cascadeDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x81\x89\xc7\x43\xe8\xd4\xa2\xf8\xb4\xec\xd4\x4a\x6b\x2e\x6c\x5a\x1d\x5d\x5c\x14\xdc\xfc\x83\x5c\x3d\xdd\xfd\x14\xbc\x5d\x23\x35\x60\x5a\x34\x15\x82\x5c\xdd\x5c\x83\x5c\xfd\x9c\x5d\x83\x15\x4a\x8b\x53\x8b\x8a\x35\x40\x64\x5e\x62\x6e\xaa\xa6\x82\xbf\x9f\x42\x68\x80\x8b\x63\x88\xab\x82\xb3\x63\xb0\xb3\xa3\x8b\x2b\x20\x00\x00\xff\xff\xd6\xa5\x2c\xc4\x95\x00\x00\x00")

func _10_remove_reports_delete_cascadeDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__10_remove_reports_delete_cascadeDownSql,
		"10_remove_reports_delete_cascade.down.sql",
	)
}

func _10_remove_reports_delete_cascadeDownSql() (*asset, error) {
	bytes, err := _10_remove_reports_delete_cascadeDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "10_remove_reports_delete_cascade.down.sql", size: 149, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __11_add_lat_longUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x49\x2c\x51\x28\x4a\x4d\xcc\xb1\xe6\x22\xa0\x2e\x3f\x2f\x1d\xaa\x10\x10\x00\x00\xff\xff\x85\xb1\x54\x59\x51\x00\x00\x00")

func _11_add_lat_longUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__11_add_lat_longUpSql,
		"11_add_lat_long.up.sql",
	)
}

func _11_add_lat_longUpSql() (*asset, error) {
	bytes, err := _11_add_lat_longUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "11_add_lat_long.up.sql", size: 81, mode: os.FileMode(436), modTime: time.Unix(1519604808, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __11_drop_lat_longDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x49\x2c\xb1\xe6\x22\xa4\x26\x3f\x2f\xdd\x9a\x0b\x10\x00\x00\xff\xff\x97\xf4\x31\x93\x49\x00\x00\x00")

func _11_drop_lat_longDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__11_drop_lat_longDownSql,
		"11_drop_lat_long.down.sql",
	)
}

func _11_drop_lat_longDownSql() (*asset, error) {
	bytes, err := _11_drop_lat_longDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "11_drop_lat_long.down.sql", size: 73, mode: os.FileMode(436), modTime: time.Unix(1519691743, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __12_add_end_date_rename_start_dateUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xcd\x4b\x71\x49\x2c\x49\x55\x08\xf1\xf4\x75\x0d\x0e\x71\xf4\x0d\x08\x89\x52\xf0\xf3\x0f\x51\xf0\x0b\xf5\xf1\xb1\xe6\x02\x04\x00\x00\xff\xff\x34\x34\x21\xbd\x3c\x00\x00\x00")

func _12_add_end_date_rename_start_dateUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__12_add_end_date_rename_start_dateUpSql,
		"12_add_end_date_rename_start_date.up.sql",
	)
}

func _12_add_end_date_rename_start_dateUpSql() (*asset, error) {
	bytes, err := _12_add_end_date_rename_start_dateUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "12_add_end_date_rename_start_date.up.sql", size: 60, mode: os.FileMode(436), modTime: time.Unix(1519691743, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __12_drop_end_date_rename_start_dateDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xcd\x4b\x71\x49\x2c\x49\xb5\xe6\x02\x04\x00\x00\xff\xff\x5f\x1d\xc8\xf2\x28\x00\x00\x00")

func _12_drop_end_date_rename_start_dateDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__12_drop_end_date_rename_start_dateDownSql,
		"12_drop_end_date_rename_start_date.down.sql",
	)
}

func _12_drop_end_date_rename_start_dateDownSql() (*asset, error) {
	bytes, err := _12_drop_end_date_rename_start_dateDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "12_drop_end_date_rename_start_date.down.sql", size: 40, mode: os.FileMode(436), modTime: time.Unix(1519691743, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __13_add_notes_fieldUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\xcb\x2f\x49\x2d\x56\x08\x71\x8d\x08\x01\x04\x00\x00\xff\xff\xfe\xf0\xf7\xb7\x29\x00\x00\x00")

func _13_add_notes_fieldUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__13_add_notes_fieldUpSql,
		"13_add_notes_field.up.sql",
	)
}

func _13_add_notes_fieldUpSql() (*asset, error) {
	bytes, err := _13_add_notes_fieldUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "13_add_notes_field.up.sql", size: 41, mode: os.FileMode(436), modTime: time.Unix(1519691743, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __13_remove_notes_fieldDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\xcb\x2f\x49\x2d\x06\x04\x00\x00\xff\xff\xd9\x75\x26\xc9\x25\x00\x00\x00")

func _13_remove_notes_fieldDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__13_remove_notes_fieldDownSql,
		"13_remove_notes_field.down.sql",
	)
}

func _13_remove_notes_fieldDownSql() (*asset, error) {
	bytes, err := _13_remove_notes_fieldDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "13_remove_notes_field.down.sql", size: 37, mode: os.FileMode(436), modTime: time.Unix(1519691743, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __14_add_youtube_url_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\xa8\xcc\x2f\x2d\x29\x4d\x4a\x0d\x0d\xf2\x51\x08\x71\x8d\x08\x01\x04\x00\x00\xff\xff\x90\x0a\x4c\xbe\x2e\x00\x00\x00")

func _14_add_youtube_url_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__14_add_youtube_url_tableUpSql,
		"14_add_youtube_url_table.up.sql",
	)
}

func _14_add_youtube_url_tableUpSql() (*asset, error) {
	bytes, err := _14_add_youtube_url_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "14_add_youtube_url_table.up.sql", size: 46, mode: os.FileMode(436), modTime: time.Unix(1519871717, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __14_remove_youtube_urlDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xa8\xcc\x2f\x2d\x29\x4d\x4a\x0d\x0d\xf2\x01\x04\x00\x00\xff\xff\x16\xd5\x03\x4c\x2a\x00\x00\x00")

func _14_remove_youtube_urlDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__14_remove_youtube_urlDownSql,
		"14_remove_youtube_url.down.sql",
	)
}

func _14_remove_youtube_urlDownSql() (*asset, error) {
	bytes, err := _14_remove_youtube_urlDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "14_remove_youtube_url.down.sql", size: 42, mode: os.FileMode(436), modTime: time.Unix(1519871717, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __15_add_is_blue_reportsDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x09\x80\x30\x0c\x05\xd0\x55\xfe\x2a\xa9\x8d\xa7\x6f\x02\x92\x0e\xe0\xa1\x82\x50\x50\x1a\xdd\xdf\x27\x0c\xdd\x11\x52\xa8\x98\xfd\xb9\xe7\x9b\x90\x5a\xb1\x38\xdb\x66\xb8\xb2\x8c\xaf\xa3\xb8\x53\xc5\x60\x1e\xb0\x46\xa2\xea\x2a\x8d\x81\xf3\x18\xd9\xff\x00\x00\x00\xff\xff\x9b\x96\x86\xb6\x44\x00\x00\x00")

func _15_add_is_blue_reportsDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__15_add_is_blue_reportsDownSql,
		"15_add_is_blue_reports.down.sql",
	)
}

func _15_add_is_blue_reportsDownSql() (*asset, error) {
	bytes, err := _15_add_is_blue_reportsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "15_add_is_blue_reports.down.sql", size: 68, mode: os.FileMode(436), modTime: time.Unix(1520552344, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __15_remove_is_blue_reportsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x2c\x76\xca\x29\x4d\xe5\x02\x04\x00\x00\xff\xff\xb0\xd4\x44\x2f\x27\x00\x00\x00")

func _15_remove_is_blue_reportsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__15_remove_is_blue_reportsUpSql,
		"15_remove_is_blue_reports.up.sql",
	)
}

func _15_remove_is_blue_reportsUpSql() (*asset, error) {
	bytes, err := _15_remove_is_blue_reportsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "15_remove_is_blue_reports.up.sql", size: 39, mode: os.FileMode(436), modTime: time.Unix(1520552344, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __16_create_picklist_tablesUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xc1\x4e\x03\x21\x14\x45\xf7\x7c\xc5\x5d\x42\xe2\x1f\xb8\xc2\xe6\x8d\x21\x45\x6a\x00\x93\x76\xd9\x38\x2f\x86\xd4\xa2\x19\x50\xd3\xbf\x37\x30\x19\x6d\xd5\xc4\x0d\xc9\xe3\xc2\xe1\x1e\x56\x9e\x74\x24\x44\x7d\x63\x09\x66\x80\xdb\x44\xd0\xd6\x84\x18\xf0\x9a\x1e\x0f\xcf\xa9\xd4\x02\x29\x00\x20\x8d\x08\xe4\x8d\xb6\xb8\xf7\xe6\x4e\xfb\x1d\xd6\xb4\xbb\xea\x11\xbf\x73\xae\x6b\x3e\x21\xd2\x36\x76\x86\x7b\xb0\x76\xce\xf2\xfe\xc8\x7d\x7f\x1e\x5f\x3e\x32\x4f\x67\xf3\xb0\xf1\x64\x6e\x5d\x63\xc9\x05\xa3\xe0\x69\x20\x4f\x6e\x45\x61\x66\x17\x79\xe0\x93\xfa\x7d\xa3\xd3\x2e\x8e\xbf\x15\x9e\x8a\x6c\x6b\x7b\x58\x09\x75\x2d\xc4\x3f\x92\x8b\xe0\x22\x6c\x46\xa4\x5c\xf9\x89\xa7\x1f\x2a\x95\xf7\xc7\xbf\x14\xcf\x1b\x7d\x43\x2e\x6a\x7d\x7d\xa6\x4c\x63\x2b\xf5\x19\x00\x00\xff\xff\xb6\xfa\xb8\x75\x78\x01\x00\x00")

func _16_create_picklist_tablesUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__16_create_picklist_tablesUpSql,
		"16_create_picklist_tables.up.sql",
	)
}

func _16_create_picklist_tablesUpSql() (*asset, error) {
	bytes, err := _16_create_picklist_tablesUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "16_create_picklist_tables.up.sql", size: 376, mode: os.FileMode(436), modTime: time.Unix(1521399086, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __17_drop_picklist_tablesDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\xc8\x4c\xce\xce\xc9\x2c\x2e\x29\xb6\xe6\x42\x13\x2d\xb6\x06\x04\x00\x00\xff\xff\xe9\x8c\x2c\xf7\x27\x00\x00\x00")

func _17_drop_picklist_tablesDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__17_drop_picklist_tablesDownSql,
		"17_drop_picklist_tables.down.sql",
	)
}

func _17_drop_picklist_tablesDownSql() (*asset, error) {
	bytes, err := _17_drop_picklist_tablesDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "17_drop_picklist_tables.down.sql", size: 39, mode: os.FileMode(436), modTime: time.Unix(1521398847, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1_create_events_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8b\x4d\x0a\xc2\x30\x10\x85\xd7\x99\x53\xbc\xa5\x42\x2f\x11\x65\x84\x60\x12\x4b\xf2\x84\xd6\x5d\xc1\x01\x41\xac\x60\x83\xe0\xed\x45\x44\xb7\xdf\xcf\xb6\xa8\xa7\x82\x7e\x13\x15\x61\x87\x7c\x20\x74\x08\x95\x15\xf6\xb4\xb9\x2d\x58\x89\xbb\xda\x0b\xd4\x81\xe8\x4b\x48\xbe\x8c\xd8\xeb\xd8\x89\x9b\xa7\x9b\x7d\xf9\xe7\xca\xc7\x18\x3b\x71\xcb\xe5\xfe\x68\xf9\x67\x3a\x71\xe7\xa9\x19\x18\x92\x56\xfa\xd4\xf3\xf4\x8f\x65\xfd\x0e\x00\x00\xff\xff\x50\xda\x81\x7d\x7d\x00\x00\x00")

func _1_create_events_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_create_events_tableUpSql,
		"1_create_events_table.up.sql",
	)
}

func _1_create_events_tableUpSql() (*asset, error) {
	bytes, err := _1_create_events_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_create_events_table.up.sql", size: 125, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1_drop_events_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x06\x04\x00\x00\xff\xff\x27\xe5\x89\x64\x11\x00\x00\x00")

func _1_drop_events_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_drop_events_tableDownSql,
		"1_drop_events_table.down.sql",
	)
}

func _1_drop_events_tableDownSql() (*asset, error) {
	bytes, err := _1_drop_events_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_drop_events_table.down.sql", size: 17, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_create_matches_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x4d\x6a\xc3\x30\x10\x46\xd7\xd2\x29\x66\x69\x83\x2e\xa1\x84\x71\x10\x91\xa5\x20\x4d\x69\xd2\x9d\x2b\x0f\x34\xf8\xaf\xd8\x72\xc1\xb7\x2f\x2e\xf5\xa6\x74\xfb\xde\xf7\xc1\x3b\x07\xd4\x84\x40\xfa\x64\x11\x4c\x05\xce\x13\xe0\xdd\x44\x8a\x30\x34\x39\x7d\xf0\x02\x85\x14\x1d\x6f\x40\x78\x27\xb8\x05\x53\xeb\xf0\x80\x2b\x3e\x94\x14\xfc\xc5\x63\xbe\x1e\x6e\xbf\xba\x17\x6b\x95\x14\x9f\x33\xb7\xcf\x94\xb9\xa5\xe7\xc0\x40\xa6\xc6\x48\xba\xbe\xd1\x9b\x92\xa2\x49\x79\x6d\xfa\x7f\xc4\x7b\xbf\xf2\xeb\x34\xc2\xc9\x7b\x8b\xda\x29\x29\x66\x6e\x63\x9a\x66\x06\xe3\x08\x2f\x18\x7e\x47\x7f\x59\xe5\x03\x9a\x8b\xdb\xa3\x8a\x23\xa9\x84\x80\x15\x06\x74\x67\x8c\xf0\x03\x97\xa2\xe3\xad\x94\xe5\x77\x00\x00\x00\xff\xff\x95\xc6\xa5\x34\xf2\x00\x00\x00")

func _2_create_matches_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_create_matches_tableUpSql,
		"2_create_matches_table.up.sql",
	)
}

func _2_create_matches_tableUpSql() (*asset, error) {
	bytes, err := _2_create_matches_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_create_matches_table.up.sql", size: 242, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_drop_matches_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x06\x04\x00\x00\xff\xff\xed\x06\x12\x35\x12\x00\x00\x00")

func _2_drop_matches_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_drop_matches_tableDownSql,
		"2_drop_matches_table.down.sql",
	)
}

func _2_drop_matches_tableDownSql() (*asset, error) {
	bytes, err := _2_drop_matches_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_drop_matches_table.down.sql", size: 18, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_create_alliances_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8c\x41\x0a\x83\x30\x14\x44\xd7\xe6\x14\xb3\x34\xe0\x25\x54\xc6\x12\x0c\x09\x8d\x11\xec\xd2\xca\x87\x4a\xd5\x45\xad\x0b\x6f\x5f\xb0\xb4\x14\xba\x9d\x79\xef\x95\x81\x79\x24\x62\x5e\x58\xc2\x54\x70\x3e\x82\x9d\x69\x62\x83\x7e\x9a\xc6\x7e\x19\x64\x45\xaa\x92\xb9\x7f\x0e\xb7\x5a\x76\x44\x76\xf1\xa0\x5c\x6b\x6d\xa6\x92\x71\x2d\xa6\x4d\x50\x78\x6f\x99\xbb\xdf\x67\xd9\xe6\xab\x3c\xfe\x84\xca\x07\x9a\x93\x43\xcd\x4b\xfa\xa9\x6a\x04\x56\x0c\x74\x25\x1b\x1c\xa3\xac\xe9\x5d\x76\x9d\xa9\xa4\x75\xe6\xdc\xf2\x8b\x66\x78\x77\xb5\xd2\xaf\x00\x00\x00\xff\xff\x80\x51\xbd\xfc\xbc\x00\x00\x00")

func _3_create_alliances_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_create_alliances_tableUpSql,
		"3_create_alliances_table.up.sql",
	)
}

func _3_create_alliances_tableUpSql() (*asset, error) {
	bytes, err := _3_create_alliances_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_create_alliances_table.up.sql", size: 188, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_drop_alliances_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\xcc\xc9\xc9\x4c\xcc\x4b\x4e\x2d\x06\x04\x00\x00\xff\xff\x17\xe1\x40\xdc\x14\x00\x00\x00")

func _3_drop_alliances_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_drop_alliances_tableDownSql,
		"3_drop_alliances_table.down.sql",
	)
}

func _3_drop_alliances_tableDownSql() (*asset, error) {
	bytes, err := _3_drop_alliances_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_drop_alliances_table.down.sql", size: 20, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_create_reports_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xc1\x6a\x86\x30\x10\x84\xcf\xe6\x29\xf6\x98\x40\x5e\x42\x7f\xd6\x12\x0c\x09\x8d\x11\xec\x31\x94\x85\x96\x56\x5b\x92\x58\xf0\xed\x8b\x4a\x40\x6b\x2f\x21\xcc\x7c\x3b\x33\x0f\x87\xb5\x47\xf0\x75\xa3\x11\x54\x0b\xc6\x7a\xc0\x51\xf5\xbe\x87\x48\xdf\x5f\x31\x27\xe0\xac\x3a\xbe\x14\xc1\xe3\xe8\x77\xc6\x0c\x5a\x4b\x56\xd1\x0f\xcd\xb9\xa3\xf5\x66\x4c\x21\xbf\xbe\xfd\x67\xbc\xa7\xe6\x73\x21\x68\xac\xd5\x58\x9b\xb3\x93\x29\x4c\x37\x3c\xe5\x90\xd3\x4d\x1d\x8c\x7a\x1e\x90\x97\x76\x09\xa5\x4e\xc2\x96\x22\x24\x03\x68\xad\x43\xf5\x64\xa0\xc3\x17\x5e\xf6\x0b\x70\xd8\xa2\x43\xf3\xc0\x1e\x96\x44\x31\xf1\xed\x9d\xc3\x44\x42\xb2\xea\x7c\x52\xb2\x2f\x27\xbb\x98\xf8\x07\xad\x7f\xf1\x32\xe0\x82\xef\x22\x1d\x3c\x13\xbf\x01\x00\x00\xff\xff\xf1\xac\xe6\x8d\x6b\x01\x00\x00")

func _4_create_reports_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_create_reports_tableUpSql,
		"4_create_reports_table.up.sql",
	)
}

func _4_create_reports_tableUpSql() (*asset, error) {
	bytes, err := _4_create_reports_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_create_reports_table.up.sql", size: 363, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_drop_reports_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\xb6\x06\x04\x00\x00\xff\xff\x55\x5c\x72\x90\x13\x00\x00\x00")

func _4_drop_reports_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_drop_reports_tableDownSql,
		"4_drop_reports_table.down.sql",
	)
}

func _4_drop_reports_tableDownSql() (*asset, error) {
	bytes, err := _4_drop_reports_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_drop_reports_table.down.sql", size: 19, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_add_event_typeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x83\x88\x84\x54\x16\xa4\x2a\x78\xfa\x85\xb8\xba\xbb\x06\x29\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\x00\x02\x00\x00\xff\xff\x47\xcd\xa1\xbe\x38\x00\x00\x00")

func _5_add_event_typeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_add_event_typeUpSql,
		"5_add_event_type.up.sql",
	)
}

func _5_add_event_typeUpSql() (*asset, error) {
	bytes, err := _5_add_event_typeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_add_event_type.up.sql", size: 56, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_remove_event_typeDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x83\x08\x85\x54\x16\xa4\x02\x02\x00\x00\xff\xff\xfa\x1d\x58\x8e\x28\x00\x00\x00")

func _5_remove_event_typeDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_remove_event_typeDownSql,
		"5_remove_event_type.down.sql",
	)
}

func _5_remove_event_typeDownSql() (*asset, error) {
	bytes, err := _5_remove_event_typeDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_remove_event_type.down.sql", size: 40, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __6_add_bluewonDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xca\x29\x4d\x0d\xcf\xcf\x53\x70\xf2\xf7\xf7\x71\x75\xf4\x03\x04\x00\x00\xff\xff\x08\x2a\x0a\x8b\x2e\x00\x00\x00")

func _6_add_bluewonDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__6_add_bluewonDownSql,
		"6_add_bluewon.down.sql",
	)
}

func _6_add_bluewonDownSql() (*asset, error) {
	bytes, err := _6_add_bluewonDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "6_add_bluewon.down.sql", size: 46, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __6_remove_bluewonUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xca\x29\x4d\x0d\xcf\xcf\x03\x04\x00\x00\xff\xff\xc2\xb9\xb0\x4c\x27\x00\x00\x00")

func _6_remove_bluewonUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__6_remove_bluewonUpSql,
		"6_remove_bluewon.up.sql",
	)
}

func _6_remove_bluewonUpSql() (*asset, error) {
	bytes, err := _6_remove_bluewonUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "6_remove_bluewon.up.sql", size: 39, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __7_add_photos_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\xf0\xf3\x0f\x51\x70\x8d\xf0\x0c\x0e\x09\x56\x28\xc8\xc8\x2f\xc9\x2f\x56\xd0\xe0\xe2\x2c\x49\x4d\xcc\x55\x08\x71\x8d\x08\x01\x4b\xfb\x85\xfa\xf8\xe8\x70\x71\x96\x16\xe5\xa0\x8b\x29\x28\x28\x28\x84\xfa\x79\x06\x86\xba\x6a\x80\xb4\xe8\x28\x94\x16\xe5\x68\x72\x69\x02\x02\x00\x00\xff\xff\x7a\x9d\xf7\x09\x64\x00\x00\x00")

func _7_add_photos_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__7_add_photos_tableUpSql,
		"7_add_photos_table.up.sql",
	)
}

func _7_add_photos_tableUpSql() (*asset, error) {
	bytes, err := _7_add_photos_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "7_add_photos_table.up.sql", size: 100, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __7_remove_photos_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\xc8\xc8\x2f\xc9\x2f\x06\x04\x00\x00\xff\xff\xb4\x52\x78\x3f\x11\x00\x00\x00")

func _7_remove_photos_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__7_remove_photos_tableDownSql,
		"7_remove_photos_table.down.sql",
	)
}

func _7_remove_photos_tableDownSql() (*asset, error) {
	bytes, err := _7_remove_photos_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "7_remove_photos_table.down.sql", size: 17, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __8_add_isdminUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xd1\x09\x85\x30\x0c\x05\xd0\x55\xee\x2a\xe9\x6b\xde\xd7\x35\x01\x49\x06\x10\xac\x50\x50\x3f\x0c\xee\xef\x11\x86\xae\x08\x69\x54\xbc\x35\x9e\x82\xf4\x8e\x9f\x33\x17\xc3\x2c\xd9\xaf\x79\xa3\xb9\x53\xc5\x60\x1e\xb0\x24\xd1\xf5\x2f\xc9\xc0\xb1\x9d\x35\xbe\x00\x00\x00\xff\xff\xe7\x70\xa1\xca\x43\x00\x00\x00")

func _8_add_isdminUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__8_add_isdminUpSql,
		"8_add_isdmin.up.sql",
	)
}

func _8_add_isdminUpSql() (*asset, error) {
	bytes, err := _8_add_isdminUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "8_add_isdmin.up.sql", size: 67, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __8_remove_isadminDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x2c\x76\x4c\xc9\xcd\xcc\x03\x04\x00\x00\xff\xff\x54\xf1\x61\xd5\x25\x00\x00\x00")

func _8_remove_isadminDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__8_remove_isadminDownSql,
		"8_remove_isadmin.down.sql",
	)
}

func _8_remove_isadminDownSql() (*asset, error) {
	bytes, err := _8_remove_isadminDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "8_remove_isadmin.down.sql", size: 37, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __9_add_reports_cascadeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x81\x89\xc7\x43\xe8\xd4\xa2\xf8\xb4\xec\xd4\x4a\x6b\x2e\x6c\x5a\x1d\x5d\x5c\x14\xdc\xfc\x83\x5c\x3d\xdd\xfd\x14\xbc\x5d\x23\x35\x60\x5a\x34\x15\x82\x5c\xdd\x5c\x83\x5c\xfd\x9c\x5d\x83\x15\x4a\x8b\x53\x8b\x8a\x35\x40\x64\x5e\x62\x6e\xaa\xa6\x82\xbf\x9f\x42\x68\x80\x8b\x63\x88\xab\x82\xb3\x63\xb0\xb3\xa3\x8b\x2b\x20\x00\x00\xff\xff\xd6\xa5\x2c\xc4\x95\x00\x00\x00")

func _9_add_reports_cascadeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__9_add_reports_cascadeUpSql,
		"9_add_reports_cascade.up.sql",
	)
}

func _9_add_reports_cascadeUpSql() (*asset, error) {
	bytes, err := _9_add_reports_cascadeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "9_add_reports_cascade.up.sql", size: 149, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __9_remove_reports_cascadeDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x81\x89\xc7\x43\xe8\xd4\xa2\xf8\xb4\xec\xd4\x4a\x6b\x2e\x6c\x5a\x1d\x5d\x5c\x14\xdc\xfc\x83\x5c\x3d\xdd\xfd\x14\xbc\x5d\x23\x35\x60\x5a\x34\x15\x82\x5c\xdd\x5c\x83\x5c\xfd\x9c\x5d\x83\x15\x4a\x8b\x53\x8b\x8a\x35\x40\x64\x5e\x62\x6e\xaa\x26\x20\x00\x00\xff\xff\x47\x73\x6b\x93\x83\x00\x00\x00")

func _9_remove_reports_cascadeDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__9_remove_reports_cascadeDownSql,
		"9_remove_reports_cascade.down.sql",
	)
}

func _9_remove_reports_cascadeDownSql() (*asset, error) {
	bytes, err := _9_remove_reports_cascadeDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "9_remove_reports_cascade.down.sql", size: 131, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bindataGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\xdd\x6f\xe3\x38\x92\x7f\x8e\xff\x0a\x6d\x80\x5d\x24\x87\xbe\xb4\xa8\x6f\x05\xe8\x97\x9d\x99\x3b\xcc\xc3\xcd\x02\xb7\xb3\x4f\xa7\x43\x40\x49\x54\xc6\x58\xc7\xce\xd8\xce\x0c\xbb\x07\xfd\xbf\x2f\x7e\xac\x62\xe2\x0f\x91\x96\xd5\x42\xd2\x0d\xec\x83\xbb\x63\x4b\x2c\xb2\xa8\xfa\xd5\x07\x59\x45\xbd\x7f\x1f\x7c\xb7\x6a\x55\x70\xaf\x96\x6a\x2d\xb7\xaa\x0d\xea\x8f\xc1\xfd\xea\x3f\xeb\xf9\xb2\x95\x5b\x79\x33\x7b\xff\x3e\xd8\xac\x9e\xd6\x8d\xda\xdc\xe2\xef\xf0\xae\x59\x2b\xb9\x55\x77\x4f\x1b\xb5\xde\xdc\x6d\x65\xbd\x50\x37\x4f\x8f\x37\x9b\x5f\x17\x74\xb9\x5d\xaf\x1e\xf7\x2e\xb6\xab\xdf\x97\xf6\xb2\x08\xef\x64\xdb\xde\xad\xd5\xe3\x6a\xbd\xdd\xdc\xb5\x6a\xa1\xb6\xea\xae\x91\x9b\x46\xb6\xbb\x64\x44\x78\xb7\x56\x0f\xab\xdf\x94\xeb\xd6\x3d\xa2\xc2\x10\x5d\xc8\xed\xdd\x62\xb5\xbc\xdf\x25\x23\x68\x38\xcf\x97\xf6\x9a\x45\xa6\x99\x5a\xb6\x77\x2d\x18\x5a\xab\xa5\x7c\x50\x77\x9b\xad\x5c\x6f\xcd\x2f\xbb\x84\x22\x22\xe4\xb9\x79\x8f\x74\x6c\x48\x2f\x57\x5b\xb5\xb9\xeb\xe6\x6a\xd1\xee\xd2\x8a\x2d\x6f\xbb\xd7\xf7\x9a\x27\xa6\xf9\xc7\xd5\xd3\xf6\xa9\x56\x77\x4f\xeb\xc5\xd1\x3c\x8b\xc4\x12\xd9\xb9\x6b\x9f\x48\x6a\x88\xcc\x37\x77\xf5\xe2\xe9\x79\x1e\x0f\x6f\x61\x22\x87\x77\xed\x74\x94\xd9\x07\xfe\x38\x6f\xfe\xb9\x98\x6f\xb6\x34\x96\xbd\x7b\x72\x9a\x9d\xc3\x3b\xf6\xfa\xb2\x64\xd4\x6f\x6a\xb9\x3d\x16\x1c\x7e\x52\x7b\x57\x77\xdb\x47\xb6\xfd\x83\xdc\x36\xbf\xa8\x63\x02\xfc\x84\xf6\x2f\xef\x52\x88\x2d\x05\xb9\x58\xcc\xe5\xb2\xe9\xa1\x11\x13\x8d\xc3\x1b\x76\xa9\x24\x96\x8a\x15\xcc\x43\x1a\x09\xd1\xd8\xbf\xbc\x4b\x81\x9e\x8b\x61\xf4\x6e\xfb\xf1\x71\xb7\xed\xf3\xf3\xd8\xb9\xba\xdb\x34\x33\x4d\xf1\xa4\x7e\x5f\x2d\x0f\xae\x70\x4b\x7b\xf1\x85\x68\x6e\x1a\x3d\xfe\xb2\xda\xae\x8e\x47\x9b\xdb\x76\x7b\xd7\x77\x29\x17\x2c\x46\xed\xc3\x7c\x97\x6a\xf1\x22\x3a\xd2\x5c\xda\x6d\x53\xee\xa1\xfc\x18\xde\xe5\x21\xba\xfb\x60\x6d\x35\xd0\xfd\x0a\xdf\xbe\xff\x5b\xf0\xd3\xdf\x7e\x0e\x7e\xf8\xfe\xc7\x9f\xff\x34\x9b\x3d\xca\xe6\x9f\xf2\x5e\x05\x0f\xf3\xfb\xb5\xdc\xce\x57\xcb\xcd\x6c\x36\x7f\x00\xad\xe0\x6a\x76\x71\x59\x7f\xdc\xaa\xcd\xe5\xec\xe2\xb2\x59\x3d\x3c\xae\xd5\x66\xf3\xfe\xfe\xd3\xfc\x11\x3f\x74\x0f\x5b\xfc\x37\x5f\xd1\xbf\xef\xe7\xab\xa7\xed\x7c\x81\x2f\x2b\xd3\xe0\x51\x6e\x7f\x79\xdf\xcd\x17\x0a\x7f\xe0\x87\xcd\x76\x3d\x5f\xde\x9b\x6b\xdb\xf9\x83\xba\x9c\x5d\xcf\x66\xdd\xd3\xb2\xb1\xc3\xfb\x5f\x25\xdb\x2b\xfc\x11\xfc\xdf\xff\xa3\xdb\x77\x01\x14\x43\x40\xcd\xae\x83\x2b\xfb\xab\x5a\xaf\x57\xeb\xeb\xe0\x8f\xd9\xc5\xfd\x27\xf3\x2d\xb8\xfd\x10\x60\x54\x37\x3f\xa9\xdf\x41\x44\xad\xaf\xcc\xb0\xf1\xfd\xaf\x4f\x5d\xa7\xd6\x86\xec\xf5\xf5\xec\x62\xde\x99\x06\x7f\xfa\x10\x2c\xe7\x0b\x90\xb8\x58\xab\xed\xd3\x7a\x89\xaf\xef\x82\xee\x61\x7b\xf3\x03\xa8\x77\x57\x97\x20\x14\xfc\xf9\xd7\xdb\xe0\xcf\xbf\x5d\xd2\x48\x4c\x5f\xd7\xb3\x8b\xcf\xb3\xd9\xc5\x6f\x72\x1d\xd4\x4f\x5d\x40\xfd\x50\x27\xb3\x8b\x3b\x1a\xce\x87\x60\xbe\xba\xf9\x6e\xf5\xf8\xf1\xea\x2f\xf5\x53\xf7\x2e\xb8\xff\x74\x3d\xbb\x68\x16\x3f\xd8\x91\xde\x7c\xb7\x58\x6d\xd4\xd5\xf5\x6c\xaa\xf1\x80\x0c\xd1\x77\x10\x52\xeb\x35\x8d\x9b\x7f\xac\x9f\xba\x9b\xbf\x62\xe8\x57\xd7\xef\x70\xc7\xec\xf3\x6c\x06\x88\x04\x72\xb3\x51\x5b\x4c\xf9\x53\xb3\x05\x15\xc3\x1f\x3f\x8f\xd9\xc5\x7c\xd9\xad\x82\x60\xb5\xb9\xf9\xaf\xf9\x42\xfd\xb8\xec\x56\xcf\xed\xf8\x11\xda\xdf\x77\x28\x98\x67\x18\x04\xfc\x18\x67\x17\x9b\xf9\x27\xf3\x7d\xbe\xdc\x66\xc9\xec\xe2\x01\x16\x33\x78\x26\xfa\x3f\xab\x56\x99\x1f\x7f\x9e\x3f\xa8\x00\x62\x72\x83\xbf\xd0\x8f\x11\x95\xab\x6e\x7e\xd8\xd7\x75\xf0\x93\x7c\x50\x57\xd7\xdc\x03\xfa\x64\x2e\xbb\xf9\x0d\x7a\x9f\x7d\xf6\xb4\xfd\xfb\xfc\x13\xda\x9a\xd1\xec\x37\xc5\x40\xbd\x4d\x31\xd6\xab\xeb\xdd\x91\xef\x13\x00\x6b\xa7\x08\x80\xb9\xab\xeb\x17\x46\x8f\x28\x30\xf7\x6e\x22\x3f\x6e\xbe\x9f\xaf\xaf\xae\x83\x7a\xb5\x5a\xec\xb6\x96\x8b\xcd\x09\xce\x3f\x6e\x88\x71\xb5\xee\x64\xa3\xfe\xf8\xbc\xd3\x9a\x45\x02\x52\x7e\x77\xd7\xe7\xa7\xfc\xe3\xf1\xef\xbf\x2e\x82\x0f\x2c\x19\x57\x97\x95\x16\x5d\xa5\x8b\xba\xd2\x61\x51\xe9\x30\xec\xff\x74\x5d\xa5\xf3\xa8\xd2\xa1\xa2\xff\xf3\xb4\xd2\x61\x53\xe9\x5c\x54\x3a\x4d\xa9\x2d\xfe\xce\x93\x4a\x77\xd1\xcb\xef\x5d\x48\xbf\xa5\x31\xfd\xdd\xc5\x95\x0e\xbb\x4a\xa7\xb8\x37\xac\x74\xd1\xd2\xef\xa0\x05\xda\x61\x59\xe9\x34\xab\x74\x54\x54\x3a\x6a\x2b\x9d\x28\xfa\x3f\x92\xf4\x7b\x1b\x56\x5a\xe1\x83\xb1\x24\x95\x8e\x05\xf5\x27\xd0\x67\x4c\xfd\x88\xb4\xd2\x49\x54\xe9\xb4\xa9\x74\x14\xd3\xdf\x4d\x48\x34\xba\x86\xbe\xe7\x6d\xa5\xf3\xa6\xd2\x22\xa1\xef\x5d\x5b\xe9\x18\x63\xc0\xfd\xa0\xd3\x12\x8f\x75\x51\xe9\x18\x9f\x98\xfa\xc0\x3c\xe1\xef\x34\xa2\xbe\xc2\xe8\xe5\x77\x7c\x9a\x9a\x78\xc4\xdf\xe6\x9e\x90\xe6\x01\xf3\x91\x95\x74\xbf\xf9\xec\xcc\x2b\x3e\x4a\x54\xba\x04\x7f\x79\xa5\xdb\xa8\xd2\x59\xb4\x3b\xff\x97\x56\xdf\xba\x9f\x28\xeb\x84\x3e\x5d\x6b\x35\xc7\x8e\xae\x9e\x5d\x5c\x78\xa4\xe3\xdd\xec\xe2\xe2\xd2\xe3\xe3\x5e\xbe\x9b\x5d\x5c\x3f\x03\xdb\x4d\x07\xc3\xf9\x0f\xa3\x97\x76\x87\x63\x14\xd3\xb3\xf6\x3f\xc9\xd1\x29\x4d\xfb\xac\x20\x8d\x8a\xbb\xfd\x70\x08\x97\x3f\xa0\x48\x6e\x03\x3f\x3f\x01\x54\xc6\x6d\x50\x16\xef\x02\x60\xff\x76\x57\x35\x5c\x25\x71\x76\x6d\x7e\x07\xa2\x6f\x09\xf1\xff\x58\xce\xf5\x95\x48\x45\x91\x14\x51\x16\x25\xef\x82\xf0\xfa\xf3\xec\x42\xa2\xff\xbf\x18\x8e\xff\x30\x6c\xde\x06\xcc\x2d\x06\x77\x6b\xfe\xfd\xfc\xfc\x40\xe4\xbb\x43\xb4\x1e\x86\x0d\xdf\xaf\x7e\x5f\x7e\x11\x5a\x4b\x42\x87\x41\x5c\xe8\x46\x69\x1f\xda\xea\xac\xd2\x61\x46\x28\x3b\x94\xd6\xba\xad\x74\xd6\x56\xba\x49\x09\xc1\x42\xb8\xa4\xd5\xc1\xd1\x28\x69\x75\xd0\x62\x69\x75\x86\x5c\x47\xd2\xea\xa0\x33\x50\x5a\xfd\x1c\x4d\x27\xad\x1e\x7e\x58\x5a\x45\xfe\x96\xd2\xea\x8d\x62\xc7\x1b\x99\xac\x21\x25\x0a\x11\x93\x92\x94\x25\x94\x3c\x14\x75\x03\xb1\x85\xc2\x57\x95\x8e\x15\x89\x5f\x99\x54\xba\x86\xe2\xed\xc8\xa0\xc8\xba\xd2\x59\x5c\xe9\x46\x55\x5a\xc2\x00\x34\x95\x2e\xb2\x4a\x67\x30\x16\x65\xa5\x0b\x7c\xd2\x4a\xb7\x29\x29\x59\x88\xae\xa8\x89\x6e\x01\xe5\x0f\x71\xaf\x2b\xdd\x02\x32\xaa\xd2\x22\xab\x74\x5a\xd2\xb8\xcc\x27\x23\x03\x14\xe6\x95\xce\x3b\x6a\x57\x96\xd4\x07\xfa\x02\xad\xa4\xab\x74\x9b\x10\x04\xeb\x8e\xfa\x4a\x72\xa2\x9f\xca\x4a\x97\x0d\xd1\x40\xff\x49\x51\xe9\xb6\xa4\xf1\x19\x83\x0a\xc8\xc2\x70\x96\x64\x48\x64\xca\xbc\xe4\x64\xe0\xcc\xf5\x96\xa1\x08\xc8\xca\x4a\x27\x29\x1b\xbd\xb8\xd2\x71\x52\xe9\x42\x55\xba\x85\x41\x0a\x2b\x2d\x5a\x82\x7f\xdb\x56\xba\x84\x01\xc4\x3c\x84\x64\x6c\x71\x2f\x20\xde\x60\x6c\x49\xa5\xb3\xbc\xd2\x11\xe6\x3e\x25\xe3\x87\xe7\x80\x39\x28\xba\x4a\x97\x6c\x98\x60\x50\xd1\x46\x61\x6e\xf3\x4a\x97\xe8\xb7\x21\x23\x99\x94\xa4\x42\xf0\x4c\xf0\xac\xa1\x56\xe2\x96\xe6\xa0\x63\xe7\xe1\x50\x95\xe0\xb9\x85\xa2\xd2\x09\x8c\x1f\xf3\xd9\xa7\x4a\x4e\x8b\xdb\x08\x9d\x72\x9a\xa8\x51\x2e\x43\x16\x6c\x0e\xb4\xcc\x69\xca\x83\xd4\xcd\x60\xae\xa7\xd2\x3b\xc3\x58\xb5\x0a\x28\x7b\x6b\x0d\xe4\x5d\x1f\xfb\x52\xeb\x09\xa8\xc0\x82\xc2\x4a\x86\x2d\xf9\x73\x3e\x0b\x0a\x28\xc2\x7a\x36\xb0\xa6\x1d\x59\xd1\x88\xfd\x59\xa8\xa6\x43\x6b\x8c\xdf\xba\xac\xd2\x5d\x4e\x2a\xc7\xfa\xbf\xb6\xef\x8e\x55\x51\x21\x48\x6d\x01\xa6\x80\xb8\x2a\x48\xbd\x48\xdc\x57\x54\xba\x4e\x08\x8e\xf8\x0d\x63\xc8\x00\x3d\x45\xea\x0a\xea\x06\x2a\x00\xfe\x6c\xca\xfe\x6e\xdb\x90\x1f\x6c\xd4\x51\x43\x10\x85\x7a\x80\x3a\xc1\xf5\xba\xa1\xfb\x01\xf5\x18\x6a\x32\x24\x3a\x50\x17\x50\x33\x05\xfb\xd6\x2d\xd3\xb4\x74\xd0\xbe\xe4\xb6\x85\xf5\xc3\x25\xfb\xc2\xec\x13\x17\x92\x68\x26\x21\xa9\x3c\xa8\x17\xa8\xc1\x4c\x91\xba\x97\x19\xd1\x87\xca\x28\x3b\xf2\xcd\xb3\x82\x54\x59\xc1\xaa\xbd\x28\x48\xcd\x9b\xfb\x62\xfa\xad\x0e\xe9\x6f\xc9\xfd\x40\x8d\x45\xe1\xb1\xba\x69\x33\x52\xa9\x50\xd5\x30\x27\x50\x5f\x0e\x75\x33\x44\xb6\xc6\xe9\x9c\x21\x94\xad\xe2\x19\xb6\x02\x7c\xac\x7d\x86\xf4\x31\x54\x05\x9d\x31\x13\x13\xea\xa1\xa1\x9c\x5b\x65\x94\x94\x6f\xaa\x8c\xf6\xd7\xdf\xbf\x2c\xca\x3e\x47\xf3\x24\xd6\x77\x87\x13\xd4\xb2\xe4\xef\x68\x1d\xdc\x6f\xee\x15\x07\x1a\xc7\x3a\x1a\x29\xa1\xb3\x61\x03\x0e\x64\xe0\x5e\xab\xd1\x12\x68\xb4\xa6\xd2\xb5\xa8\xb4\x82\x93\x13\x55\x5a\x86\xa4\x61\xe2\x8e\x34\x9d\x60\x67\x4d\x84\xf4\x39\x44\x1d\x1c\x2e\xb4\x4f\x13\x72\xa6\x52\x47\xbc\xd0\x37\x89\x63\x20\xd6\x43\x86\xf0\xd4\xbb\x49\x72\x08\x9e\x9e\xd6\xc3\x90\xe2\x1e\xfd\x64\xb0\x70\x30\xc0\x18\x28\xc4\xb9\x10\x28\xb3\x30\x29\xc2\x62\x2a\x08\xec\x6d\x34\xbd\xa6\xfd\x3d\x85\x02\xaf\xed\xf5\x20\x61\x4f\xea\x93\x4a\x47\xd9\x8b\xd4\x5b\x97\x1a\x36\xba\x4f\xea\xe1\x32\x77\xbc\x46\x55\xc6\x44\xd3\x21\xf5\x7d\xf3\x36\x4e\xf0\xfb\x28\x59\xd9\xef\xdf\x06\x3c\x16\xff\x3e\x1a\x43\x11\xe0\xe1\x64\x42\x10\xb8\x38\x61\x1c\xe4\xf1\xf9\x38\x28\x45\x9e\xc4\xd3\xe0\xe0\xd4\x9e\xea\xb7\x67\x1c\x40\xa7\x61\x3a\xb8\xdf\xc2\x03\xff\xdb\xe5\x5f\x13\x99\x27\xbc\x34\xdc\xf2\x52\x31\xff\x66\xbe\x17\xe4\xc6\x62\xbc\x87\x4b\xc1\x66\x09\xb8\xe6\x3e\xc5\x0b\xec\xc2\xa8\x7f\x01\x0a\xae\x28\x3e\x91\xa0\x95\x02\xb3\x74\xdb\x07\xad\x41\x8f\x62\x0c\xd2\x06\x11\x26\xe0\x0d\xdc\x62\x3f\xc4\xe1\xa0\x1e\x86\xc1\xf2\x9c\x59\x98\x0c\xa5\x83\xd9\x66\xd0\x66\xe1\x1b\x83\xf6\x44\x72\xc3\xb7\x6a\xce\x7c\xd8\xad\x53\x3f\xce\x52\x76\xee\x60\x12\xd1\x5f\x54\x38\x71\x36\x6c\xf6\xc6\x41\x6d\x18\x6d\x8b\xb6\xa1\x49\x2a\xc7\x80\x1b\xd6\xcf\x50\xcc\x9d\x35\x23\x13\xc2\x6e\x38\xff\x8c\xbc\xe4\x6d\x91\x77\x94\x27\xf4\x7a\xf6\x71\xc8\xb2\xcd\x39\x01\x54\x53\x13\x0d\x83\xb1\x96\x68\xd8\xbe\x0b\xb6\x81\xa1\xe8\xc7\x5a\xa7\xd8\x2e\xe6\x95\xae\x73\x1a\x43\x2f\xd6\xfa\xe7\x6b\x0c\xb2\xfa\x29\x11\x8e\x5c\xd9\x5b\x87\xa8\xe9\xa7\x31\x0c\x23\x5e\x4e\x26\x43\x84\x9b\x13\x2b\xff\x23\xc2\xa6\x49\xe5\xff\x38\x15\xee\x9b\x5a\xbb\x1c\x00\x04\xd7\x4e\x62\x5b\x92\xc3\x88\xb8\xaa\xc1\xbd\xae\xf5\x38\xcf\x24\x8d\x93\x7c\x27\x39\x2b\xfe\x9e\xfc\xc4\x63\x0c\x38\xa9\x0d\x05\xc2\x29\xee\x26\x44\x83\x97\x31\x86\x44\x7c\xf6\xca\xfe\xa4\x90\x70\xe4\x7e\xbe\x9e\x61\x30\x6b\x00\xed\x8b\xa3\xd4\xa8\x17\xa7\xec\x5c\xc3\x20\x0b\x5a\x41\x33\xb8\x6a\x09\x57\x09\x6f\xdd\x99\xc0\xa8\xa5\xbe\xcd\xaa\xd8\x40\x63\x51\xe2\xbb\xa4\xad\xb7\x5a\xd1\x6a\x5c\x2f\x6e\x7c\x33\x39\x06\x38\x3e\x7a\x84\x1c\x7f\xde\xee\x21\x74\x7c\xf4\x86\x61\x67\x00\x87\x93\x81\xe7\x14\x6f\xd6\xa0\x64\x67\xa3\xa7\xc8\x45\x2e\xf2\xa9\xd0\x73\x9c\x16\xfd\x9a\x06\x65\x08\x78\xce\x31\x28\x43\x01\xe4\x02\x8b\xc8\x68\x0f\xde\x24\x77\x35\x64\xdc\x1c\x60\x71\x4e\xdc\x38\xac\x38\xc9\x59\xa8\x78\xf2\xd7\x8f\x91\xe2\xa4\x36\x14\x28\xa7\xb8\x9b\x10\x27\x5e\xc6\x2c\x4c\xa2\x37\x85\x49\x6f\x6d\xc0\x97\xe0\x04\xb2\xd7\x84\x95\x6e\x04\xc9\x70\x11\x72\xae\x45\x53\xe9\x30\xa5\xe4\x45\x93\x14\xa9\x48\x06\x65\x49\x8a\x5e\xe6\x95\xce\x3a\x8a\xc2\x4b\xce\x93\x50\x61\xa5\xa5\xe0\xcd\xd6\x90\x3e\x42\xd2\xa2\x73\xdb\x51\xee\x45\xc8\x9b\xb0\x42\x10\x1e\x81\x93\xb2\xa0\x8d\xd8\xba\xac\xb4\xca\x2b\x5d\xd6\x64\x2c\x52\x49\xab\x6a\x71\x41\xb9\x21\x59\x46\xc9\x8d\x75\x54\xe9\xa2\xa9\xb4\xec\x68\xf3\x14\xbf\x19\x27\x8e\x37\x7e\x85\xa2\xcd\xd5\x24\xa3\x0d\x67\x25\x69\xec\x18\x77\x21\x68\x15\x4f\x70\x0e\x8b\x99\x83\xbe\x85\xf0\x9a\x92\x1b\x8b\x8c\xd2\xca\x92\xc4\x81\x3f\xdf\x13\x19\x03\x40\x1f\x3d\x42\xa0\xbf\x3e\xe4\x10\x82\x3e\x7a\xc3\x30\x38\x80\xc3\xc9\x40\x78\x8a\x37\xbb\xee\x76\x6e\xd2\x63\x14\xa6\x69\x14\x27\x13\xed\x9b\xba\xca\x6f\xbe\xae\x45\x80\x73\xe3\x1f\x98\xbe\x1c\x31\x8d\x7c\x31\x57\x2a\x75\x2f\xb4\x01\x62\x26\x7f\x23\xe1\xfe\x5d\x69\x50\xde\xe9\x1a\x87\x11\x0f\x41\x0b\x12\x6f\x85\xd4\x31\x4a\x3c\x14\x87\xc2\xe4\x34\x97\x13\xe2\xe4\x04\x7b\x36\x26\x3a\x37\xc1\x60\x5a\xa0\xb8\x6a\xd0\xc6\x03\xa5\x48\xc8\x36\xc0\x5e\x25\x8a\xfc\xa3\x88\x73\x2d\x93\x94\x84\x3b\x6f\xc8\x16\xa4\x2d\x25\xe3\xa8\x88\xe8\xc3\x4e\x34\x11\xad\x1e\xc3\x16\xa0\x1d\xda\x64\xec\x5b\x95\x31\x01\x00\x76\x21\x66\x50\x41\xff\xdb\xc4\x25\x51\x12\x90\xda\x98\x92\x7d\xe2\x9c\x6c\x25\x7e\xcf\x5a\xf2\xd7\x1a\xde\x39\x6a\x60\xcb\x62\xee\x4f\x90\x4d\x02\x30\x4b\x45\x60\x8e\x18\x38\x79\x4b\xc9\x40\x00\x24\xec\x1b\xec\x2f\x6c\x1d\xae\xc1\xf6\xb6\x19\xf1\x0c\x7b\xd5\x85\xb4\x79\x0b\x5a\x21\xe7\x21\xc2\x1e\x63\x7c\x00\xa9\x5d\x7d\x8b\xc2\x97\x60\x4c\x25\xf4\x77\xcd\xb6\x13\xf3\x03\xfe\x31\x77\x5d\x4d\x2b\xe5\xe8\xa3\xe6\x9c\x54\xd8\x4a\xd8\x66\xf0\x97\xc3\x8f\x55\x94\x9c\x15\x2b\x9a\xaf\x36\xaa\x74\x9c\xd1\x3c\x61\x6e\xf2\x9a\x14\x81\x51\x1c\x8a\x14\x0e\x7c\x05\x28\x14\x53\xb0\xd0\x31\xef\x1d\xd1\x88\x23\xca\x35\xcd\x72\xb2\xc3\x68\xdb\x09\x4a\xac\xca\x14\x3d\x33\x93\x0b\x5b\x92\xff\x01\xfb\x6e\xf2\x4e\x4b\xe2\xcb\xb4\x55\xfc\xdc\x04\xcd\x99\xc8\x29\xc7\x54\xf1\x33\xec\x24\xf5\x8d\xb6\x78\x56\x08\x34\x0b\x45\x3c\x89\x94\x9e\x41\x21\x39\x37\xb6\x26\x1e\xd2\x82\x95\x6f\xca\x4a\x35\xa1\x4d\xf3\x92\x0b\x25\x40\x3b\x8a\xa8\x8d\xf1\x2b\x12\x4e\x20\xe3\xfc\x5c\xf8\x43\x82\x95\x70\xc9\x72\xd8\xe4\xdc\x67\x42\xcf\x4a\xd4\x34\xae\x84\xc7\x94\xf1\x38\xcd\x58\x33\xf2\xf3\xc1\x7b\xc4\xbb\x8a\xa2\xec\x51\xba\x19\xf1\x87\x67\x89\xb1\xe6\x36\xe0\x3e\x54\xba\x5e\xe8\x8d\x51\xba\x5e\x82\xa4\x74\x4f\x94\x9c\x1e\x2a\x5d\x2f\xc5\x61\x4a\x77\x08\x97\x93\x29\xdd\x93\xec\x3d\x2f\x44\x9d\x1b\x4b\x47\x22\x2e\xcb\xb0\xc8\xa6\xd1\xba\xfd\x55\xbd\xaf\x59\x98\x61\xa2\xe9\x86\x34\x82\xf9\xf0\xfe\x1d\xa4\x1e\x5a\x0a\x52\x6c\xb4\x10\xb4\x6a\x4c\x88\xf3\x15\x6f\xa8\x92\x3c\x7e\xd0\x00\xb2\x9c\xae\x86\x97\xf5\x31\x52\xef\x25\x48\x52\x7f\xa2\x88\xfa\x50\xea\xbd\x14\x87\x49\xfd\x10\x2e\x27\x93\xfa\x93\xec\x8d\x76\x35\x44\x5c\x16\x45\x32\x51\x64\xdc\x57\xa6\x3e\xde\xcd\x88\x1b\xba\x0f\x3e\x70\x28\xc9\x8c\xc7\x9c\x29\x68\x4a\x31\x72\x2a\xa1\x80\xef\x5c\x37\x94\x9f\x0b\x61\x36\x99\x85\x30\x4b\x29\x97\x27\x84\x54\x6b\x97\xd4\x04\x12\xfc\x06\x73\x0b\x33\x67\x42\x6e\xb8\x20\x82\xca\x3e\x70\x6f\xc1\xe6\x4e\xb5\x64\xe2\xe0\x06\xd4\x39\x85\xcf\x0d\xab\x7f\x84\xcc\x30\x37\x08\xb3\x73\x45\x00\x12\x6c\x0e\x0b\x76\x7f\x22\x5e\xeb\x05\x9f\x25\x97\x5a\x74\xd6\xcc\xdb\x8d\x3e\x4e\x6e\x81\xd9\x6f\x39\x27\x0c\xae\x04\x42\x64\x55\xd0\x98\x93\x82\xd6\x6a\x01\xbe\x16\xee\x44\x4d\xff\xa3\x1d\x42\x64\xc9\xe1\x3a\x4c\x58\xc7\xe1\x3b\xe2\x07\x98\x3e\xb8\x2c\x31\x6f\xe0\x37\x35\xc5\x12\x70\x0d\xb2\x82\xee\x85\x0b\x10\x4b\xba\x8e\x76\x70\x65\x60\xf2\xd0\x0e\x66\x37\x65\x53\x87\x31\xc1\x55\x40\x7c\x54\x74\x34\xb7\x5d\xdb\x5f\x9a\x61\xdc\x33\x49\x3c\x58\xd3\xda\xab\x28\x9c\xe2\x32\x46\x49\x38\x89\x91\x82\xf0\x9c\xa0\x70\xa8\x1c\x9c\x94\x86\x29\x86\x53\x5c\x4d\xa6\x14\xbc\x2c\xd9\xec\xe6\x28\x7d\xd3\xec\xe6\xe3\x83\x29\x5e\xcb\x04\xba\x52\x61\x5c\xe6\x0d\xe6\x0c\xe8\x28\xb8\xa8\xca\x55\x9b\xe8\x66\x69\x94\xd4\xba\x88\xb1\xd4\xba\xcf\xf5\x38\x92\x5a\x17\xa5\x81\x52\x7b\x82\xab\xe9\xa4\xd6\xc7\xd2\x57\x51\xa1\xd8\x7f\x5a\xca\x97\x95\x26\x22\xf4\x81\x1d\x43\xb8\xd1\xc4\x2f\x76\x2c\xd9\xa9\xdd\x8e\x38\xfc\x44\x98\x55\x70\x78\x62\x96\x72\x79\xbf\x10\xf7\x97\x82\xeb\x50\x42\xa6\x57\x52\xdb\x92\x25\x3c\xe4\x24\xc7\xae\xa0\xa5\x59\xd8\x09\xa0\x06\x76\xce\x24\x87\x74\x44\x17\xa1\x0d\xc2\x1d\x83\x9a\x9a\x4a\xe8\x4c\xb8\x24\xc8\x5e\x84\x39\xdb\xa1\x84\x6a\x6e\x60\x03\x2c\x2a\x12\x5e\x96\x6e\xd8\xee\xc1\x56\xb6\x2d\xd9\x49\x53\xa7\x13\x72\xa2\x65\xc9\x36\x29\xa4\xd0\x18\x36\x1b\x61\x18\xc2\xdd\xac\x23\xba\x08\x9d\x80\x3c\x84\x52\x21\xaf\x83\xc1\xbe\xa1\x0d\xc2\xf0\x88\xc3\xde\x32\xa1\xb6\x1d\x2f\x2b\x98\xda\x1d\x45\x61\x6d\xc6\x61\x65\x2d\x29\x0c\x45\x38\x59\x72\x5f\x65\x47\x75\xf7\xe0\x1d\xb6\xbb\x64\xdb\x8b\x39\x34\x76\x32\xa4\x71\x60\x2e\x9a\x8c\x6d\xad\x24\xda\xad\xe0\x25\xe8\x88\x96\x1e\x92\x92\x42\xdc\xac\xe5\xf0\xb6\xa3\x10\xd5\x84\xdf\x5c\xaa\x88\xb1\x83\x77\xf8\x2a\x70\xb8\x73\xae\xef\x6f\x79\x3d\xef\xf9\x19\x2b\xe2\xa1\x94\xf4\xdd\x94\x46\xc6\x24\x4b\xc6\x7f\x29\xc8\xaf\x48\xb8\x5c\x34\x2d\x79\x1d\x90\xdb\x18\x9a\x35\xd7\x2d\x49\xaa\xb9\x32\xdb\x02\x09\x97\x6f\xa6\x44\x33\xe7\xf2\x4c\xf8\x0e\xe6\x39\xc4\x94\x5f\x6e\x96\xe4\xd1\xa6\xa5\x39\x01\xed\x3c\x77\x2c\xc3\xa7\x34\x37\x98\xb3\x98\xb5\x6c\x9f\x66\xf4\xe0\x66\x84\x6a\xf4\x50\x33\xba\xd1\x7b\xa6\xd1\x81\x72\xf4\xd0\x1a\xa4\x1d\x4f\x73\x36\x95\x7a\x3c\xc1\x15\xeb\xc7\xe8\xfc\x1d\xb0\x69\x15\xe4\xf1\x69\x51\xaf\x65\xd6\x7d\x7b\xc4\xce\xc8\x95\xaf\x21\x08\x88\x53\xfa\xbf\x5f\x80\x9d\x7c\x8d\x12\x60\x27\x35\x16\x60\xcf\x99\x5b\x47\x02\xec\xa4\x35\x50\x80\x4f\x71\x36\x9d\x00\x7b\xb9\xb2\x06\xfe\x4d\x0f\xcc\x70\x1d\x66\xf6\x05\x26\x3e\x21\x15\x8b\x30\x12\xa1\x6a\x61\x4d\x3c\xaf\x30\xb7\xbc\xe2\x6b\xca\x64\xb9\xda\xde\xac\x66\xa6\x54\xdc\xd6\xb0\x74\x9a\x1d\xdf\xf2\xe5\x70\x0c\x53\x9e\x1b\x51\x38\x87\xb0\x32\x91\x7c\x2a\x40\x4a\xaa\x1b\xe1\x62\xc6\xf9\xd6\xa6\x94\x95\xcd\x24\x4c\x18\x5c\x02\xb3\x22\xcb\x2a\xdc\x84\x63\x25\xad\x7a\x67\x11\x95\xd0\xa6\xbc\x1a\x8f\x31\xe4\x21\x99\xda\x82\xdd\x09\xb8\x16\xb8\x0f\xbc\xc0\x14\xc1\xec\x60\x9c\x26\xdc\x65\x27\xd9\x8c\x43\x92\x89\x84\x59\x85\xa9\x42\x48\x08\x73\x9b\x4a\x5a\x91\x36\x2b\xec\x19\xad\x30\xcb\x90\x56\x6c\x61\xa2\x33\x5e\x71\x2d\x19\xdd\x91\x5d\x81\x6d\x79\xab\xac\x20\xde\x4a\x1b\x1e\xf3\x8a\x75\x5b\xd2\x5c\xca\x9a\x96\x08\x10\xce\xc2\xec\x61\x8e\xe0\xb6\x60\x9c\x25\x1f\xc7\x63\xf3\xd7\x3b\xde\x35\x37\xbb\x0c\x09\xe7\xd7\x36\xbc\x0b\x90\xd2\xaa\xb0\x68\xc8\x9c\xca\x86\xd6\xba\xcc\x51\x3e\x19\xcd\x05\xda\x4a\xae\x51\x41\xdf\xa6\x14\x9a\x57\xa5\x61\xbe\x31\x56\x98\xcf\x3a\xa5\xe7\x25\x1d\x3b\xda\x30\xcd\x29\xd7\x9e\xc0\x95\xa9\x1d\xf5\x27\x5e\x09\x1d\xa1\x8b\xbc\xf4\x8c\x36\x3a\x71\xc0\xdf\x81\x3e\xf2\xd2\x1b\xa4\x91\x86\x70\x38\x95\x4e\x3a\xc9\xdb\xb3\x56\x7a\x63\xb5\xd4\x77\x80\xe2\x6b\xc6\xcb\x4d\x43\x5e\x2b\x3e\x66\xe9\xb8\xe1\x15\x28\xe5\x37\xb0\xf0\xba\x95\x20\x4f\xba\xe5\xd3\x02\xfa\xc5\xda\xc3\xe1\x28\xb1\xf6\xd0\x63\xb1\xf6\x1e\x4a\x79\x24\xd6\x1e\x7a\x03\xc5\xfa\x34\x87\xd3\x89\xf5\x09\xde\xac\xb7\x78\x76\x99\xc6\x94\x52\xdd\x7f\xe6\xe7\x97\x47\xd3\x88\x54\xa1\xce\x8b\x6c\x67\x55\x98\x37\xf9\x4c\xe5\x6d\x49\xab\xad\x65\x41\x72\x09\x73\x67\x4e\x70\xe3\xd3\x1c\x5c\xe6\xd6\x54\xdd\x26\x14\xad\x96\x19\x99\x8a\x94\xa3\xc0\x94\x37\x80\xe1\x50\x9a\x95\x69\xc9\x27\x52\x70\xd6\x7a\x24\x08\x33\x79\x43\x51\x74\xcc\xa5\x8a\x05\x9b\x06\x44\x73\xe6\x64\x3b\xde\x54\x15\x5c\xdb\x0e\x33\x6e\x4c\xab\xa4\x88\xd4\x94\x36\xa6\xbc\xea\x9b\xf3\x61\x3f\x6c\xe6\x31\x3e\xb3\x56\x15\x92\xa9\x8a\x39\x5a\x35\x1b\x9c\x82\xa2\x3a\xc5\xe6\xa8\x61\x33\x07\x53\x0c\x1c\x9b\x93\xf0\x04\x6f\x5c\x73\xb2\x17\xc6\x81\xbe\x32\xde\xfc\x8c\x78\xe3\x19\x34\xbb\x96\x4c\xae\x59\x5d\x67\x17\x26\xe7\xcd\xfe\xac\xa0\xfe\xe1\x8e\x60\x5e\x10\x29\xc3\xb5\x81\xe9\x8d\x58\x7f\x98\xcd\xf9\x86\xa2\xcb\x92\x37\xed\x61\xde\x45\x4b\xee\x52\xce\x1b\xe9\xb8\x86\xa8\x14\xe6\x36\xe4\xe8\x1c\x3a\x07\xae\x49\xc9\x55\xd4\x70\x5b\x10\xbd\x9a\x7e\x79\x03\xd7\x8c\x3b\x21\xb7\xa2\x89\x49\x0f\xe1\x39\xe3\xb9\x63\x4e\xe1\xd2\xb4\x05\x47\xef\x31\xad\x60\x37\x9c\x9c\x56\xb2\x6b\x62\x4e\x02\x14\xf4\x4c\x61\xea\x1b\x3e\xcc\x09\xb2\x52\x73\xe2\x1a\x9e\x67\xca\xdf\x6d\x96\x0d\x5c\x12\x93\x34\x57\x90\xdb\x21\xdb\x97\x83\x9d\xe2\x88\x9e\x0f\x5c\x29\xb8\x5f\x18\xbf\xe0\x72\x53\xc1\x89\x0b\xa1\x38\xd6\xa3\x1d\xef\x42\xd8\xe4\x08\xc8\x55\xdf\xc6\xb2\x07\x53\x23\xb4\xa8\x87\x9a\xd1\xa1\xde\x53\x7b\x0f\x34\xa8\x87\xd6\x20\xfd\x79\x9a\xb3\xa9\xb4\xe7\x09\xae\xec\x86\x5a\x76\x76\x49\xf8\xb4\xca\xf3\xf8\x3c\xe4\xd7\xdc\x43\x76\xa5\xb7\xf9\xf6\x89\xd1\x16\x3e\x3e\xfa\x02\xb0\x21\xf0\x7d\xce\x80\x87\xb7\x51\x42\xec\xa4\xc6\x42\xec\x39\x59\xfa\x48\x88\x9d\xb4\x06\x0a\xf1\x29\xce\xa6\x13\x62\x2f\x57\xd6\xaf\x7d\xd3\x13\x6e\x0e\x8f\xec\xfe\xb6\x4e\x31\x28\xf8\xe0\x28\xb8\x16\x30\xd5\x82\xf3\x8e\x80\x04\x44\x7d\x88\x2c\x0b\x3e\xf0\xd5\x2c\x1c\xd7\x84\x0c\xe3\x7e\xf0\x26\x2b\x4c\x78\xc4\xa6\x02\xf7\xa2\x4d\x67\x79\xed\x39\xd4\x15\x6e\x02\xc6\x2b\x05\x99\xe1\xd8\x51\x3d\xdd\x3b\xb3\x23\xb0\xd3\x4b\xc7\xa0\xc6\x71\xdc\xfa\x01\x5e\x7a\xdb\x0f\x42\x8a\x8f\x83\xa9\x30\xe2\xe4\x81\xd1\x91\x9e\x5d\x74\x33\x2d\x3a\x8e\x4e\xad\xff\x16\x0f\x0c\x28\x78\xef\xa2\x48\xf7\x61\xe2\x3a\xb7\xb8\xb3\xe7\xcb\x15\xe4\xcd\xbb\x0e\x08\x70\x4f\xcf\x28\x39\x77\x11\x63\x61\x77\xbf\x40\xe0\x48\xe2\x5d\x94\x06\x8a\xfd\x09\xae\xa6\x93\x7d\x1f\x4b\xa3\xcb\xf8\xa7\x04\xc0\xde\x6b\x19\xbe\xb6\x6a\xb3\xb3\xce\xb9\xd9\x49\xd9\x37\xd9\xc7\x9c\x2e\x84\xeb\xa6\x6d\x44\x6d\x4d\x76\xb4\xa0\x20\xb0\xe3\xa0\xa6\xcf\x8f\x32\x5b\x81\x92\xd7\x93\x6b\x77\xa9\x66\xdf\x04\x8e\x00\x47\x1f\x19\x03\x8b\xfe\xf7\x66\x1c\x00\xa2\xaf\xf5\x20\x28\x78\x46\x3f\x15\x08\x5c\x0c\x8c\x2e\xba\x9c\x56\xfc\xf7\xdf\x3d\xf2\x75\x95\x2a\x9f\x7d\x5e\x8c\x03\x03\x2e\x19\x6f\x78\xdf\xc0\x54\x8a\x35\xee\x9c\xd2\xde\x59\x1a\x25\xe4\x3d\x74\x58\xca\x7b\xdf\x01\x73\x24\xe6\x3d\xed\x07\xca\xb9\x9b\x83\xe9\x04\xdd\xc1\xc3\xd8\xec\xd0\x49\x25\xfd\xf8\x55\x3a\xdf\xce\x2b\x25\x9a\xe2\x25\x06\x36\x79\xd4\xdd\xf1\x6b\x25\x2c\x8e\xec\xc1\x97\xbb\x63\xd9\x2d\xcb\x37\xfb\x51\xf5\x7e\x24\x60\x16\xec\x42\xba\xb7\xcc\xc8\x7d\x52\x29\x2d\x6c\x15\xec\x92\x99\xc3\xf6\xf9\x83\x68\xc4\xa4\xa0\x70\x42\x9b\xa9\x90\x94\xbc\x20\xca\xfb\x80\x8a\xef\x2d\x93\x17\x7a\x19\xa7\x03\xf9\x5e\x29\x91\xf3\xde\xa1\xc5\x78\xe6\x58\xcc\x77\x3c\xcf\x11\xa8\x74\x50\x32\xb8\x74\xbe\x80\xe9\x00\x99\x0e\x1a\x83\xb0\xe9\xe7\x64\x2a\x74\x7a\x38\xb1\x71\x7a\xf8\xa6\x9e\x58\xef\xeb\xac\x5e\xbb\x62\xe1\x10\x65\xce\x57\x49\x24\x64\xdd\x10\x83\xc7\x9d\x3b\x5d\xd3\xc7\xd4\x28\x51\x75\x93\x63\x79\xf5\xbd\x13\xec\x48\x68\xdd\xd4\x06\x4a\xee\x49\xee\xa6\x13\x5f\x3f\x63\x5f\x45\xea\xe6\xee\xfb\xd6\xc6\x5b\x17\x5b\x8f\xdf\xda\x7a\xfc\xb4\xbf\x1e\x5f\x71\x3d\xbe\x2a\x69\xa9\xbe\x55\x94\xe9\x11\xa7\xac\xe9\x59\x3b\x0b\xde\xaa\xb1\xf5\xf8\x90\x57\xd0\x42\x7b\xc5\xb2\x0b\x0d\x2e\x15\x8d\x0d\xda\x39\xe5\x03\xd5\x63\x5b\x2b\xc7\xde\x1d\x82\x65\x9b\xd4\x28\x72\xda\xae\x80\xe5\x69\x4b\xca\x3a\xc8\x79\x4b\xa7\x2e\xfb\xeb\xf1\xa3\x84\xf8\x82\xd7\x66\x71\x06\x5e\x6b\x41\x5a\x3f\xe6\x6d\xa7\xbe\xec\x05\x95\xf3\xbb\x32\x04\x79\x7a\x89\x63\x65\xf7\xe8\x29\x8c\x00\xda\x11\x0d\x83\xae\x9e\xf7\xe9\x1d\x40\xea\xa8\xdd\x20\x1c\xb9\x46\x3c\x15\x78\x7a\xc7\x6d\xeb\xe8\xdf\x18\x31\xfb\xaf\x22\x7c\xed\x03\xc4\xfa\x5e\xd6\xf5\x25\x85\xf3\x89\x4d\x61\x60\x2f\xcc\x15\x79\xa4\xfc\x4e\x98\x4c\xd0\x16\xa6\xeb\x00\x31\xc7\xfc\x8c\x92\xe8\x5e\x4a\x2c\xd7\x8e\x17\x42\x1e\x49\x77\x2f\x8d\x81\x32\xee\xe3\x64\x3a\x49\x77\x72\x32\xfa\x88\xb0\x29\xe5\xbd\xf7\xed\x9a\xdf\xd0\x99\x11\xff\x7e\xdf\xc7\x57\xf5\xbe\x0f\xb7\x38\x8d\xd0\x10\x6e\x62\x46\x49\xf8\x5e\x0c\x7b\xa0\x27\xdc\x94\x06\xa9\x8a\x93\x5c\x4d\xa5\x2d\xfc\x2c\x7d\x1d\x6f\xe8\x70\xbd\x6f\xf7\x9b\x3a\x6a\xf3\xdf\x6a\xc3\xa8\x8d\x28\xeb\x87\x7b\xc2\x6f\x49\x33\xa5\x43\x31\x6f\x67\xf5\xc2\xdd\x2b\x0b\xa3\x30\xef\xa5\xc8\xc0\x3f\xf1\xc6\xe7\x23\xf4\x7b\x69\x0e\x54\x01\x43\x38\x9d\x4e\x0f\x9c\xe4\xd0\x2a\x83\xf8\xec\x43\x77\x27\x54\x06\x3c\xfc\xff\x5e\x11\xea\xff\x15\x00\x00\xff\xff\x49\xed\x46\xfd\x00\x80\x00\x00")

func bindataGoBytes() ([]byte, error) {
	return bindataRead(
		_bindataGo,
		"bindata.go",
	)
}

func bindataGo() (*asset, error) {
	bytes, err := bindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bindata.go", size: 53248, mode: os.FileMode(436), modTime: time.Unix(1521399131, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"0_create_users_table.up.sql": _0_create_users_tableUpSql,
	"0_drop_users_table.down.sql": _0_drop_users_tableDownSql,
	"10_add_reports_delete_cascade.up.sql": _10_add_reports_delete_cascadeUpSql,
	"10_remove_reports_delete_cascade.down.sql": _10_remove_reports_delete_cascadeDownSql,
	"11_add_lat_long.up.sql": _11_add_lat_longUpSql,
	"11_drop_lat_long.down.sql": _11_drop_lat_longDownSql,
	"12_add_end_date_rename_start_date.up.sql": _12_add_end_date_rename_start_dateUpSql,
	"12_drop_end_date_rename_start_date.down.sql": _12_drop_end_date_rename_start_dateDownSql,
	"13_add_notes_field.up.sql": _13_add_notes_fieldUpSql,
	"13_remove_notes_field.down.sql": _13_remove_notes_fieldDownSql,
	"14_add_youtube_url_table.up.sql": _14_add_youtube_url_tableUpSql,
	"14_remove_youtube_url.down.sql": _14_remove_youtube_urlDownSql,
	"15_add_is_blue_reports.down.sql": _15_add_is_blue_reportsDownSql,
	"15_remove_is_blue_reports.up.sql": _15_remove_is_blue_reportsUpSql,
	"16_create_picklist_tables.up.sql": _16_create_picklist_tablesUpSql,
	"17_drop_picklist_tables.down.sql": _17_drop_picklist_tablesDownSql,
	"1_create_events_table.up.sql": _1_create_events_tableUpSql,
	"1_drop_events_table.down.sql": _1_drop_events_tableDownSql,
	"2_create_matches_table.up.sql": _2_create_matches_tableUpSql,
	"2_drop_matches_table.down.sql": _2_drop_matches_tableDownSql,
	"3_create_alliances_table.up.sql": _3_create_alliances_tableUpSql,
	"3_drop_alliances_table.down.sql": _3_drop_alliances_tableDownSql,
	"4_create_reports_table.up.sql": _4_create_reports_tableUpSql,
	"4_drop_reports_table.down.sql": _4_drop_reports_tableDownSql,
	"5_add_event_type.up.sql": _5_add_event_typeUpSql,
	"5_remove_event_type.down.sql": _5_remove_event_typeDownSql,
	"6_add_bluewon.down.sql": _6_add_bluewonDownSql,
	"6_remove_bluewon.up.sql": _6_remove_bluewonUpSql,
	"7_add_photos_table.up.sql": _7_add_photos_tableUpSql,
	"7_remove_photos_table.down.sql": _7_remove_photos_tableDownSql,
	"8_add_isdmin.up.sql": _8_add_isdminUpSql,
	"8_remove_isadmin.down.sql": _8_remove_isadminDownSql,
	"9_add_reports_cascade.up.sql": _9_add_reports_cascadeUpSql,
	"9_remove_reports_cascade.down.sql": _9_remove_reports_cascadeDownSql,
	"bindata.go": bindataGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"0_create_users_table.up.sql": &bintree{_0_create_users_tableUpSql, map[string]*bintree{}},
	"0_drop_users_table.down.sql": &bintree{_0_drop_users_tableDownSql, map[string]*bintree{}},
	"10_add_reports_delete_cascade.up.sql": &bintree{_10_add_reports_delete_cascadeUpSql, map[string]*bintree{}},
	"10_remove_reports_delete_cascade.down.sql": &bintree{_10_remove_reports_delete_cascadeDownSql, map[string]*bintree{}},
	"11_add_lat_long.up.sql": &bintree{_11_add_lat_longUpSql, map[string]*bintree{}},
	"11_drop_lat_long.down.sql": &bintree{_11_drop_lat_longDownSql, map[string]*bintree{}},
	"12_add_end_date_rename_start_date.up.sql": &bintree{_12_add_end_date_rename_start_dateUpSql, map[string]*bintree{}},
	"12_drop_end_date_rename_start_date.down.sql": &bintree{_12_drop_end_date_rename_start_dateDownSql, map[string]*bintree{}},
	"13_add_notes_field.up.sql": &bintree{_13_add_notes_fieldUpSql, map[string]*bintree{}},
	"13_remove_notes_field.down.sql": &bintree{_13_remove_notes_fieldDownSql, map[string]*bintree{}},
	"14_add_youtube_url_table.up.sql": &bintree{_14_add_youtube_url_tableUpSql, map[string]*bintree{}},
	"14_remove_youtube_url.down.sql": &bintree{_14_remove_youtube_urlDownSql, map[string]*bintree{}},
	"15_add_is_blue_reports.down.sql": &bintree{_15_add_is_blue_reportsDownSql, map[string]*bintree{}},
	"15_remove_is_blue_reports.up.sql": &bintree{_15_remove_is_blue_reportsUpSql, map[string]*bintree{}},
	"16_create_picklist_tables.up.sql": &bintree{_16_create_picklist_tablesUpSql, map[string]*bintree{}},
	"17_drop_picklist_tables.down.sql": &bintree{_17_drop_picklist_tablesDownSql, map[string]*bintree{}},
	"1_create_events_table.up.sql": &bintree{_1_create_events_tableUpSql, map[string]*bintree{}},
	"1_drop_events_table.down.sql": &bintree{_1_drop_events_tableDownSql, map[string]*bintree{}},
	"2_create_matches_table.up.sql": &bintree{_2_create_matches_tableUpSql, map[string]*bintree{}},
	"2_drop_matches_table.down.sql": &bintree{_2_drop_matches_tableDownSql, map[string]*bintree{}},
	"3_create_alliances_table.up.sql": &bintree{_3_create_alliances_tableUpSql, map[string]*bintree{}},
	"3_drop_alliances_table.down.sql": &bintree{_3_drop_alliances_tableDownSql, map[string]*bintree{}},
	"4_create_reports_table.up.sql": &bintree{_4_create_reports_tableUpSql, map[string]*bintree{}},
	"4_drop_reports_table.down.sql": &bintree{_4_drop_reports_tableDownSql, map[string]*bintree{}},
	"5_add_event_type.up.sql": &bintree{_5_add_event_typeUpSql, map[string]*bintree{}},
	"5_remove_event_type.down.sql": &bintree{_5_remove_event_typeDownSql, map[string]*bintree{}},
	"6_add_bluewon.down.sql": &bintree{_6_add_bluewonDownSql, map[string]*bintree{}},
	"6_remove_bluewon.up.sql": &bintree{_6_remove_bluewonUpSql, map[string]*bintree{}},
	"7_add_photos_table.up.sql": &bintree{_7_add_photos_tableUpSql, map[string]*bintree{}},
	"7_remove_photos_table.down.sql": &bintree{_7_remove_photos_tableDownSql, map[string]*bintree{}},
	"8_add_isdmin.up.sql": &bintree{_8_add_isdminUpSql, map[string]*bintree{}},
	"8_remove_isadmin.down.sql": &bintree{_8_remove_isadminDownSql, map[string]*bintree{}},
	"9_add_reports_cascade.up.sql": &bintree{_9_add_reports_cascadeUpSql, map[string]*bintree{}},
	"9_remove_reports_cascade.down.sql": &bintree{_9_remove_reports_cascadeDownSql, map[string]*bintree{}},
	"bindata.go": &bintree{bindataGo, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

