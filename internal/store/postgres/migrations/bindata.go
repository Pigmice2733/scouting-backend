// Code generated by go-bindata.
// sources:
// 0_create_users_table.up.sql
// 0_drop_users_table.down.sql
// 10_add_reports_delete_cascade.up.sql
// 10_remove_reports_delete_cascade.down.sql
// 11_add_lat_long.up.sql
// 11_drop_lat_long.down.sql
// 12_add_end_date_rename_start_date.up.sql
// 12_drop_end_date_rename_start_date.down.sql
// 13_add_notes_field.up.sql
// 13_remove_notes_field.down.sql
// 14_add_youtube_url_table.up.sql
// 14_remove_youtube_url.down.sql
// 1_create_events_table.up.sql
// 1_drop_events_table.down.sql
// 2_create_matches_table.up.sql
// 2_drop_matches_table.down.sql
// 3_create_alliances_table.up.sql
// 3_drop_alliances_table.down.sql
// 4_create_reports_table.up.sql
// 4_drop_reports_table.down.sql
// 5_add_event_type.up.sql
// 5_remove_event_type.down.sql
// 6_add_bluewon.down.sql
// 6_remove_bluewon.up.sql
// 7_add_photos_table.up.sql
// 7_remove_photos_table.down.sql
// 8_add_isdmin.up.sql
// 8_remove_isadmin.down.sql
// 9_add_reports_cascade.up.sql
// 9_remove_reports_cascade.down.sql
// bindata.go
// DO NOT EDIT!

package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __0_create_users_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\xf0\xf3\x0f\x51\x70\x8d\xf0\x0c\x0e\x09\x56\x28\x2d\x4e\x2d\x2a\x56\xd0\xe0\xe2\x04\x31\xf2\x12\x73\x53\x15\x42\x5c\x23\x42\xc0\x2a\xfc\x42\x7d\x7c\x14\x42\xfd\x3c\x03\x43\x5d\x75\xb8\x38\x33\x12\x8b\x33\x52\x53\x02\x12\x8b\x8b\xcb\xf3\x8b\x52\x50\x55\x71\x69\x02\x02\x00\x00\xff\xff\xe1\x96\xd7\xd2\x62\x00\x00\x00")

func _0_create_users_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__0_create_users_tableUpSql,
		"0_create_users_table.up.sql",
	)
}

func _0_create_users_tableUpSql() (*asset, error) {
	bytes, err := _0_create_users_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0_create_users_table.up.sql", size: 98, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __0_drop_users_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\xb6\x06\x04\x00\x00\xff\xff\xbd\x6d\xc5\x8d\x11\x00\x00\x00")

func _0_drop_users_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__0_drop_users_tableDownSql,
		"0_drop_users_table.down.sql",
	)
}

func _0_drop_users_tableDownSql() (*asset, error) {
	bytes, err := _0_drop_users_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0_drop_users_table.down.sql", size: 17, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __10_add_reports_delete_cascadeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcb\xbd\xaa\x02\x31\x14\xc4\xf1\xfe\x3e\xc5\x94\xbb\xcf\x70\xab\x63\xce\xac\x2c\x86\x64\x39\x89\x85\xd5\x62\x11\x1b\xf1\x83\x44\x0b\xdf\x5e\x16\x59\x6c\x6c\x66\xe0\x07\x7f\xf1\x99\x86\x2c\x1b\x4f\xd4\x72\xbf\xd5\x47\x83\x5a\x9c\xe0\x62\x48\xd9\x64\x0c\x79\xf5\xf9\xf3\xa5\xce\xa7\x73\x79\xfd\xff\xfd\x4a\x45\x15\x43\x34\x8e\xdb\x80\x1d\x0f\xdd\x9a\xf4\x30\x0e\x34\x06\xc7\x84\x67\x2b\xb5\x75\xcb\x5e\x8f\x97\xd2\x23\x06\xec\x27\x95\x4c\x38\x49\x4e\x94\x8b\x28\x3d\xbf\xf2\x0e\x00\x00\xff\xff\xcf\x01\x46\xde\xa7\x00\x00\x00")

func _10_add_reports_delete_cascadeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__10_add_reports_delete_cascadeUpSql,
		"10_add_reports_delete_cascade.up.sql",
	)
}

func _10_add_reports_delete_cascadeUpSql() (*asset, error) {
	bytes, err := _10_add_reports_delete_cascadeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "10_add_reports_delete_cascade.up.sql", size: 167, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __10_remove_reports_delete_cascadeDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x81\x89\xc7\x43\xe8\xd4\xa2\xf8\xb4\xec\xd4\x4a\x6b\x2e\x6c\x5a\x1d\x5d\x5c\x14\xdc\xfc\x83\x5c\x3d\xdd\xfd\x14\xbc\x5d\x23\x35\x60\x5a\x34\x15\x82\x5c\xdd\x5c\x83\x5c\xfd\x9c\x5d\x83\x15\x4a\x8b\x53\x8b\x8a\x35\x40\x64\x5e\x62\x6e\xaa\xa6\x82\xbf\x9f\x42\x68\x80\x8b\x63\x88\xab\x82\xb3\x63\xb0\xb3\xa3\x8b\x2b\x20\x00\x00\xff\xff\xd6\xa5\x2c\xc4\x95\x00\x00\x00")

func _10_remove_reports_delete_cascadeDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__10_remove_reports_delete_cascadeDownSql,
		"10_remove_reports_delete_cascade.down.sql",
	)
}

func _10_remove_reports_delete_cascadeDownSql() (*asset, error) {
	bytes, err := _10_remove_reports_delete_cascadeDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "10_remove_reports_delete_cascade.down.sql", size: 149, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __11_add_lat_longUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x49\x2c\x51\x28\x4a\x4d\xcc\xb1\xe6\x22\xa0\x2e\x3f\x2f\x1d\xaa\x10\x10\x00\x00\xff\xff\x85\xb1\x54\x59\x51\x00\x00\x00")

func _11_add_lat_longUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__11_add_lat_longUpSql,
		"11_add_lat_long.up.sql",
	)
}

func _11_add_lat_longUpSql() (*asset, error) {
	bytes, err := _11_add_lat_longUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "11_add_lat_long.up.sql", size: 81, mode: os.FileMode(436), modTime: time.Unix(1519604808, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __11_drop_lat_longDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x49\x2c\xb1\xe6\x22\xa4\x26\x3f\x2f\xdd\x9a\x0b\x10\x00\x00\xff\xff\x97\xf4\x31\x93\x49\x00\x00\x00")

func _11_drop_lat_longDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__11_drop_lat_longDownSql,
		"11_drop_lat_long.down.sql",
	)
}

func _11_drop_lat_longDownSql() (*asset, error) {
	bytes, err := _11_drop_lat_longDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "11_drop_lat_long.down.sql", size: 73, mode: os.FileMode(436), modTime: time.Unix(1519691743, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __12_add_end_date_rename_start_dateUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xcd\x4b\x71\x49\x2c\x49\x55\x08\xf1\xf4\x75\x0d\x0e\x71\xf4\x0d\x08\x89\x52\xf0\xf3\x0f\x51\xf0\x0b\xf5\xf1\xb1\xe6\x02\x04\x00\x00\xff\xff\x34\x34\x21\xbd\x3c\x00\x00\x00")

func _12_add_end_date_rename_start_dateUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__12_add_end_date_rename_start_dateUpSql,
		"12_add_end_date_rename_start_date.up.sql",
	)
}

func _12_add_end_date_rename_start_dateUpSql() (*asset, error) {
	bytes, err := _12_add_end_date_rename_start_dateUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "12_add_end_date_rename_start_date.up.sql", size: 60, mode: os.FileMode(436), modTime: time.Unix(1519691743, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __12_drop_end_date_rename_start_dateDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xcd\x4b\x71\x49\x2c\x49\xb5\xe6\x02\x04\x00\x00\xff\xff\x5f\x1d\xc8\xf2\x28\x00\x00\x00")

func _12_drop_end_date_rename_start_dateDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__12_drop_end_date_rename_start_dateDownSql,
		"12_drop_end_date_rename_start_date.down.sql",
	)
}

func _12_drop_end_date_rename_start_dateDownSql() (*asset, error) {
	bytes, err := _12_drop_end_date_rename_start_dateDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "12_drop_end_date_rename_start_date.down.sql", size: 40, mode: os.FileMode(436), modTime: time.Unix(1519691743, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __13_add_notes_fieldUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\xcb\x2f\x49\x2d\x56\x08\x71\x8d\x08\x01\x04\x00\x00\xff\xff\xfe\xf0\xf7\xb7\x29\x00\x00\x00")

func _13_add_notes_fieldUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__13_add_notes_fieldUpSql,
		"13_add_notes_field.up.sql",
	)
}

func _13_add_notes_fieldUpSql() (*asset, error) {
	bytes, err := _13_add_notes_fieldUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "13_add_notes_field.up.sql", size: 41, mode: os.FileMode(436), modTime: time.Unix(1519691743, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __13_remove_notes_fieldDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\xcb\x2f\x49\x2d\x06\x04\x00\x00\xff\xff\xd9\x75\x26\xc9\x25\x00\x00\x00")

func _13_remove_notes_fieldDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__13_remove_notes_fieldDownSql,
		"13_remove_notes_field.down.sql",
	)
}

func _13_remove_notes_fieldDownSql() (*asset, error) {
	bytes, err := _13_remove_notes_fieldDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "13_remove_notes_field.down.sql", size: 37, mode: os.FileMode(436), modTime: time.Unix(1519691743, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __14_add_youtube_url_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\xa8\xcc\x2f\x2d\x29\x4d\x4a\x0d\x0d\xf2\x51\x08\x71\x8d\x08\x01\x04\x00\x00\xff\xff\x90\x0a\x4c\xbe\x2e\x00\x00\x00")

func _14_add_youtube_url_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__14_add_youtube_url_tableUpSql,
		"14_add_youtube_url_table.up.sql",
	)
}

func _14_add_youtube_url_tableUpSql() (*asset, error) {
	bytes, err := _14_add_youtube_url_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "14_add_youtube_url_table.up.sql", size: 46, mode: os.FileMode(436), modTime: time.Unix(1519852258, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __14_remove_youtube_urlDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xa8\xcc\x2f\x2d\x29\x4d\x4a\x0d\x0d\xf2\x01\x04\x00\x00\xff\xff\x16\xd5\x03\x4c\x2a\x00\x00\x00")

func _14_remove_youtube_urlDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__14_remove_youtube_urlDownSql,
		"14_remove_youtube_url.down.sql",
	)
}

func _14_remove_youtube_urlDownSql() (*asset, error) {
	bytes, err := _14_remove_youtube_urlDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "14_remove_youtube_url.down.sql", size: 42, mode: os.FileMode(436), modTime: time.Unix(1519852257, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1_create_events_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8b\x4d\x0a\xc2\x30\x10\x85\xd7\x99\x53\xbc\xa5\x42\x2f\x11\x65\x84\x60\x12\x4b\xf2\x84\xd6\x5d\xc1\x01\x41\xac\x60\x83\xe0\xed\x45\x44\xb7\xdf\xcf\xb6\xa8\xa7\x82\x7e\x13\x15\x61\x87\x7c\x20\x74\x08\x95\x15\xf6\xb4\xb9\x2d\x58\x89\xbb\xda\x0b\xd4\x81\xe8\x4b\x48\xbe\x8c\xd8\xeb\xd8\x89\x9b\xa7\x9b\x7d\xf9\xe7\xca\xc7\x18\x3b\x71\xcb\xe5\xfe\x68\xf9\x67\x3a\x71\xe7\xa9\x19\x18\x92\x56\xfa\xd4\xf3\xf4\x8f\x65\xfd\x0e\x00\x00\xff\xff\x50\xda\x81\x7d\x7d\x00\x00\x00")

func _1_create_events_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_create_events_tableUpSql,
		"1_create_events_table.up.sql",
	)
}

func _1_create_events_tableUpSql() (*asset, error) {
	bytes, err := _1_create_events_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_create_events_table.up.sql", size: 125, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1_drop_events_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x06\x04\x00\x00\xff\xff\x27\xe5\x89\x64\x11\x00\x00\x00")

func _1_drop_events_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_drop_events_tableDownSql,
		"1_drop_events_table.down.sql",
	)
}

func _1_drop_events_tableDownSql() (*asset, error) {
	bytes, err := _1_drop_events_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_drop_events_table.down.sql", size: 17, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_create_matches_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x4d\x6a\xc3\x30\x10\x46\xd7\xd2\x29\x66\x69\x83\x2e\xa1\x84\x71\x10\x91\xa5\x20\x4d\x69\xd2\x9d\x2b\x0f\x34\xf8\xaf\xd8\x72\xc1\xb7\x2f\x2e\xf5\xa6\x74\xfb\xde\xf7\xc1\x3b\x07\xd4\x84\x40\xfa\x64\x11\x4c\x05\xce\x13\xe0\xdd\x44\x8a\x30\x34\x39\x7d\xf0\x02\x85\x14\x1d\x6f\x40\x78\x27\xb8\x05\x53\xeb\xf0\x80\x2b\x3e\x94\x14\xfc\xc5\x63\xbe\x1e\x6e\xbf\xba\x17\x6b\x95\x14\x9f\x33\xb7\xcf\x94\xb9\xa5\xe7\xc0\x40\xa6\xc6\x48\xba\xbe\xd1\x9b\x92\xa2\x49\x79\x6d\xfa\x7f\xc4\x7b\xbf\xf2\xeb\x34\xc2\xc9\x7b\x8b\xda\x29\x29\x66\x6e\x63\x9a\x66\x06\xe3\x08\x2f\x18\x7e\x47\x7f\x59\xe5\x03\x9a\x8b\xdb\xa3\x8a\x23\xa9\x84\x80\x15\x06\x74\x67\x8c\xf0\x03\x97\xa2\xe3\xad\x94\xe5\x77\x00\x00\x00\xff\xff\x95\xc6\xa5\x34\xf2\x00\x00\x00")

func _2_create_matches_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_create_matches_tableUpSql,
		"2_create_matches_table.up.sql",
	)
}

func _2_create_matches_tableUpSql() (*asset, error) {
	bytes, err := _2_create_matches_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_create_matches_table.up.sql", size: 242, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_drop_matches_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x06\x04\x00\x00\xff\xff\xed\x06\x12\x35\x12\x00\x00\x00")

func _2_drop_matches_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_drop_matches_tableDownSql,
		"2_drop_matches_table.down.sql",
	)
}

func _2_drop_matches_tableDownSql() (*asset, error) {
	bytes, err := _2_drop_matches_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_drop_matches_table.down.sql", size: 18, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_create_alliances_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8c\x41\x0a\x83\x30\x14\x44\xd7\xe6\x14\xb3\x34\xe0\x25\x54\xc6\x12\x0c\x09\x8d\x11\xec\xd2\xca\x87\x4a\xd5\x45\xad\x0b\x6f\x5f\xb0\xb4\x14\xba\x9d\x79\xef\x95\x81\x79\x24\x62\x5e\x58\xc2\x54\x70\x3e\x82\x9d\x69\x62\x83\x7e\x9a\xc6\x7e\x19\x64\x45\xaa\x92\xb9\x7f\x0e\xb7\x5a\x76\x44\x76\xf1\xa0\x5c\x6b\x6d\xa6\x92\x71\x2d\xa6\x4d\x50\x78\x6f\x99\xbb\xdf\x67\xd9\xe6\xab\x3c\xfe\x84\xca\x07\x9a\x93\x43\xcd\x4b\xfa\xa9\x6a\x04\x56\x0c\x74\x25\x1b\x1c\xa3\xac\xe9\x5d\x76\x9d\xa9\xa4\x75\xe6\xdc\xf2\x8b\x66\x78\x77\xb5\xd2\xaf\x00\x00\x00\xff\xff\x80\x51\xbd\xfc\xbc\x00\x00\x00")

func _3_create_alliances_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_create_alliances_tableUpSql,
		"3_create_alliances_table.up.sql",
	)
}

func _3_create_alliances_tableUpSql() (*asset, error) {
	bytes, err := _3_create_alliances_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_create_alliances_table.up.sql", size: 188, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_drop_alliances_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\xcc\xc9\xc9\x4c\xcc\x4b\x4e\x2d\x06\x04\x00\x00\xff\xff\x17\xe1\x40\xdc\x14\x00\x00\x00")

func _3_drop_alliances_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_drop_alliances_tableDownSql,
		"3_drop_alliances_table.down.sql",
	)
}

func _3_drop_alliances_tableDownSql() (*asset, error) {
	bytes, err := _3_drop_alliances_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_drop_alliances_table.down.sql", size: 20, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_create_reports_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xc1\x6a\x86\x30\x10\x84\xcf\xe6\x29\xf6\x98\x40\x5e\x42\x7f\xd6\x12\x0c\x09\x8d\x11\xec\x31\x94\x85\x96\x56\x5b\x92\x58\xf0\xed\x8b\x4a\x40\x6b\x2f\x21\xcc\x7c\x3b\x33\x0f\x87\xb5\x47\xf0\x75\xa3\x11\x54\x0b\xc6\x7a\xc0\x51\xf5\xbe\x87\x48\xdf\x5f\x31\x27\xe0\xac\x3a\xbe\x14\xc1\xe3\xe8\x77\xc6\x0c\x5a\x4b\x56\xd1\x0f\xcd\xb9\xa3\xf5\x66\x4c\x21\xbf\xbe\xfd\x67\xbc\xa7\xe6\x73\x21\x68\xac\xd5\x58\x9b\xb3\x93\x29\x4c\x37\x3c\xe5\x90\xd3\x4d\x1d\x8c\x7a\x1e\x90\x97\x76\x09\xa5\x4e\xc2\x96\x22\x24\x03\x68\xad\x43\xf5\x64\xa0\xc3\x17\x5e\xf6\x0b\x70\xd8\xa2\x43\xf3\xc0\x1e\x96\x44\x31\xf1\xed\x9d\xc3\x44\x42\xb2\xea\x7c\x52\xb2\x2f\x27\xbb\x98\xf8\x07\xad\x7f\xf1\x32\xe0\x82\xef\x22\x1d\x3c\x13\xbf\x01\x00\x00\xff\xff\xf1\xac\xe6\x8d\x6b\x01\x00\x00")

func _4_create_reports_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_create_reports_tableUpSql,
		"4_create_reports_table.up.sql",
	)
}

func _4_create_reports_tableUpSql() (*asset, error) {
	bytes, err := _4_create_reports_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_create_reports_table.up.sql", size: 363, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_drop_reports_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\xb6\x06\x04\x00\x00\xff\xff\x55\x5c\x72\x90\x13\x00\x00\x00")

func _4_drop_reports_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_drop_reports_tableDownSql,
		"4_drop_reports_table.down.sql",
	)
}

func _4_drop_reports_tableDownSql() (*asset, error) {
	bytes, err := _4_drop_reports_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_drop_reports_table.down.sql", size: 19, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_add_event_typeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x83\x88\x84\x54\x16\xa4\x2a\x78\xfa\x85\xb8\xba\xbb\x06\x29\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\x00\x02\x00\x00\xff\xff\x47\xcd\xa1\xbe\x38\x00\x00\x00")

func _5_add_event_typeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_add_event_typeUpSql,
		"5_add_event_type.up.sql",
	)
}

func _5_add_event_typeUpSql() (*asset, error) {
	bytes, err := _5_add_event_typeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_add_event_type.up.sql", size: 56, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_remove_event_typeDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x83\x08\x85\x54\x16\xa4\x02\x02\x00\x00\xff\xff\xfa\x1d\x58\x8e\x28\x00\x00\x00")

func _5_remove_event_typeDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_remove_event_typeDownSql,
		"5_remove_event_type.down.sql",
	)
}

func _5_remove_event_typeDownSql() (*asset, error) {
	bytes, err := _5_remove_event_typeDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_remove_event_type.down.sql", size: 40, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __6_add_bluewonDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xca\x29\x4d\x0d\xcf\xcf\x53\x70\xf2\xf7\xf7\x71\x75\xf4\x03\x04\x00\x00\xff\xff\x08\x2a\x0a\x8b\x2e\x00\x00\x00")

func _6_add_bluewonDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__6_add_bluewonDownSql,
		"6_add_bluewon.down.sql",
	)
}

func _6_add_bluewonDownSql() (*asset, error) {
	bytes, err := _6_add_bluewonDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "6_add_bluewon.down.sql", size: 46, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __6_remove_bluewonUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xca\x29\x4d\x0d\xcf\xcf\x03\x04\x00\x00\xff\xff\xc2\xb9\xb0\x4c\x27\x00\x00\x00")

func _6_remove_bluewonUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__6_remove_bluewonUpSql,
		"6_remove_bluewon.up.sql",
	)
}

func _6_remove_bluewonUpSql() (*asset, error) {
	bytes, err := _6_remove_bluewonUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "6_remove_bluewon.up.sql", size: 39, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __7_add_photos_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\xf0\xf3\x0f\x51\x70\x8d\xf0\x0c\x0e\x09\x56\x28\xc8\xc8\x2f\xc9\x2f\x56\xd0\xe0\xe2\x2c\x49\x4d\xcc\x55\x08\x71\x8d\x08\x01\x4b\xfb\x85\xfa\xf8\xe8\x70\x71\x96\x16\xe5\xa0\x8b\x29\x28\x28\x28\x84\xfa\x79\x06\x86\xba\x6a\x80\xb4\xe8\x28\x94\x16\xe5\x68\x72\x69\x02\x02\x00\x00\xff\xff\x7a\x9d\xf7\x09\x64\x00\x00\x00")

func _7_add_photos_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__7_add_photos_tableUpSql,
		"7_add_photos_table.up.sql",
	)
}

func _7_add_photos_tableUpSql() (*asset, error) {
	bytes, err := _7_add_photos_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "7_add_photos_table.up.sql", size: 100, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __7_remove_photos_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\xc8\xc8\x2f\xc9\x2f\x06\x04\x00\x00\xff\xff\xb4\x52\x78\x3f\x11\x00\x00\x00")

func _7_remove_photos_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__7_remove_photos_tableDownSql,
		"7_remove_photos_table.down.sql",
	)
}

func _7_remove_photos_tableDownSql() (*asset, error) {
	bytes, err := _7_remove_photos_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "7_remove_photos_table.down.sql", size: 17, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __8_add_isdminUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xd1\x09\x85\x30\x0c\x05\xd0\x55\xee\x2a\xe9\x6b\xde\xd7\x35\x01\x49\x06\x10\xac\x50\x50\x3f\x0c\xee\xef\x11\x86\xae\x08\x69\x54\xbc\x35\x9e\x82\xf4\x8e\x9f\x33\x17\xc3\x2c\xd9\xaf\x79\xa3\xb9\x53\xc5\x60\x1e\xb0\x24\xd1\xf5\x2f\xc9\xc0\xb1\x9d\x35\xbe\x00\x00\x00\xff\xff\xe7\x70\xa1\xca\x43\x00\x00\x00")

func _8_add_isdminUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__8_add_isdminUpSql,
		"8_add_isdmin.up.sql",
	)
}

func _8_add_isdminUpSql() (*asset, error) {
	bytes, err := _8_add_isdminUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "8_add_isdmin.up.sql", size: 67, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __8_remove_isadminDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x2c\x76\x4c\xc9\xcd\xcc\x03\x04\x00\x00\xff\xff\x54\xf1\x61\xd5\x25\x00\x00\x00")

func _8_remove_isadminDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__8_remove_isadminDownSql,
		"8_remove_isadmin.down.sql",
	)
}

func _8_remove_isadminDownSql() (*asset, error) {
	bytes, err := _8_remove_isadminDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "8_remove_isadmin.down.sql", size: 37, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __9_add_reports_cascadeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x81\x89\xc7\x43\xe8\xd4\xa2\xf8\xb4\xec\xd4\x4a\x6b\x2e\x6c\x5a\x1d\x5d\x5c\x14\xdc\xfc\x83\x5c\x3d\xdd\xfd\x14\xbc\x5d\x23\x35\x60\x5a\x34\x15\x82\x5c\xdd\x5c\x83\x5c\xfd\x9c\x5d\x83\x15\x4a\x8b\x53\x8b\x8a\x35\x40\x64\x5e\x62\x6e\xaa\xa6\x82\xbf\x9f\x42\x68\x80\x8b\x63\x88\xab\x82\xb3\x63\xb0\xb3\xa3\x8b\x2b\x20\x00\x00\xff\xff\xd6\xa5\x2c\xc4\x95\x00\x00\x00")

func _9_add_reports_cascadeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__9_add_reports_cascadeUpSql,
		"9_add_reports_cascade.up.sql",
	)
}

func _9_add_reports_cascadeUpSql() (*asset, error) {
	bytes, err := _9_add_reports_cascadeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "9_add_reports_cascade.up.sql", size: 149, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __9_remove_reports_cascadeDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x81\x89\xc7\x43\xe8\xd4\xa2\xf8\xb4\xec\xd4\x4a\x6b\x2e\x6c\x5a\x1d\x5d\x5c\x14\xdc\xfc\x83\x5c\x3d\xdd\xfd\x14\xbc\x5d\x23\x35\x60\x5a\x34\x15\x82\x5c\xdd\x5c\x83\x5c\xfd\x9c\x5d\x83\x15\x4a\x8b\x53\x8b\x8a\x35\x40\x64\x5e\x62\x6e\xaa\x26\x20\x00\x00\xff\xff\x47\x73\x6b\x93\x83\x00\x00\x00")

func _9_remove_reports_cascadeDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__9_remove_reports_cascadeDownSql,
		"9_remove_reports_cascade.down.sql",
	)
}

func _9_remove_reports_cascadeDownSql() (*asset, error) {
	bytes, err := _9_remove_reports_cascadeDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "9_remove_reports_cascade.down.sql", size: 131, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bindataGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\xdf\x6f\xe3\x38\x92\x7e\xb6\xff\x0a\x6d\x80\x5d\x24\x87\xbe\xb4\x7e\xff\x08\xd0\x2f\x3b\x33\x07\xcc\xc3\xcd\x02\xb7\xb3\x4f\xc7\x83\x41\x49\x54\xc6\x38\xc7\xce\xd8\xce\x0c\xbb\x07\xfd\xbf\x2f\x3e\x56\x29\xb1\x2d\x91\x96\xd5\x42\xd2\x0d\xcc\x83\x3b\xb6\x24\x16\x59\x54\x7d\xf5\x15\xc9\x22\xfb\xfd\x7b\xef\xbb\x4d\xad\xbc\x7b\xb5\x56\x5b\xb9\x57\xb5\x57\x7e\xf4\xee\x37\xff\x59\x2e\xd7\xb5\xdc\xcb\xdb\xf9\xfb\xf7\xde\x6e\xf3\xb4\xad\xd4\xee\x0e\xdf\xfd\x45\xb5\x55\x72\xaf\x16\x4f\x3b\xb5\xdd\x2d\xf6\xb2\x5c\xa9\xdb\xa7\xc7\xdb\xdd\xaf\x2b\xba\x5d\x6f\x37\x8f\x47\x37\xeb\xcd\xef\xeb\xf6\x76\xe0\x2f\x64\x5d\x2f\xb6\xea\x71\xb3\xdd\xef\x16\xb5\x5a\xa9\xbd\x5a\x54\x72\x57\xc9\xfa\x50\x4c\xe0\x2f\xb6\xea\x61\xf3\x9b\xb2\x3d\x7a\x24\x34\x30\x42\x57\x72\xbf\x58\x6d\xd6\xf7\x87\x62\x02\x6a\xce\xf3\xad\xa3\x62\xa1\x29\xa6\xd6\xf5\xa2\x86\x42\x5b\xb5\x96\x0f\x6a\xb1\xdb\xcb\xed\xde\x5c\x39\x14\x14\x92\x20\xc7\xc3\x47\xa2\x23\x23\x7a\xbd\xd9\xab\xdd\xa2\x59\xaa\x55\x7d\x28\x2b\x6a\x75\x3b\xbc\x7f\x54\x3c\x36\xc5\x3f\x6e\x9e\xf6\x4f\xa5\x5a\x3c\x6d\x57\x9d\x7e\x0e\xe2\x56\xc8\xc1\x53\xc7\x42\xda\x17\xa5\x7e\x53\xeb\x7d\xf7\x4d\x71\xd7\x1c\xdd\x3d\x2c\x1f\xb6\xe5\x1f\xe4\xbe\xfa\x45\x75\x05\x70\x97\x1c\xdf\x3e\x94\x10\xb5\x12\xe4\x6a\xb5\x94\xeb\xaa\x47\x46\x44\x32\x4e\x1f\x38\x94\x12\xb7\x52\x5a\x4b\x38\x95\x11\x93\x8c\xe3\xdb\x87\x12\x12\x7a\xcf\x50\x74\xb1\xff\xf8\x78\x58\x36\x69\x7b\xf1\xe0\xee\x61\xd1\xd4\x14\x2d\x57\x4f\xea\xf7\xcd\xfa\xe4\x0e\x97\x6c\x6f\xbe\x08\xcd\x4c\xa1\xc7\x5f\x36\xfb\x4d\xb7\xb5\x59\x5b\xee\xe8\xfe\xa1\xe4\xdc\x14\x5f\xee\xea\x87\xe5\xa1\xd4\xbc\x2d\xb8\xdc\x49\x73\xeb\xb0\x4c\x71\x04\xab\x2e\x9e\x8a\x53\x38\xf5\xe1\xa8\x85\xfc\xfd\x06\xbf\xbe\xff\x87\xf7\xd3\x3f\x7e\xf6\x7e\xf8\xfe\xc7\x9f\xff\x32\x9f\x3f\xca\xea\xff\xe5\xbd\xf2\x1e\x96\xf7\x5b\xb9\x5f\x6e\xd6\xbb\xf9\x7c\xf9\x00\x59\xde\xf5\x7c\x76\x55\x7e\xdc\xab\xdd\xd5\x7c\x76\x55\x6d\x1e\x1e\xb7\x6a\xb7\x7b\x7f\xff\x69\xf9\x88\x0b\xcd\xc3\x1e\x7f\x96\x1b\xfa\xf7\xfd\x72\xf3\xb4\x5f\xae\xf0\x63\x63\x0a\x3c\xca\xfd\x2f\xef\x9b\xe5\x4a\xe1\x0b\x2e\xec\xf6\xdb\xe5\xfa\xde\xdc\xdb\x2f\x1f\xd4\xd5\xfc\x66\x3e\x6f\x9e\xd6\x55\xdb\xbc\xff\x51\xb2\xbe\xc6\x17\xef\x7f\xff\x0f\xd5\xbe\xf3\x80\x44\x8f\x8a\xdd\x78\xd7\xed\x55\xb5\xdd\x6e\xb6\x37\xde\x1f\xf3\xd9\xfd\x27\xf3\xcb\xbb\xfb\xe0\xa1\x55\xb7\x3f\xa9\xdf\x21\x44\x6d\xaf\x4d\xb3\xf1\xfb\xef\x4f\x4d\xa3\xb6\x46\xec\xcd\xcd\x7c\xb6\x6c\x4c\x81\xbf\x7c\xf0\xd6\xcb\x15\x44\xcc\xb6\x6a\xff\xb4\x5d\xe3\xe7\x3b\xaf\x79\xd8\xdf\xfe\x00\xe9\xcd\xf5\x15\x04\x79\x7f\xfd\xf5\xce\xfb\xeb\x6f\x57\xd4\x12\x53\xd7\xcd\x7c\xf6\x79\x3e\x9f\xfd\x26\xb7\x5e\xf9\xd4\x78\x54\x0f\x55\x32\x9f\x2d\xa8\x39\x1f\xbc\xe5\xe6\xf6\xbb\xcd\xe3\xc7\xeb\xbf\x95\x4f\xcd\x3b\xef\xfe\xd3\xcd\x7c\x56\xad\x7e\x68\x5b\x7a\xfb\xdd\x6a\xb3\x53\xd7\x37\xf3\xa9\xda\x03\x31\x24\xdf\x22\x48\x6d\xb7\xd4\x6e\xbe\x58\x3e\x35\xb7\x7f\x47\xd3\xaf\x6f\xde\xe1\x89\xf9\xe7\xf9\x1c\x10\xf1\xe4\x6e\xa7\xf6\xe8\xf2\xa7\x6a\x0f\x29\x46\x3f\x7e\x1f\xf3\xd9\x72\xdd\x6c\x3c\x6f\xb3\xbb\xfd\xaf\xe5\x4a\xfd\xb8\x6e\x36\xcf\xe5\xf8\x15\xb6\xd7\x0f\x24\x98\x77\xe8\x79\xfc\x1a\xe7\xb3\xdd\xf2\x93\xf9\xbd\x5c\xef\xd3\x78\x3e\x7b\x00\x45\x79\xcf\x42\xff\x7b\x53\x2b\x73\xf1\xe7\xe5\x83\xf2\x60\x26\xb7\xf8\x86\x7a\x8c\xa9\x5c\x37\xcb\xd3\xba\x6e\xbc\x9f\xe4\x83\xba\xbe\xe1\x1a\x50\x27\x6b\xd9\x2c\x6f\x51\xfb\xfc\xb3\xa3\xec\x3f\x97\x9f\x50\xd6\xb4\xe6\xb8\x28\x1a\xea\x2c\x8a\xb6\x5e\xdf\x1c\xb6\xfc\x58\x00\x54\x3b\x27\x00\xca\x5d\xdf\xbc\x28\xda\x91\xc0\xda\xdb\x85\xfc\xb8\xfb\x7e\xb9\xbd\xbe\xf1\xca\xcd\x66\x75\x58\x5a\xae\x76\x67\x34\xff\xb8\x23\xc5\xd5\xb6\x91\x95\xfa\xe3\xf3\x41\x69\x36\x09\x58\xf9\x62\xd1\x17\x18\xfc\xeb\xf1\x9f\xbf\xae\xbc\x0f\x6c\x19\xd7\x57\x42\x07\x8d\xd0\x79\x29\xb4\x9f\x0b\xed\xfb\xfd\x9f\xa6\x11\x3a\x0b\x85\xf6\x15\xfd\xcd\x12\xa1\xfd\x4a\xe8\x2c\x10\x3a\x49\xa8\x2c\xbe\x67\xb1\xd0\x4d\xf8\x72\xbd\xf1\xe9\x5a\x12\xd1\xf7\x26\x12\xda\x6f\x84\x4e\xf0\xac\x2f\x74\x5e\xd3\x75\xc8\x82\x6c\xbf\x10\x3a\x49\x85\x0e\x73\xa1\xc3\x5a\xe8\x58\xd1\xdf\x50\xd2\xf5\xda\x17\x5a\xe1\x83\xb6\xc4\x42\x47\x01\xd5\x17\xa0\xce\x88\xea\x09\x12\xa1\xe3\x50\xe8\xa4\x12\x3a\x8c\xe8\x7b\xe5\x93\x8c\xa6\xa2\xdf\x59\x2d\x74\x56\x09\x1d\xc4\xf4\xbb\xa9\x85\x8e\xd0\x06\x3c\x0f\x39\x35\xe9\x58\xe6\x42\x47\xf8\x44\x54\x07\xfa\x09\xdf\x93\x90\xea\xf2\xc3\x97\xeb\xf8\x54\x25\xe9\x88\xef\xe6\x19\x9f\xfa\x01\xfd\x91\x16\xf4\xbc\xf9\x1c\xf4\x2b\x3e\x2a\x10\xba\x80\x7e\x99\xd0\x75\x28\x74\x1a\x1e\xf6\xff\x55\xeb\x6f\xed\x6f\x94\x7d\x42\x9f\xaf\x6d\x3d\xc7\x81\xaf\x9e\xcf\x66\x0e\xeb\x78\x37\x9f\xcd\xae\x1c\x41\xe5\xd5\xbb\xf9\xec\xe6\x19\xd8\x76\x39\x68\xce\x7f\x18\xbf\x74\xd8\x1c\xe3\x98\x9e\xbd\xff\x59\x8d\xce\x79\xda\x67\x07\x69\x5c\xdc\xdd\x87\x53\xb8\xfc\x01\x47\x72\xe7\xb9\xf5\xf1\xe0\x32\xee\xbc\x22\x7f\xe7\x01\xfb\x77\x87\xae\xe1\x3a\x8e\xd2\x1b\x73\x1d\x88\xbe\x23\xc4\xff\x6b\xbd\xd4\xd7\x41\x12\xe4\x71\x1e\xa6\x61\xfc\xce\xf3\x6f\x3e\xcf\x67\x12\xf5\xff\xcd\x68\xfc\x87\x51\xf3\xce\x63\x6d\xd1\xb8\x3b\xf3\xef\xe7\xe7\x17\x22\xdf\x9d\xa2\xf5\x34\x4e\xff\x7e\xf3\xfb\xfa\x8b\xd0\x5a\x10\x3a\x0c\xe2\x7c\x3b\x4a\xfb\xd0\x56\xa6\x42\xfb\x29\xa1\xec\xd4\x5a\xcb\x5a\xe8\xb4\x16\xba\x4a\x08\xc1\x41\x60\xb3\x56\x8b\x46\xa3\xac\xd5\x22\x8b\xad\xd5\x3a\xc6\xe9\x58\xab\x45\xce\x40\x6b\x75\x6b\x34\x9d\xb5\x3a\xf4\x61\x6b\x0d\xb2\xb7\xb4\x56\xe7\xb0\x71\x3c\xc9\xa4\x15\x39\x51\x98\x98\x94\xe4\x2c\xe1\xe4\xe1\xa8\x2b\x98\x2d\x1c\xbe\x12\x3a\x52\x64\x7e\x45\x2c\x74\x09\xc7\xdb\x10\xa1\xc8\x52\xe8\x34\x12\xba\x52\x42\x4b\x10\x40\x25\x74\x9e\x0a\x9d\x82\x2c\x0a\xa1\x73\x7c\x12\xa1\xeb\x84\x9c\x2c\x4c\x37\x28\x49\x6e\x0e\xe7\x0f\x73\x2f\x85\xae\x01\x19\x25\x74\x90\x0a\x9d\x14\xd4\x2e\xf3\x49\x89\x80\xfc\x4c\xe8\xac\xa1\x72\x45\x41\x75\xa0\x2e\xc8\x8a\x1b\xa1\xeb\x98\x20\x58\x36\x54\x57\x9c\x91\xfc\x44\x0a\x5d\x54\x24\x03\xf5\xc7\xb9\xd0\x75\x41\xed\x33\x84\x0a\xc8\x82\x38\x0b\x22\x12\x99\xb0\x2e\x19\x11\x9c\xb9\x5f\x33\x14\x01\x59\x29\x74\x9c\x30\xe9\x45\x42\x47\xb1\xd0\xb9\x12\xba\x06\x21\xf9\x42\x07\x35\xc1\xbf\xae\x85\x2e\x40\x80\xe8\x07\x9f\xc8\x16\xcf\x02\xe2\x15\xda\x16\x0b\x9d\x66\x42\x87\xe8\xfb\x84\xc8\x0f\xef\x01\x7d\x90\x37\x42\x17\x4c\x4c\x20\x54\x94\x51\xe8\xdb\x4c\xe8\x02\xf5\x56\x44\x92\x71\x41\x2e\x04\xef\x04\xef\x1a\x6e\x25\xaa\xa9\x0f\x1a\x0e\x1e\x4e\x5d\x09\xde\x9b\x1f\x08\x1d\x83\xfc\x58\xcf\x3e\x57\x72\xde\xdc\x46\xf8\x94\xf3\x42\x8d\x73\x19\x32\x43\x72\xe2\x65\xce\x4b\x1e\xe4\x6e\x06\x6b\x3d\x95\xdf\x19\xa6\x6a\xeb\x80\xd2\xb7\xf6\x40\xce\x09\xa9\x2f\x65\x4f\x40\x05\x0c\x0a\x96\xf4\x6b\x8a\xe7\x5c\x0c\x0a\x28\x82\x3d\x2b\xb0\x69\x43\x2c\x1a\x72\x3c\x0b\xd7\x74\xca\xc6\xb8\xd6\xa4\x42\x37\x19\xb9\x9c\x36\xfe\x6d\xeb\x6e\xd8\x15\xe5\x01\xb9\x2d\xc0\x14\x10\x57\x39\xb9\x17\x89\xe7\x72\xa1\xcb\x98\xe0\x88\x6b\x68\x43\x0a\xe8\x29\x72\x57\x70\x37\x70\x01\x88\x67\x13\x8e\x77\xeb\x8a\xe2\x60\xe3\x8e\x2a\x82\x28\xdc\x03\xdc\x09\xee\x97\x15\x3d\x0f\xa8\x47\x70\x93\x3e\xc9\x81\xbb\x80\x9b\xc9\x39\xb6\xae\x59\x66\x2b\x07\xe5\x0b\x2e\x9b\xb7\x71\xb8\xe4\x58\x98\x63\xe2\x5c\x92\xcc\xd8\x27\x97\x07\xf7\x02\x37\x98\x2a\x72\xf7\x32\x25\xf9\x70\x19\x45\x43\xb1\x79\x9a\x93\x2b\xcb\xd9\xb5\xe7\x39\xb9\x79\xf3\x5c\x44\xd7\x4a\x9f\xbe\x4b\xae\x07\x6e\x2c\xf4\xbb\xee\xa6\x4e\xc9\xa5\xc2\x55\x83\x4e\xe0\xbe\x2c\xee\x66\x88\x6d\x8d\xf3\x39\x43\x24\xb7\x8e\x67\xd8\x94\x6b\xd7\xfb\x0c\xa9\x63\xa8\x0b\xba\xa0\x27\x26\xf4\x43\x43\x35\x6f\x9d\x51\x5c\xbc\xa9\x33\x3a\x9e\xf0\xfe\xb2\x51\xf6\x25\x9e\x27\x6e\x63\x77\x04\x41\x35\x5b\xfe\x81\xd7\xc1\xf3\xe6\xd9\xe0\xc4\xe3\xb4\x81\x46\x42\xe8\xac\x98\xc0\x81\x0c\x3c\xdb\x7a\xb4\x18\x1e\xad\x12\xba\x0c\x84\x56\x08\x72\x42\xa1\xa5\x4f\x1e\x26\x6a\xc8\xd3\x05\x1c\xac\x05\x3e\x7d\x4e\x51\x87\x80\x0b\xe5\x93\x98\x82\xa9\xc4\x32\x5e\xe8\xeb\xc4\x31\x10\xeb\x11\x43\x78\xea\x5d\x95\x38\x05\x4f\x4f\xe9\x61\x48\xb1\xb7\x7e\x32\x58\x58\x14\x60\x0c\xe4\xc1\xa5\x10\x28\x52\x3f\xce\xfd\x7c\x2a\x08\x1c\xad\xec\xbc\x26\xff\x9e\x43\x81\x93\x7b\x1d\x48\x38\xb2\xfa\x58\xe8\x30\x7d\xb1\xfa\x36\xa4\x06\x47\xf7\x59\x3d\x42\xe6\x86\xe7\xa8\x8a\x88\x64\x5a\xac\xbe\xaf\xdf\xc6\x19\x7e\x9f\xa4\xd6\xf6\xfb\xd7\xdd\xba\xe6\xdf\x27\x63\x28\x02\x1c\x9a\x4c\x08\x02\x9b\x26\x8c\x83\x2c\xba\x1c\x07\x45\x90\xc5\xd1\x34\x38\x38\xb7\x88\xf9\xed\x91\x03\xe4\x54\x2c\x07\xcf\xb7\xf0\xc0\xdf\x76\xfa\xd7\x8c\xcc\x63\x9e\x1a\xae\x79\xaa\x98\xaf\x99\xdf\x39\x85\xb1\x68\xef\xe9\x54\xb0\x99\x02\x2e\xb9\xce\xe0\x05\x76\x7e\xd8\x3f\x01\x85\x50\x14\x9f\x30\xa0\x99\x02\x33\x75\xdb\x07\xad\x41\xaf\x62\x0c\xd2\x06\x09\x26\xe0\x0d\x5c\xd3\x3e\xc5\xe1\xa0\x1a\x86\xc1\xf2\x92\x5e\x98\x0c\xa5\x83\xd5\x66\xd0\xa6\xfe\x1b\x83\xf6\x4c\x36\xc1\xb7\x4a\x67\x2e\xec\x96\x89\x1b\x67\x09\x07\x77\xa0\x44\xd4\x17\xe6\x56\x9c\x0d\xeb\xbd\x71\x50\x1b\x26\xbb\x45\xdb\xd0\xac\x90\x2e\xe0\x86\xd5\x33\x14\x73\x17\xf5\xc8\x84\xb0\x1b\xae\x3f\x23\x2f\x7e\x5b\xe4\x75\x12\x73\x5e\x8f\x1f\x87\x4c\xdb\x5c\x32\x80\xaa\x4a\x92\x61\x30\x56\x93\x8c\xb6\xee\x9c\x39\xd0\x0f\xfa\xb1\xd6\x28\xe6\xc5\x4c\xe8\x32\xa3\x36\xf4\x62\xad\xbf\xbf\xc6\x20\xab\x5f\x12\xe1\xc8\x96\x2e\x75\x8a\x9a\x7e\x19\xc3\x30\xe2\xd4\x64\x32\x44\xd8\x35\x69\xed\x7f\xc4\xb0\x69\x52\xfb\xef\xe6\x9e\x7d\x53\x73\x97\x03\x80\x60\x5b\x49\xac\x0b\x0a\x18\x31\xae\xaa\xf0\xac\x6d\x3e\xce\xd1\x49\xe3\x2c\xdf\x2a\xae\x35\x7f\x47\x42\x60\x17\x03\x56\x69\x43\x81\x70\x4e\xbb\x09\xd1\xe0\x54\x8c\x21\x11\x5d\x3c\xb3\x3f\x29\x24\x2c\xc9\x96\xaf\x47\x0c\x66\x0e\xa0\x7e\x09\x94\x2a\xf5\x12\x94\x5d\x4a\x0c\x32\xa7\x19\x34\x83\xab\x9a\x70\x15\xf3\xd2\x9d\x19\x18\xd5\x54\xb7\x99\x15\x1b\x48\x16\x05\x7e\x4b\x5a\x7a\x2b\x15\xcd\xc6\xf5\xe2\xc6\xd5\x93\x63\x80\xe3\x92\x47\xc8\x71\x27\xca\x9e\x42\xc7\x25\x6f\x18\x76\x06\x68\x38\x19\x78\xce\xe9\xd6\x12\x4a\x7a\x31\x7a\xf2\x24\x0c\x93\x89\xe6\xe1\xfa\xf2\x90\x5f\x93\x50\x86\x80\xe7\x12\x42\x19\x0a\x20\x1b\x58\x82\x94\xd6\xe0\x4d\x72\x57\x45\xe4\x66\x01\x8b\xb5\xe3\xc6\x61\xc5\x2a\xae\x85\x8a\x23\x61\xbc\x8b\x14\xab\xb4\xa1\x40\x39\xa7\xdd\x84\x38\x71\x2a\xd6\xc2\x24\x1c\x07\x93\x6c\x1a\x98\xf4\x25\xe3\x8f\x67\x98\xa8\xa2\xe7\x60\x98\xf0\xcc\x55\x48\x89\x16\x81\xcf\x09\x27\x19\x25\x8a\xc0\xa0\xcb\x8a\x56\x21\xe3\x90\xd7\x4f\x02\xa1\xd3\x84\x93\x30\x7c\xca\x28\xc4\x70\x1d\x46\x8d\x6b\x75\x4a\xab\xaa\x55\xc0\xc9\x12\x01\x25\xb7\xe0\xd9\x3c\xe2\x8c\xc8\x9a\x12\x41\xe2\x98\x86\x0f\x35\x27\x57\x94\x29\x01\x48\x66\xb4\x62\x9a\x29\xa1\x03\x5e\x9d\x4d\xc1\x34\x19\x65\x42\x86\xcc\x68\xd0\xb3\xe0\x84\x12\x00\xb2\x84\xbc\x76\x38\xc3\x53\x78\x65\x29\x74\xcd\x33\xdf\x75\x4c\x2b\xd4\x2a\xa7\x36\x03\xe8\x60\xa4\xbc\x12\xba\xce\x85\x56\x25\xfd\x45\xb9\xa2\xa4\x76\xe0\x6f\x56\x53\x92\x8b\xca\x84\xae\x24\xad\x6e\x07\xb9\xd0\x11\x4f\x53\x20\x82\x54\x09\x0d\x8b\xd2\x9c\x9e\x4d\x33\xa1\x23\x49\xf7\x51\x4e\x16\x42\x07\x05\x95\x2b\x42\x72\x2e\x8d\xa4\x36\x35\x11\x39\xad\xbc\xa1\xbe\x6d\xea\xfe\x04\x14\x38\x1f\xe8\x02\x1d\x4c\x56\x68\x6d\x71\x0e\x56\x73\x19\xe3\x1a\xac\xc2\xc8\x31\x38\xf6\x89\x9c\xba\x05\xab\xa4\x61\x4e\xe1\x9c\x56\x93\xb9\x04\xa7\x4a\xed\x1a\x6e\x98\xbc\xe9\x1a\x6e\x77\xfb\xcd\x6b\x65\x60\xda\x26\xfc\x6c\xe3\xa6\x30\x23\x74\xe4\x9c\x3a\x66\xcb\xc0\xb4\xab\x34\xca\x6a\x6d\xc2\xd8\x6a\xed\xbb\x97\x3a\x56\x6b\x93\x34\xd0\x6a\xcf\x68\x35\x9d\xd5\xba\x54\xfa\x2a\xf2\x30\xfb\xf7\x84\x7d\x59\x02\x66\xae\x88\xc7\x52\xf8\xe5\xe8\x85\xc7\xe2\x83\x0c\x75\x58\x67\x9a\x52\x56\x3b\x38\x08\x23\x10\x19\x10\x5f\xc1\xaa\xf1\x7c\x11\x70\xb6\x8d\xcf\xf2\x0a\x2a\x5b\xb0\x85\xfb\xbc\x94\xd3\x80\x9f\x1a\xe2\x09\xa0\x06\x3c\x67\xa6\xc0\x1a\x92\x8b\x40\x50\xa6\x8c\x9a\x92\x12\x05\x11\x28\xe2\x39\xf0\x85\x9f\x31\x0f\xc5\x94\x59\x04\x0e\x68\x51\x81\x80\xcf\xe7\x24\xca\x80\xb9\xb2\xae\x89\x27\x4d\x36\x92\xcf\xcb\x49\x05\x73\x92\x4f\xd3\xe1\xe0\xec\x20\xa6\xe9\xef\xb4\x21\xb9\x59\x4e\xc8\x2b\x73\x92\x09\x2e\x07\xbf\xa1\x4c\xee\x93\x4e\x11\x27\x40\xa2\x6c\x53\x51\x92\xaa\xc9\x50\x42\xfd\x8a\x32\x9d\x4a\xf0\xb2\x14\x3a\xc8\x28\x5b\xab\xe0\xba\x8a\x86\x76\x17\x40\x77\x70\x77\xc1\xdc\x8b\x3e\x34\x3c\xe9\x53\x3b\xd0\x17\x55\xca\x5c\x2b\x49\x76\x1d\x10\xaf\x82\x07\x65\x48\x81\x77\x56\x50\x9e\x36\xfa\x23\x6b\x28\xe3\x29\x2b\x5f\x12\x32\xd1\x76\xe8\x8e\x58\xa5\x2a\xe8\x5e\xce\xdc\x8e\xf7\xfb\xfc\x8e\x15\xe9\x50\x48\xfa\x6d\x12\x40\x23\xb2\x25\x13\xbf\xe4\x14\x57\xc4\x9c\x14\x9b\x14\xe4\x9d\x7c\x2e\x63\x64\x96\x9c\x9d\x25\x29\xb3\x0c\xdc\x8d\xf7\x65\x92\x54\x13\x92\x99\x71\x12\x2a\x62\x07\xf3\x1e\x22\x5a\x45\x87\x3e\xa8\x4f\xd6\xd4\x27\x90\x9d\x65\x5d\xdb\x35\x23\xe3\x84\xfa\x06\x7d\x16\xb1\x97\xed\xf3\x8c\x0e\xdc\x8c\x70\x8d\x0e\x69\xc6\x37\x3a\x77\x6e\x9e\x38\x47\x87\xac\x41\xde\xf1\xbc\x66\x53\xb9\xc7\x33\x5a\xb1\x7f\x0c\x2f\x8f\xf3\xa7\x75\x90\xdd\x3d\xb1\xaf\x45\xeb\xae\x91\xb0\x8d\xda\x15\xdf\xc3\x20\x20\x4a\xe8\x6f\xbf\x01\x5b\xf5\x1a\x65\xc0\x56\x69\x6c\xc0\x8e\x9d\xc5\x1d\x03\xb6\xca\x1a\x68\xc0\xe7\x34\x9b\xce\x80\x9d\x5a\xb5\x04\xff\xa6\xdb\x82\x6c\x5b\xb6\xbf\x80\xe2\x63\x72\xb1\x18\x46\x62\xa8\x9a\xb7\x14\x1f\x13\x2d\x82\xe2\x55\xca\xc9\xc0\xbc\xa7\x00\xb4\x19\x26\x94\xc2\x57\xb1\x75\x9a\x4d\x7b\xc5\xcb\x16\x20\x93\x84\x1c\xd2\x70\x0e\xc3\xca\x58\xf2\xde\x87\x84\x5c\x37\x86\x8b\x29\xaf\x2a\x9b\x84\x5d\xa6\x49\x50\x18\x42\x02\xd0\x95\x62\x17\x6e\x86\x63\xa0\xa0\x98\x12\x84\x13\x45\xc3\x4f\x50\x15\xda\x90\xf9\x44\xb5\x39\x87\x13\x08\x2d\xf0\x1c\x74\x01\x15\x81\x76\xd0\x4e\x33\xdc\xe5\x20\xd9\xb4\x43\x12\x45\x82\x56\x41\x55\x18\x12\x82\x6e\x13\x50\x64\x4a\xfa\xe3\x6f\x13\x50\x9a\x63\x52\x11\x45\x83\x46\x41\xbb\x05\xa3\x3b\xe4\xdf\x40\x77\xc2\xa1\x01\x74\x2b\xda\xe1\x71\x43\x54\x56\x17\xd4\x97\xb2\xa4\x29\x02\x0c\x67\x41\x7b\xe8\x23\x84\x2d\x68\x67\xc1\x9b\x0e\xdb\x55\x7a\xd0\x35\xe8\x11\xe1\x17\x3c\x84\x59\x45\xac\xc8\xbb\xe0\x1d\x04\xa5\xd0\x41\x45\x74\x2a\x2b\xa1\x55\xc1\x1b\x16\x53\xea\x0b\x94\x95\x9c\x89\x83\xba\x4d\xc2\x37\x6f\x52\x04\x7d\xa3\xad\xa0\xcf\x32\xa1\xf7\x85\xd0\xab\x8f\x4a\x41\xcd\x09\x67\xd8\x20\x94\x29\x2d\x59\x36\x4e\x0b\x1d\xe1\x8b\x9c\xf2\x8c\x37\x3a\x73\x8c\xc1\x89\x3f\x72\xca\x1b\xe4\x91\x86\x68\x38\x95\x4f\x3a\xab\xdb\xb3\x57\x7a\x63\xb7\xd4\x77\x4c\xc4\x6b\x8e\x97\xab\x8a\xa2\x56\x7c\x10\xe5\xe3\xb7\x99\x81\x52\x6e\x82\x45\xd4\xad\x02\x8a\xa4\x6b\xde\x13\xd1\x6f\xd6\x0e\x0d\x47\x99\xb5\x43\x1e\x9b\xb5\xf3\xe8\x8d\x8e\x59\x3b\xe4\x0d\x34\xeb\xf3\x1a\x4e\x67\xd6\x67\x74\x6b\xa3\xc5\x8b\x93\x51\xa6\xb4\xea\xfe\x93\x4d\xbe\x7c\x34\x8d\x91\x2a\xdc\x79\x9e\x1e\xcc\x0a\xc7\x34\xca\x33\xf9\xc5\x05\xcd\xb6\x16\x39\xd9\x25\xe8\xce\xec\x53\xe7\x3d\x2b\x36\xba\x35\xb9\xc5\x31\x8d\x56\x8b\x94\xa8\x22\xe1\x51\x20\xe8\xb2\xe1\x99\x61\x33\x33\x2d\x79\xdf\x0d\xaf\xcd\x87\x01\x61\x26\xab\x68\x14\x1d\x71\x42\x66\xce\xd4\x80\xd1\x9c\xd9\xbf\x9f\x10\xd5\x04\x9c\xc1\x0f\x1a\x37\xd4\x2a\x69\x44\x6a\x12\x38\x13\x9e\xf5\xcd\x78\x4b\x23\xd3\x3c\xda\x67\xe6\xaa\x7c\xa2\xaa\x88\x47\xab\x66\x3b\x67\x40\xa3\x3a\xc5\x74\x54\x31\xcd\x81\x8a\x81\x63\xb3\xdf\x3f\xa0\x36\x81\x1a\xcd\x48\x38\xa2\xba\x40\x63\x66\x29\x27\xe0\xd1\xb4\xa2\x19\x5e\x50\xae\x99\x5d\xe7\x10\x26\x8b\xe8\x99\x34\xa7\xfa\x11\x8e\xa0\x5f\x30\x52\x46\x68\x03\xea\x0d\xd9\x7f\x44\x19\x51\x34\x46\x97\x05\x7c\x43\x44\xf4\x1e\xd4\x14\x2e\x41\x5f\x8c\xe0\x71\x0f\xa3\x52\xd0\xad\xcf\xa3\x73\xf8\x1c\x84\x26\x05\xe7\x8a\x23\x6c\xc1\xe8\xd5\xd4\x5b\x13\xbd\x9b\x76\xc7\x14\x56\x54\x11\xf9\x21\xbc\x67\xbc\x77\xf4\x29\x42\x9a\x3a\xe7\xd1\x7b\x44\x33\xd8\xe8\x5f\x53\x27\x87\x26\xe6\xbc\x83\x80\xde\x29\xa8\xbe\xe2\x2d\xab\xb0\x95\x12\xa3\x64\x49\xef\x33\xe1\xdf\x21\xcf\x15\x22\x24\x81\x6d\x35\x39\x85\x1d\x68\x53\xbb\x7d\x35\x0a\xe9\xfd\x20\x94\x42\xf8\x85\xf6\x07\x9c\x54\x1b\x44\xd4\xbf\x7e\xd0\x93\xb0\xc4\xab\x10\xe8\x67\xd8\x24\xec\xea\xe5\xb9\x17\x3f\xea\xc0\xd4\x08\x2f\xea\x90\x66\x7c\xa8\xf3\x6c\xa2\x13\x0f\xea\x90\x35\xc8\x7f\x9e\xd7\x6c\x2a\xef\x79\x46\xab\x36\x6b\x23\xbd\x38\xf1\x7d\x5a\xe7\xd9\x3d\xf5\xe9\x35\x8f\x30\xb0\x25\x31\xb9\x8e\x32\x40\x59\xc4\xf8\xa8\x0b\xc0\x86\xc1\xf7\x05\x03\x0e\xdd\x46\x19\xb1\x55\x1a\x1b\xb1\xe3\xfc\xac\x8e\x11\x5b\x65\x0d\x34\xe2\x73\x9a\x4d\x67\xc4\x4e\xad\xda\xb8\xf6\x4d\xf7\xf1\x9d\x1e\x4c\xf6\x6d\xed\xd5\xc8\x79\x7b\x2c\x42\x0b\x50\x75\x90\xf2\xb6\x25\x49\xa3\x3e\x8c\x2c\x73\x3e\xd6\xc6\x4c\x1c\x97\x84\x0c\x13\x7e\xf0\x22\x2b\x28\x3c\x64\xaa\xc0\xb3\x28\xd3\xb4\xba\xf6\x1c\x5d\x83\x30\x01\xed\x95\x01\xd1\x70\x64\xc9\x11\xef\xed\xd9\x11\xd8\xe9\x95\x63\x50\x63\x39\x54\xee\x04\x2f\xbd\xe5\x07\x21\xc5\xa5\xc1\x54\x18\xb1\xea\xc0\xe8\x48\x2e\x4e\x2d\x9a\x16\x1d\x9d\xb3\xf9\xbe\xc5\x6d\x11\x39\xaf\x5d\xe4\xc9\x31\x4c\x6c\xa7\x33\x35\xed\x2e\xfa\x9c\xa2\x79\xdb\x36\x08\x7b\xf7\x8c\xb2\x73\x9b\x30\x36\x76\xfb\x31\x89\x1d\x8b\xb7\x49\x1a\x68\xf6\x67\xb4\x9a\xce\xf6\x5d\x2a\x8d\xde\xac\x30\x25\x00\x8e\x0e\x9f\xfc\xda\x72\xea\x2e\xda\xcd\x27\x5f\xf2\xe8\x50\x77\xc5\xe9\x42\xb8\x6f\xca\x86\x54\x16\x1f\xd3\x9e\x84\xdb\x1b\xf5\xc7\x51\x66\x29\x50\xf2\x7c\x72\x69\x4f\x48\xed\xeb\xc0\x11\xe0\xe8\x13\x63\x60\xd1\x7f\x3a\xe8\x09\x20\xfa\x4a\x0f\x82\x82\xa3\xf5\x53\x81\xc0\xa6\xc0\xe8\xd4\xd2\x69\xcd\xff\xf8\x84\xd5\xaf\x2b\x21\xfb\xe2\x5d\x71\x16\x0c\xd8\x6c\xbc\xe2\x75\x83\xd2\xe7\xc9\x07\xcb\x59\x45\xbd\xbd\x34\xca\xc8\x7b\xe4\xb0\x95\xf7\x9e\x74\xdb\x31\xf3\x9e\xf2\x03\xed\xdc\xae\xc1\x74\x86\x6e\xd1\xa1\x1d\xcc\xbe\xe9\x38\xa0\x7b\x60\xf0\xb7\x73\x70\x66\x95\xbf\x8c\x81\xcd\xa6\x9a\xa6\x7b\x78\x66\x8b\xa3\xf6\x78\x8f\xc3\xb6\x1c\x6e\x3e\x30\xeb\x51\xe5\xf1\x48\xc0\x4c\xd8\xf9\xf4\x6c\x91\x52\xf8\xa4\x12\x9a\xd8\xca\x39\x24\x33\x47\x0a\xf2\x07\xa3\x11\x93\x82\xc2\x09\x6d\x79\x4a\xa3\x0f\x33\x21\xca\xeb\x80\x8a\x9f\x2d\xe2\x17\x79\x29\xa7\x03\xb9\x0e\xce\xcc\x78\xed\xb0\xc5\x78\x6a\x99\xcc\xb7\xbc\xcf\x11\xa8\xb4\x48\x32\xb8\xb4\x1e\x33\x7d\x82\x4c\x8b\x8c\x41\xd8\x74\x6b\x32\x15\x3a\x1d\x9a\xb4\xe3\x74\xff\x4d\x23\xb1\xde\x43\xbb\x5f\x73\xb6\xa9\x0f\x65\xd6\x03\x33\x63\x62\x37\x8c\xc1\xa3\xc6\x9e\xae\xe9\x52\x6a\x94\xa9\xda\xc5\xb1\xbd\xba\x4e\x3e\xef\x18\xad\x5d\xda\x40\xcb\x3d\xab\xdd\x74\xe6\xeb\x56\xec\xab\x48\xdd\x3c\x3c\x55\x7e\x3c\xbb\xc0\xde\x2a\x9f\x97\x4a\xf8\x74\xcb\xa8\x65\x86\x84\xbc\x3e\x6c\x56\x29\x8a\xd0\x55\x41\x53\xf5\xb5\xa2\x4c\x8f\x28\x61\x4f\xcf\xde\x39\xe0\xa5\x1a\x73\x74\xb1\x4f\xf6\x0a\x59\x28\xaf\xd8\x76\xe1\xc1\xa5\xa2\xb6\xc1\x3b\x27\x7c\x6c\x1c\x64\x15\x9c\x95\xd1\xf0\x49\x94\x6d\x52\x63\x90\xd1\x72\x05\x98\xa7\x2e\x28\xeb\x20\xe3\x25\x9d\x92\x37\x46\x54\x7c\xdc\x5c\xa0\x28\xca\x0a\x63\xd2\x0b\x51\x5b\x8b\x33\xe8\x5a\x06\xe4\xf5\x23\x5e\x76\xea\xcb\x5e\x50\x19\x9f\x08\x1a\x50\xa4\x17\x5b\x66\x76\x3b\x6f\x61\x04\xd0\x3a\x32\x0c\xba\x7a\xfe\xd7\x80\x13\x48\x75\xca\x0d\xc2\x91\xad\xc5\x53\x81\xa7\xb7\xdd\xed\x29\x1d\x6f\x8c\x98\xe3\xff\x70\xe1\xb5\xb7\x49\xf7\x1d\x49\x3e\x66\x7b\x34\x30\x90\xf1\x12\xa6\xb1\x69\x8e\xc2\x6c\x23\x8f\x84\x4f\xbe\x4d\x03\x5a\xc2\xb4\x6d\x93\xb6\xf4\xcf\x28\x8b\xee\x95\xc4\x76\x6d\xf9\x6f\x2f\x3a\xd6\xdd\x2b\x63\xa0\x8d\xbb\x34\x99\xce\xd2\xad\x9a\x8c\xde\x08\x3d\xa5\xbd\xf7\xfe\x1f\x22\x5f\xd7\xf1\x18\x7f\x9e\x6a\xfa\xed\x9c\x6a\x6a\x37\xa7\x11\x1e\xc2\x2e\xcc\x38\x09\xd7\x7f\x7f\x73\xe2\x27\xec\x92\x06\xb9\x8a\xb3\x5a\x4d\xe5\x2d\xdc\x2a\x7d\x1d\xe7\x90\xda\xfe\x57\xa1\x6f\xea\x40\x91\x3f\xdd\x86\x71\x1b\x61\xda\x0f\xf7\x98\xcf\x82\x37\x5b\x87\x22\x5e\xce\xea\x85\xbb\xd3\x16\x46\x61\xde\x29\x91\x81\x7f\xe6\xff\xb5\xea\xa0\xdf\x29\x73\xa0\x0b\x18\xa2\xe9\x74\x7e\xe0\xac\x86\xad\x33\x88\x2e\x3e\x5a\x28\x8f\xf3\x7f\x07\x00\x00\xff\xff\x6b\x19\xb1\x42\x00\x70\x00\x00")

func bindataGoBytes() ([]byte, error) {
	return bindataRead(
		_bindataGo,
		"bindata.go",
	)
}

func bindataGo() (*asset, error) {
	bytes, err := bindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bindata.go", size: 45056, mode: os.FileMode(436), modTime: time.Unix(1519852400, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"0_create_users_table.up.sql": _0_create_users_tableUpSql,
	"0_drop_users_table.down.sql": _0_drop_users_tableDownSql,
	"10_add_reports_delete_cascade.up.sql": _10_add_reports_delete_cascadeUpSql,
	"10_remove_reports_delete_cascade.down.sql": _10_remove_reports_delete_cascadeDownSql,
	"11_add_lat_long.up.sql": _11_add_lat_longUpSql,
	"11_drop_lat_long.down.sql": _11_drop_lat_longDownSql,
	"12_add_end_date_rename_start_date.up.sql": _12_add_end_date_rename_start_dateUpSql,
	"12_drop_end_date_rename_start_date.down.sql": _12_drop_end_date_rename_start_dateDownSql,
	"13_add_notes_field.up.sql": _13_add_notes_fieldUpSql,
	"13_remove_notes_field.down.sql": _13_remove_notes_fieldDownSql,
	"14_add_youtube_url_table.up.sql": _14_add_youtube_url_tableUpSql,
	"14_remove_youtube_url.down.sql": _14_remove_youtube_urlDownSql,
	"1_create_events_table.up.sql": _1_create_events_tableUpSql,
	"1_drop_events_table.down.sql": _1_drop_events_tableDownSql,
	"2_create_matches_table.up.sql": _2_create_matches_tableUpSql,
	"2_drop_matches_table.down.sql": _2_drop_matches_tableDownSql,
	"3_create_alliances_table.up.sql": _3_create_alliances_tableUpSql,
	"3_drop_alliances_table.down.sql": _3_drop_alliances_tableDownSql,
	"4_create_reports_table.up.sql": _4_create_reports_tableUpSql,
	"4_drop_reports_table.down.sql": _4_drop_reports_tableDownSql,
	"5_add_event_type.up.sql": _5_add_event_typeUpSql,
	"5_remove_event_type.down.sql": _5_remove_event_typeDownSql,
	"6_add_bluewon.down.sql": _6_add_bluewonDownSql,
	"6_remove_bluewon.up.sql": _6_remove_bluewonUpSql,
	"7_add_photos_table.up.sql": _7_add_photos_tableUpSql,
	"7_remove_photos_table.down.sql": _7_remove_photos_tableDownSql,
	"8_add_isdmin.up.sql": _8_add_isdminUpSql,
	"8_remove_isadmin.down.sql": _8_remove_isadminDownSql,
	"9_add_reports_cascade.up.sql": _9_add_reports_cascadeUpSql,
	"9_remove_reports_cascade.down.sql": _9_remove_reports_cascadeDownSql,
	"bindata.go": bindataGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"0_create_users_table.up.sql": &bintree{_0_create_users_tableUpSql, map[string]*bintree{}},
	"0_drop_users_table.down.sql": &bintree{_0_drop_users_tableDownSql, map[string]*bintree{}},
	"10_add_reports_delete_cascade.up.sql": &bintree{_10_add_reports_delete_cascadeUpSql, map[string]*bintree{}},
	"10_remove_reports_delete_cascade.down.sql": &bintree{_10_remove_reports_delete_cascadeDownSql, map[string]*bintree{}},
	"11_add_lat_long.up.sql": &bintree{_11_add_lat_longUpSql, map[string]*bintree{}},
	"11_drop_lat_long.down.sql": &bintree{_11_drop_lat_longDownSql, map[string]*bintree{}},
	"12_add_end_date_rename_start_date.up.sql": &bintree{_12_add_end_date_rename_start_dateUpSql, map[string]*bintree{}},
	"12_drop_end_date_rename_start_date.down.sql": &bintree{_12_drop_end_date_rename_start_dateDownSql, map[string]*bintree{}},
	"13_add_notes_field.up.sql": &bintree{_13_add_notes_fieldUpSql, map[string]*bintree{}},
	"13_remove_notes_field.down.sql": &bintree{_13_remove_notes_fieldDownSql, map[string]*bintree{}},
	"14_add_youtube_url_table.up.sql": &bintree{_14_add_youtube_url_tableUpSql, map[string]*bintree{}},
	"14_remove_youtube_url.down.sql": &bintree{_14_remove_youtube_urlDownSql, map[string]*bintree{}},
	"1_create_events_table.up.sql": &bintree{_1_create_events_tableUpSql, map[string]*bintree{}},
	"1_drop_events_table.down.sql": &bintree{_1_drop_events_tableDownSql, map[string]*bintree{}},
	"2_create_matches_table.up.sql": &bintree{_2_create_matches_tableUpSql, map[string]*bintree{}},
	"2_drop_matches_table.down.sql": &bintree{_2_drop_matches_tableDownSql, map[string]*bintree{}},
	"3_create_alliances_table.up.sql": &bintree{_3_create_alliances_tableUpSql, map[string]*bintree{}},
	"3_drop_alliances_table.down.sql": &bintree{_3_drop_alliances_tableDownSql, map[string]*bintree{}},
	"4_create_reports_table.up.sql": &bintree{_4_create_reports_tableUpSql, map[string]*bintree{}},
	"4_drop_reports_table.down.sql": &bintree{_4_drop_reports_tableDownSql, map[string]*bintree{}},
	"5_add_event_type.up.sql": &bintree{_5_add_event_typeUpSql, map[string]*bintree{}},
	"5_remove_event_type.down.sql": &bintree{_5_remove_event_typeDownSql, map[string]*bintree{}},
	"6_add_bluewon.down.sql": &bintree{_6_add_bluewonDownSql, map[string]*bintree{}},
	"6_remove_bluewon.up.sql": &bintree{_6_remove_bluewonUpSql, map[string]*bintree{}},
	"7_add_photos_table.up.sql": &bintree{_7_add_photos_tableUpSql, map[string]*bintree{}},
	"7_remove_photos_table.down.sql": &bintree{_7_remove_photos_tableDownSql, map[string]*bintree{}},
	"8_add_isdmin.up.sql": &bintree{_8_add_isdminUpSql, map[string]*bintree{}},
	"8_remove_isadmin.down.sql": &bintree{_8_remove_isadminDownSql, map[string]*bintree{}},
	"9_add_reports_cascade.up.sql": &bintree{_9_add_reports_cascadeUpSql, map[string]*bintree{}},
	"9_remove_reports_cascade.down.sql": &bintree{_9_remove_reports_cascadeDownSql, map[string]*bintree{}},
	"bindata.go": &bintree{bindataGo, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

