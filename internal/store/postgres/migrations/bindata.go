// Code generated by go-bindata.
// sources:
// 0_create_users_table.up.sql
// 0_drop_users_table.down.sql
// 10_add_reports_delete_cascade.up.sql
// 10_remove_reports_delete_cascade.down.sql
// 11_add_lat_long.up.sql
// 11_drop_lat_long.down.sql
// 12_add_end_date_rename_start_date.up.sql
// 12_drop_end_date_rename_start_date.down.sql
// 13_add_notes_field.up.sql
// 13_remove_notes_field.down.sql
// 14_add_youtube_url_table.up.sql
// 14_remove_youtube_url.down.sql
// 15_add_is_blue_reports.down.sql
// 15_remove_is_blue_reports.up.sql
// 16_create_picklist_tables.up.sql
// 16_drop_picklist_tables.down.sql
// 17_add_is_verified.up.sql
// 17_remove_is_verified.down.sql
// 1_create_events_table.up.sql
// 1_drop_events_table.down.sql
// 2_create_matches_table.up.sql
// 2_drop_matches_table.down.sql
// 3_create_alliances_table.up.sql
// 3_drop_alliances_table.down.sql
// 4_create_reports_table.up.sql
// 4_drop_reports_table.down.sql
// 5_add_event_type.up.sql
// 5_remove_event_type.down.sql
// 6_add_bluewon.down.sql
// 6_remove_bluewon.up.sql
// 7_add_photos_table.up.sql
// 7_remove_photos_table.down.sql
// 8_add_isdmin.up.sql
// 8_remove_isadmin.down.sql
// 9_add_reports_cascade.up.sql
// 9_remove_reports_cascade.down.sql
// bindata.go
// DO NOT EDIT!

package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __0_create_users_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\xf0\xf3\x0f\x51\x70\x8d\xf0\x0c\x0e\x09\x56\x28\x2d\x4e\x2d\x2a\x56\xd0\xe0\xe2\x04\x31\xf2\x12\x73\x53\x15\x42\x5c\x23\x42\xc0\x2a\xfc\x42\x7d\x7c\x14\x42\xfd\x3c\x03\x43\x5d\x75\xb8\x38\x33\x12\x8b\x33\x52\x53\x02\x12\x8b\x8b\xcb\xf3\x8b\x52\x50\x55\x71\x69\x02\x02\x00\x00\xff\xff\xe1\x96\xd7\xd2\x62\x00\x00\x00")

func _0_create_users_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__0_create_users_tableUpSql,
		"0_create_users_table.up.sql",
	)
}

func _0_create_users_tableUpSql() (*asset, error) {
	bytes, err := _0_create_users_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0_create_users_table.up.sql", size: 98, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __0_drop_users_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\xb6\x06\x04\x00\x00\xff\xff\xbd\x6d\xc5\x8d\x11\x00\x00\x00")

func _0_drop_users_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__0_drop_users_tableDownSql,
		"0_drop_users_table.down.sql",
	)
}

func _0_drop_users_tableDownSql() (*asset, error) {
	bytes, err := _0_drop_users_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0_drop_users_table.down.sql", size: 17, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __10_add_reports_delete_cascadeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcb\xbd\xaa\x02\x31\x14\xc4\xf1\xfe\x3e\xc5\x94\xbb\xcf\x70\xab\x63\xce\xac\x2c\x86\x64\x39\x89\x85\xd5\x62\x11\x1b\xf1\x83\x44\x0b\xdf\x5e\x16\x59\x6c\x6c\x66\xe0\x07\x7f\xf1\x99\x86\x2c\x1b\x4f\xd4\x72\xbf\xd5\x47\x83\x5a\x9c\xe0\x62\x48\xd9\x64\x0c\x79\xf5\xf9\xf3\xa5\xce\xa7\x73\x79\xfd\xff\xfd\x4a\x45\x15\x43\x34\x8e\xdb\x80\x1d\x0f\xdd\x9a\xf4\x30\x0e\x34\x06\xc7\x84\x67\x2b\xb5\x75\xcb\x5e\x8f\x97\xd2\x23\x06\xec\x27\x95\x4c\x38\x49\x4e\x94\x8b\x28\x3d\xbf\xf2\x0e\x00\x00\xff\xff\xcf\x01\x46\xde\xa7\x00\x00\x00")

func _10_add_reports_delete_cascadeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__10_add_reports_delete_cascadeUpSql,
		"10_add_reports_delete_cascade.up.sql",
	)
}

func _10_add_reports_delete_cascadeUpSql() (*asset, error) {
	bytes, err := _10_add_reports_delete_cascadeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "10_add_reports_delete_cascade.up.sql", size: 167, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __10_remove_reports_delete_cascadeDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x81\x89\xc7\x43\xe8\xd4\xa2\xf8\xb4\xec\xd4\x4a\x6b\x2e\x6c\x5a\x1d\x5d\x5c\x14\xdc\xfc\x83\x5c\x3d\xdd\xfd\x14\xbc\x5d\x23\x35\x60\x5a\x34\x15\x82\x5c\xdd\x5c\x83\x5c\xfd\x9c\x5d\x83\x15\x4a\x8b\x53\x8b\x8a\x35\x40\x64\x5e\x62\x6e\xaa\xa6\x82\xbf\x9f\x42\x68\x80\x8b\x63\x88\xab\x82\xb3\x63\xb0\xb3\xa3\x8b\x2b\x20\x00\x00\xff\xff\xd6\xa5\x2c\xc4\x95\x00\x00\x00")

func _10_remove_reports_delete_cascadeDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__10_remove_reports_delete_cascadeDownSql,
		"10_remove_reports_delete_cascade.down.sql",
	)
}

func _10_remove_reports_delete_cascadeDownSql() (*asset, error) {
	bytes, err := _10_remove_reports_delete_cascadeDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "10_remove_reports_delete_cascade.down.sql", size: 149, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __11_add_lat_longUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x49\x2c\x51\x28\x4a\x4d\xcc\xb1\xe6\x22\xa0\x2e\x3f\x2f\x1d\xaa\x10\x10\x00\x00\xff\xff\x85\xb1\x54\x59\x51\x00\x00\x00")

func _11_add_lat_longUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__11_add_lat_longUpSql,
		"11_add_lat_long.up.sql",
	)
}

func _11_add_lat_longUpSql() (*asset, error) {
	bytes, err := _11_add_lat_longUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "11_add_lat_long.up.sql", size: 81, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __11_drop_lat_longDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x49\x2c\xb1\xe6\x22\xa4\x26\x3f\x2f\xdd\x9a\x0b\x10\x00\x00\xff\xff\x97\xf4\x31\x93\x49\x00\x00\x00")

func _11_drop_lat_longDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__11_drop_lat_longDownSql,
		"11_drop_lat_long.down.sql",
	)
}

func _11_drop_lat_longDownSql() (*asset, error) {
	bytes, err := _11_drop_lat_longDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "11_drop_lat_long.down.sql", size: 73, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __12_add_end_date_rename_start_dateUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xcd\x4b\x71\x49\x2c\x49\x55\x08\xf1\xf4\x75\x0d\x0e\x71\xf4\x0d\x08\x89\x52\xf0\xf3\x0f\x51\xf0\x0b\xf5\xf1\xb1\xe6\x02\x04\x00\x00\xff\xff\x34\x34\x21\xbd\x3c\x00\x00\x00")

func _12_add_end_date_rename_start_dateUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__12_add_end_date_rename_start_dateUpSql,
		"12_add_end_date_rename_start_date.up.sql",
	)
}

func _12_add_end_date_rename_start_dateUpSql() (*asset, error) {
	bytes, err := _12_add_end_date_rename_start_dateUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "12_add_end_date_rename_start_date.up.sql", size: 60, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __12_drop_end_date_rename_start_dateDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xcd\x4b\x71\x49\x2c\x49\xb5\xe6\x02\x04\x00\x00\xff\xff\x5f\x1d\xc8\xf2\x28\x00\x00\x00")

func _12_drop_end_date_rename_start_dateDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__12_drop_end_date_rename_start_dateDownSql,
		"12_drop_end_date_rename_start_date.down.sql",
	)
}

func _12_drop_end_date_rename_start_dateDownSql() (*asset, error) {
	bytes, err := _12_drop_end_date_rename_start_dateDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "12_drop_end_date_rename_start_date.down.sql", size: 40, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __13_add_notes_fieldUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\xcb\x2f\x49\x2d\x56\x08\x71\x8d\x08\x01\x04\x00\x00\xff\xff\xfe\xf0\xf7\xb7\x29\x00\x00\x00")

func _13_add_notes_fieldUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__13_add_notes_fieldUpSql,
		"13_add_notes_field.up.sql",
	)
}

func _13_add_notes_fieldUpSql() (*asset, error) {
	bytes, err := _13_add_notes_fieldUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "13_add_notes_field.up.sql", size: 41, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __13_remove_notes_fieldDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\xcb\x2f\x49\x2d\x06\x04\x00\x00\xff\xff\xd9\x75\x26\xc9\x25\x00\x00\x00")

func _13_remove_notes_fieldDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__13_remove_notes_fieldDownSql,
		"13_remove_notes_field.down.sql",
	)
}

func _13_remove_notes_fieldDownSql() (*asset, error) {
	bytes, err := _13_remove_notes_fieldDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "13_remove_notes_field.down.sql", size: 37, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __14_add_youtube_url_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\xa8\xcc\x2f\x2d\x29\x4d\x4a\x0d\x0d\xf2\x51\x08\x71\x8d\x08\x01\x04\x00\x00\xff\xff\x90\x0a\x4c\xbe\x2e\x00\x00\x00")

func _14_add_youtube_url_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__14_add_youtube_url_tableUpSql,
		"14_add_youtube_url_table.up.sql",
	)
}

func _14_add_youtube_url_tableUpSql() (*asset, error) {
	bytes, err := _14_add_youtube_url_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "14_add_youtube_url_table.up.sql", size: 46, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __14_remove_youtube_urlDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xa8\xcc\x2f\x2d\x29\x4d\x4a\x0d\x0d\xf2\x01\x04\x00\x00\xff\xff\x16\xd5\x03\x4c\x2a\x00\x00\x00")

func _14_remove_youtube_urlDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__14_remove_youtube_urlDownSql,
		"14_remove_youtube_url.down.sql",
	)
}

func _14_remove_youtube_urlDownSql() (*asset, error) {
	bytes, err := _14_remove_youtube_urlDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "14_remove_youtube_url.down.sql", size: 42, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __15_add_is_blue_reportsDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x09\x80\x30\x0c\x05\xd0\x55\xfe\x2a\xa9\x8d\xa7\x6f\x02\x92\x0e\xe0\xa1\x82\x50\x50\x1a\xdd\xdf\x27\x0c\xdd\x11\x52\xa8\x98\xfd\xb9\xe7\x9b\x90\x5a\xb1\x38\xdb\x66\xb8\xb2\x8c\xaf\xa3\xb8\x53\xc5\x60\x1e\xb0\x46\xa2\xea\x2a\x8d\x81\xf3\x18\xd9\xff\x00\x00\x00\xff\xff\x9b\x96\x86\xb6\x44\x00\x00\x00")

func _15_add_is_blue_reportsDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__15_add_is_blue_reportsDownSql,
		"15_add_is_blue_reports.down.sql",
	)
}

func _15_add_is_blue_reportsDownSql() (*asset, error) {
	bytes, err := _15_add_is_blue_reportsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "15_add_is_blue_reports.down.sql", size: 68, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __15_remove_is_blue_reportsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x2c\x76\xca\x29\x4d\xe5\x02\x04\x00\x00\xff\xff\xb0\xd4\x44\x2f\x27\x00\x00\x00")

func _15_remove_is_blue_reportsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__15_remove_is_blue_reportsUpSql,
		"15_remove_is_blue_reports.up.sql",
	)
}

func _15_remove_is_blue_reportsUpSql() (*asset, error) {
	bytes, err := _15_remove_is_blue_reportsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "15_remove_is_blue_reports.up.sql", size: 39, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __16_create_picklist_tablesUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x50\xc1\x4a\xc4\x30\x14\xbc\xf7\x2b\xe6\x98\x80\x47\x6f\x9e\xea\xfa\x2a\x61\x4b\x16\xd3\x04\xd6\xd3\x52\xec\x43\xc2\xba\x51\x9a\x74\x65\xff\x5e\x9a\xda\xb5\x45\xc1\x4b\xe0\xe5\xcd\xcc\x9b\x99\x8d\xa1\xd2\x12\x6c\x79\x5f\x13\x54\x05\xbd\xb3\xa0\xbd\x6a\x6c\x83\x0f\xff\x72\x7c\xf3\x31\x45\x88\x02\x00\x7c\x87\x61\xf0\x1d\x9c\x56\x4f\x8e\x32\x52\xbb\xba\xc6\x03\x55\xa5\xab\x6d\x5e\x1e\x5e\x39\x70\xdf\x26\x3e\x9c\x6f\x85\xbc\xc9\x3c\x3e\x73\x48\x5b\xbe\xc0\xd2\xde\x5e\x69\xd3\x2e\xb4\x27\xce\xff\xd3\xf8\xfe\x19\xb8\x5f\xcc\xd5\xce\x90\x7a\xd4\xd8\xd2\xb3\x98\x65\x24\x0c\x55\x64\x48\x6f\xa8\x99\xb4\xa3\x38\xf2\x45\xfe\x66\x64\xb5\x15\x7c\x88\xdc\x47\x31\xbe\xe3\x61\x59\xc8\xbb\xa2\xf8\xa7\x81\x39\xfd\xdc\x86\xfa\x6e\x61\x9d\x23\x71\x7b\xfa\x2b\xdf\xd2\xce\x8f\xc2\xca\xd3\xb5\x66\xe1\xbb\xd1\xd1\x57\x00\x00\x00\xff\xff\xf9\x16\x77\x18\x92\x01\x00\x00")

func _16_create_picklist_tablesUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__16_create_picklist_tablesUpSql,
		"16_create_picklist_tables.up.sql",
	)
}

func _16_create_picklist_tablesUpSql() (*asset, error) {
	bytes, err := _16_create_picklist_tablesUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "16_create_picklist_tables.up.sql", size: 402, mode: os.FileMode(436), modTime: time.Unix(1524945265, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __16_drop_picklist_tablesDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\xc8\x4c\xce\xce\xc9\x2c\x2e\x29\xb6\xe6\x42\x13\x2d\xb6\x06\x04\x00\x00\xff\xff\xe9\x8c\x2c\xf7\x27\x00\x00\x00")

func _16_drop_picklist_tablesDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__16_drop_picklist_tablesDownSql,
		"16_drop_picklist_tables.down.sql",
	)
}

func _16_drop_picklist_tablesDownSql() (*asset, error) {
	bytes, err := _16_drop_picklist_tablesDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "16_drop_picklist_tables.down.sql", size: 39, mode: os.FileMode(436), modTime: time.Unix(1523852486, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __17_add_is_verifiedUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xd1\x0d\x85\x30\x08\x05\xd0\x55\xee\x2a\xf4\x95\xf7\x75\x85\xc4\x50\x27\x10\x93\xfe\x16\xbb\xbf\x47\x18\x7a\x22\xa4\x51\xb1\x2b\x57\x41\x7a\xc7\xcf\x39\x0e\xc3\xac\x2b\xd7\x7c\x66\xde\x68\xee\x54\x31\x98\x07\x6c\x90\xe8\xfa\x97\xc1\xc0\xbb\x76\x7e\x01\x00\x00\xff\xff\x52\xa0\x83\xe2\x45\x00\x00\x00")

func _17_add_is_verifiedUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__17_add_is_verifiedUpSql,
		"17_add_is_verified.up.sql",
	)
}

func _17_add_is_verifiedUpSql() (*asset, error) {
	bytes, err := _17_add_is_verifiedUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "17_add_is_verified.up.sql", size: 69, mode: os.FileMode(436), modTime: time.Unix(1523852486, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __17_remove_is_verifiedDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x2c\x0e\x4b\x2d\xca\x4c\xcb\x4c\x4d\x01\x04\x00\x00\xff\xff\xb2\xbf\x88\x51\x28\x00\x00\x00")

func _17_remove_is_verifiedDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__17_remove_is_verifiedDownSql,
		"17_remove_is_verified.down.sql",
	)
}

func _17_remove_is_verifiedDownSql() (*asset, error) {
	bytes, err := _17_remove_is_verifiedDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "17_remove_is_verified.down.sql", size: 40, mode: os.FileMode(436), modTime: time.Unix(1523852486, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1_create_events_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8b\x4d\x0a\xc2\x30\x10\x85\xd7\x99\x53\xbc\xa5\x42\x2f\x11\x65\x84\x60\x12\x4b\xf2\x84\xd6\x5d\xc1\x01\x41\xac\x60\x83\xe0\xed\x45\x44\xb7\xdf\xcf\xb6\xa8\xa7\x82\x7e\x13\x15\x61\x87\x7c\x20\x74\x08\x95\x15\xf6\xb4\xb9\x2d\x58\x89\xbb\xda\x0b\xd4\x81\xe8\x4b\x48\xbe\x8c\xd8\xeb\xd8\x89\x9b\xa7\x9b\x7d\xf9\xe7\xca\xc7\x18\x3b\x71\xcb\xe5\xfe\x68\xf9\x67\x3a\x71\xe7\xa9\x19\x18\x92\x56\xfa\xd4\xf3\xf4\x8f\x65\xfd\x0e\x00\x00\xff\xff\x50\xda\x81\x7d\x7d\x00\x00\x00")

func _1_create_events_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_create_events_tableUpSql,
		"1_create_events_table.up.sql",
	)
}

func _1_create_events_tableUpSql() (*asset, error) {
	bytes, err := _1_create_events_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_create_events_table.up.sql", size: 125, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1_drop_events_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x06\x04\x00\x00\xff\xff\x27\xe5\x89\x64\x11\x00\x00\x00")

func _1_drop_events_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_drop_events_tableDownSql,
		"1_drop_events_table.down.sql",
	)
}

func _1_drop_events_tableDownSql() (*asset, error) {
	bytes, err := _1_drop_events_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_drop_events_table.down.sql", size: 17, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_create_matches_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x4d\x6a\xc3\x30\x10\x46\xd7\xd2\x29\x66\x69\x83\x2e\xa1\x84\x71\x10\x91\xa5\x20\x4d\x69\xd2\x9d\x2b\x0f\x34\xf8\xaf\xd8\x72\xc1\xb7\x2f\x2e\xf5\xa6\x74\xfb\xde\xf7\xc1\x3b\x07\xd4\x84\x40\xfa\x64\x11\x4c\x05\xce\x13\xe0\xdd\x44\x8a\x30\x34\x39\x7d\xf0\x02\x85\x14\x1d\x6f\x40\x78\x27\xb8\x05\x53\xeb\xf0\x80\x2b\x3e\x94\x14\xfc\xc5\x63\xbe\x1e\x6e\xbf\xba\x17\x6b\x95\x14\x9f\x33\xb7\xcf\x94\xb9\xa5\xe7\xc0\x40\xa6\xc6\x48\xba\xbe\xd1\x9b\x92\xa2\x49\x79\x6d\xfa\x7f\xc4\x7b\xbf\xf2\xeb\x34\xc2\xc9\x7b\x8b\xda\x29\x29\x66\x6e\x63\x9a\x66\x06\xe3\x08\x2f\x18\x7e\x47\x7f\x59\xe5\x03\x9a\x8b\xdb\xa3\x8a\x23\xa9\x84\x80\x15\x06\x74\x67\x8c\xf0\x03\x97\xa2\xe3\xad\x94\xe5\x77\x00\x00\x00\xff\xff\x95\xc6\xa5\x34\xf2\x00\x00\x00")

func _2_create_matches_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_create_matches_tableUpSql,
		"2_create_matches_table.up.sql",
	)
}

func _2_create_matches_tableUpSql() (*asset, error) {
	bytes, err := _2_create_matches_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_create_matches_table.up.sql", size: 242, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_drop_matches_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x06\x04\x00\x00\xff\xff\xed\x06\x12\x35\x12\x00\x00\x00")

func _2_drop_matches_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_drop_matches_tableDownSql,
		"2_drop_matches_table.down.sql",
	)
}

func _2_drop_matches_tableDownSql() (*asset, error) {
	bytes, err := _2_drop_matches_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_drop_matches_table.down.sql", size: 18, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_create_alliances_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8c\x41\x0a\x83\x30\x14\x44\xd7\xe6\x14\xb3\x34\xe0\x25\x54\xc6\x12\x0c\x09\x8d\x11\xec\xd2\xca\x87\x4a\xd5\x45\xad\x0b\x6f\x5f\xb0\xb4\x14\xba\x9d\x79\xef\x95\x81\x79\x24\x62\x5e\x58\xc2\x54\x70\x3e\x82\x9d\x69\x62\x83\x7e\x9a\xc6\x7e\x19\x64\x45\xaa\x92\xb9\x7f\x0e\xb7\x5a\x76\x44\x76\xf1\xa0\x5c\x6b\x6d\xa6\x92\x71\x2d\xa6\x4d\x50\x78\x6f\x99\xbb\xdf\x67\xd9\xe6\xab\x3c\xfe\x84\xca\x07\x9a\x93\x43\xcd\x4b\xfa\xa9\x6a\x04\x56\x0c\x74\x25\x1b\x1c\xa3\xac\xe9\x5d\x76\x9d\xa9\xa4\x75\xe6\xdc\xf2\x8b\x66\x78\x77\xb5\xd2\xaf\x00\x00\x00\xff\xff\x80\x51\xbd\xfc\xbc\x00\x00\x00")

func _3_create_alliances_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_create_alliances_tableUpSql,
		"3_create_alliances_table.up.sql",
	)
}

func _3_create_alliances_tableUpSql() (*asset, error) {
	bytes, err := _3_create_alliances_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_create_alliances_table.up.sql", size: 188, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_drop_alliances_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\xcc\xc9\xc9\x4c\xcc\x4b\x4e\x2d\x06\x04\x00\x00\xff\xff\x17\xe1\x40\xdc\x14\x00\x00\x00")

func _3_drop_alliances_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_drop_alliances_tableDownSql,
		"3_drop_alliances_table.down.sql",
	)
}

func _3_drop_alliances_tableDownSql() (*asset, error) {
	bytes, err := _3_drop_alliances_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_drop_alliances_table.down.sql", size: 20, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_create_reports_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xc1\x6a\x86\x30\x10\x84\xcf\xe6\x29\xf6\x98\x40\x5e\x42\x7f\xd6\x12\x0c\x09\x8d\x11\xec\x31\x94\x85\x96\x56\x5b\x92\x58\xf0\xed\x8b\x4a\x40\x6b\x2f\x21\xcc\x7c\x3b\x33\x0f\x87\xb5\x47\xf0\x75\xa3\x11\x54\x0b\xc6\x7a\xc0\x51\xf5\xbe\x87\x48\xdf\x5f\x31\x27\xe0\xac\x3a\xbe\x14\xc1\xe3\xe8\x77\xc6\x0c\x5a\x4b\x56\xd1\x0f\xcd\xb9\xa3\xf5\x66\x4c\x21\xbf\xbe\xfd\x67\xbc\xa7\xe6\x73\x21\x68\xac\xd5\x58\x9b\xb3\x93\x29\x4c\x37\x3c\xe5\x90\xd3\x4d\x1d\x8c\x7a\x1e\x90\x97\x76\x09\xa5\x4e\xc2\x96\x22\x24\x03\x68\xad\x43\xf5\x64\xa0\xc3\x17\x5e\xf6\x0b\x70\xd8\xa2\x43\xf3\xc0\x1e\x96\x44\x31\xf1\xed\x9d\xc3\x44\x42\xb2\xea\x7c\x52\xb2\x2f\x27\xbb\x98\xf8\x07\xad\x7f\xf1\x32\xe0\x82\xef\x22\x1d\x3c\x13\xbf\x01\x00\x00\xff\xff\xf1\xac\xe6\x8d\x6b\x01\x00\x00")

func _4_create_reports_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_create_reports_tableUpSql,
		"4_create_reports_table.up.sql",
	)
}

func _4_create_reports_tableUpSql() (*asset, error) {
	bytes, err := _4_create_reports_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_create_reports_table.up.sql", size: 363, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_drop_reports_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\xb6\x06\x04\x00\x00\xff\xff\x55\x5c\x72\x90\x13\x00\x00\x00")

func _4_drop_reports_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_drop_reports_tableDownSql,
		"4_drop_reports_table.down.sql",
	)
}

func _4_drop_reports_tableDownSql() (*asset, error) {
	bytes, err := _4_drop_reports_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_drop_reports_table.down.sql", size: 19, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_add_event_typeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x83\x88\x84\x54\x16\xa4\x2a\x78\xfa\x85\xb8\xba\xbb\x06\x29\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\x00\x02\x00\x00\xff\xff\x47\xcd\xa1\xbe\x38\x00\x00\x00")

func _5_add_event_typeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_add_event_typeUpSql,
		"5_add_event_type.up.sql",
	)
}

func _5_add_event_typeUpSql() (*asset, error) {
	bytes, err := _5_add_event_typeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_add_event_type.up.sql", size: 56, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_remove_event_typeDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x83\x08\x85\x54\x16\xa4\x02\x02\x00\x00\xff\xff\xfa\x1d\x58\x8e\x28\x00\x00\x00")

func _5_remove_event_typeDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_remove_event_typeDownSql,
		"5_remove_event_type.down.sql",
	)
}

func _5_remove_event_typeDownSql() (*asset, error) {
	bytes, err := _5_remove_event_typeDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_remove_event_type.down.sql", size: 40, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __6_add_bluewonDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xca\x29\x4d\x0d\xcf\xcf\x53\x70\xf2\xf7\xf7\x71\x75\xf4\x03\x04\x00\x00\xff\xff\x08\x2a\x0a\x8b\x2e\x00\x00\x00")

func _6_add_bluewonDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__6_add_bluewonDownSql,
		"6_add_bluewon.down.sql",
	)
}

func _6_add_bluewonDownSql() (*asset, error) {
	bytes, err := _6_add_bluewonDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "6_add_bluewon.down.sql", size: 46, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __6_remove_bluewonUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xca\x29\x4d\x0d\xcf\xcf\x03\x04\x00\x00\xff\xff\xc2\xb9\xb0\x4c\x27\x00\x00\x00")

func _6_remove_bluewonUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__6_remove_bluewonUpSql,
		"6_remove_bluewon.up.sql",
	)
}

func _6_remove_bluewonUpSql() (*asset, error) {
	bytes, err := _6_remove_bluewonUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "6_remove_bluewon.up.sql", size: 39, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __7_add_photos_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\xf0\xf3\x0f\x51\x70\x8d\xf0\x0c\x0e\x09\x56\x28\xc8\xc8\x2f\xc9\x2f\x56\xd0\xe0\xe2\x2c\x49\x4d\xcc\x55\x08\x71\x8d\x08\x01\x4b\xfb\x85\xfa\xf8\xe8\x70\x71\x96\x16\xe5\xa0\x8b\x29\x28\x28\x28\x84\xfa\x79\x06\x86\xba\x6a\x80\xb4\xe8\x28\x94\x16\xe5\x68\x72\x69\x02\x02\x00\x00\xff\xff\x7a\x9d\xf7\x09\x64\x00\x00\x00")

func _7_add_photos_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__7_add_photos_tableUpSql,
		"7_add_photos_table.up.sql",
	)
}

func _7_add_photos_tableUpSql() (*asset, error) {
	bytes, err := _7_add_photos_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "7_add_photos_table.up.sql", size: 100, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __7_remove_photos_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\xc8\xc8\x2f\xc9\x2f\x06\x04\x00\x00\xff\xff\xb4\x52\x78\x3f\x11\x00\x00\x00")

func _7_remove_photos_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__7_remove_photos_tableDownSql,
		"7_remove_photos_table.down.sql",
	)
}

func _7_remove_photos_tableDownSql() (*asset, error) {
	bytes, err := _7_remove_photos_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "7_remove_photos_table.down.sql", size: 17, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __8_add_isdminUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xd1\x09\x85\x30\x0c\x05\xd0\x55\xee\x2a\xe9\x6b\xde\xd7\x35\x01\x49\x06\x10\xac\x50\x50\x3f\x0c\xee\xef\x11\x86\xae\x08\x69\x54\xbc\x35\x9e\x82\xf4\x8e\x9f\x33\x17\xc3\x2c\xd9\xaf\x79\xa3\xb9\x53\xc5\x60\x1e\xb0\x24\xd1\xf5\x2f\xc9\xc0\xb1\x9d\x35\xbe\x00\x00\x00\xff\xff\xe7\x70\xa1\xca\x43\x00\x00\x00")

func _8_add_isdminUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__8_add_isdminUpSql,
		"8_add_isdmin.up.sql",
	)
}

func _8_add_isdminUpSql() (*asset, error) {
	bytes, err := _8_add_isdminUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "8_add_isdmin.up.sql", size: 67, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __8_remove_isadminDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x2c\x76\x4c\xc9\xcd\xcc\x03\x04\x00\x00\xff\xff\x54\xf1\x61\xd5\x25\x00\x00\x00")

func _8_remove_isadminDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__8_remove_isadminDownSql,
		"8_remove_isadmin.down.sql",
	)
}

func _8_remove_isadminDownSql() (*asset, error) {
	bytes, err := _8_remove_isadminDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "8_remove_isadmin.down.sql", size: 37, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __9_add_reports_cascadeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x81\x89\xc7\x43\xe8\xd4\xa2\xf8\xb4\xec\xd4\x4a\x6b\x2e\x6c\x5a\x1d\x5d\x5c\x14\xdc\xfc\x83\x5c\x3d\xdd\xfd\x14\xbc\x5d\x23\x35\x60\x5a\x34\x15\x82\x5c\xdd\x5c\x83\x5c\xfd\x9c\x5d\x83\x15\x4a\x8b\x53\x8b\x8a\x35\x40\x64\x5e\x62\x6e\xaa\xa6\x82\xbf\x9f\x42\x68\x80\x8b\x63\x88\xab\x82\xb3\x63\xb0\xb3\xa3\x8b\x2b\x20\x00\x00\xff\xff\xd6\xa5\x2c\xc4\x95\x00\x00\x00")

func _9_add_reports_cascadeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__9_add_reports_cascadeUpSql,
		"9_add_reports_cascade.up.sql",
	)
}

func _9_add_reports_cascadeUpSql() (*asset, error) {
	bytes, err := _9_add_reports_cascadeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "9_add_reports_cascade.up.sql", size: 149, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __9_remove_reports_cascadeDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x81\x89\xc7\x43\xe8\xd4\xa2\xf8\xb4\xec\xd4\x4a\x6b\x2e\x6c\x5a\x1d\x5d\x5c\x14\xdc\xfc\x83\x5c\x3d\xdd\xfd\x14\xbc\x5d\x23\x35\x60\x5a\x34\x15\x82\x5c\xdd\x5c\x83\x5c\xfd\x9c\x5d\x83\x15\x4a\x8b\x53\x8b\x8a\x35\x40\x64\x5e\x62\x6e\xaa\x26\x20\x00\x00\xff\xff\x47\x73\x6b\x93\x83\x00\x00\x00")

func _9_remove_reports_cascadeDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__9_remove_reports_cascadeDownSql,
		"9_remove_reports_cascade.down.sql",
	)
}

func _9_remove_reports_cascadeDownSql() (*asset, error) {
	bytes, err := _9_remove_reports_cascadeDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "9_remove_reports_cascade.down.sql", size: 131, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bindataGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5d\x5b\x6f\x1b\x39\x96\x7e\xb6\x7e\x45\x4d\x80\x19\xd8\x8b\xac\x53\xf7\x4b\x80\x7e\x99\xee\x5e\xa0\x1f\xb6\x07\xd8\xe9\x79\x5a\x2e\x0c\x16\x8b\x95\x16\x46\x96\xdc\x92\xdc\xcd\xa4\x91\xff\xbe\xf8\x78\x0e\x6d\x5d\x8a\x54\xb9\x22\x58\xc9\x83\x12\x4b\x55\x3c\xe4\x61\x9d\xef\xdc\x78\xc8\x7a\xf7\x2e\xfa\x7e\xd5\xe9\xe8\x83\x5e\xea\xb5\xdc\xea\x2e\x6a\x3f\x46\x1f\x56\xff\xd9\xce\x97\x9d\xdc\xca\xdb\xd9\xbb\x77\xd1\x66\xf5\xb8\x56\x7a\xf3\x1e\x7f\xc7\x77\x6a\xad\xe5\x56\xdf\x3d\x6e\xf4\x7a\x73\xb7\x95\xed\x42\xdf\x3e\x3e\xdc\x6e\x7e\x5b\xd0\xe5\x6e\xbd\x7a\xd8\xbb\xd8\xad\xfe\x58\xba\xcb\x49\x7c\x27\xbb\xee\x6e\xad\x1f\x56\xeb\xed\xe6\xae\xd3\x0b\xbd\xd5\x77\x4a\x6e\x94\xec\x76\xc9\x24\xf1\xdd\x5a\xdf\xaf\x7e\xd7\xbe\x5b\xf7\x88\x26\x96\xe8\x42\x6e\xef\x16\xab\xe5\x87\x5d\x32\x09\x0d\xe7\xe9\xd2\x5e\xb3\xd4\x36\xd3\xcb\xee\xae\x03\x43\x6b\xbd\x94\xf7\xfa\x6e\xb3\x95\xeb\xad\xfd\x65\x97\x50\x4a\x84\x02\x37\xef\x91\xce\x2c\xe9\xe5\x6a\xab\x37\x77\xfd\x5c\x2f\xba\x5d\x5a\x99\xe3\x6d\xf7\xfa\x5e\xf3\xdc\x36\xff\xb8\x7a\xdc\x3e\xb6\xfa\xee\x71\xbd\x38\x9a\xe7\x24\x77\x44\x76\xee\xda\x27\x52\x58\x22\xf3\xcd\x5d\xbb\x78\x7c\x9a\xc7\xc3\x5b\x98\xc8\xe1\x5d\x3b\x1d\x95\xee\x81\x3f\xcc\xd5\xbf\x17\xf3\xcd\x96\xc6\x72\x70\x8f\x9d\x9d\xc3\x3b\xf6\xfa\xaa\xdc\x70\x7e\xd7\xeb\x79\x3f\xd7\x7b\x53\x52\xed\x0c\xe4\xe9\xfa\x5e\x73\x37\x0a\xfd\xbb\x5e\x6e\x8f\xe5\x8e\x1f\xf4\xde\xd5\xdd\xf6\xa9\x6b\x7f\x2f\xb7\xea\x57\x7d\x4c\x80\x1f\xf0\xfe\xe5\x5d\x0a\x99\xa3\x20\x17\x8b\xb9\x5c\xaa\x01\x1a\x19\xd1\x38\xbc\x61\x97\x4a\xee\xa8\x38\xb9\x3e\xa4\x91\x13\x8d\xfd\xcb\xbb\x14\xe8\xb1\x5a\x46\xef\xb6\x1f\x1f\x76\xdb\x3e\x3d\xce\x9d\xab\xbb\x4d\x4b\xdb\x14\x0f\xfa\x8f\xd5\xf2\xe0\x0a\xb7\x74\x17\x9f\x89\xd2\x73\x7b\xf8\x75\xb5\x5d\x1d\x8f\xf6\xe9\xb9\xed\x5d\xdf\xa5\x5c\xf3\x63\xef\xee\xe7\xbb\x54\xeb\xe7\x07\x2e\xed\xa5\xdd\x36\xcd\x9e\x92\x38\xd6\x0e\xcd\xa1\x72\x18\xd2\x0a\x4e\x81\x7d\x58\xe1\xdb\x0f\xff\x88\x7e\xfe\xc7\x2f\xd1\x8f\x3f\xfc\xf4\xcb\x5f\x66\xb3\x07\xa9\xfe\x2d\x3f\xe8\xe8\x7e\xfe\x61\x2d\xb7\xf3\xd5\x72\x33\x9b\xcd\xef\x41\x2b\xba\x9e\x5d\xbd\x69\x3f\x6e\xf5\xe6\xcd\xec\xea\x8d\x5a\xdd\x3f\xac\xf5\x66\xf3\xee\xc3\xa7\xf9\x03\x7e\xe8\xef\xb7\xf8\x6f\xbe\xa2\x7f\xdf\xcd\x57\x8f\xdb\xf9\x02\x5f\x56\xb6\xc1\x83\xdc\xfe\xfa\xae\x9f\x2f\x34\xfe\xc0\x0f\x9b\xed\x7a\xbe\xfc\x60\xaf\x6d\xe7\xf7\xfa\xcd\xec\x66\x36\xeb\x1f\x97\xca\x0d\xef\x7f\xb4\xec\xae\xf1\x47\xf4\xbf\xff\x87\x6e\xdf\x46\xd0\x2b\x11\x35\xbb\x89\xae\xdd\xaf\x7a\xbd\x5e\xad\x6f\xa2\x3f\x67\x57\x1f\x3e\xd9\x6f\xd1\xfb\xef\x22\x8c\xea\xf6\x67\xfd\x07\x88\xe8\xf5\xb5\x1d\x36\xbe\xff\xfd\xb1\xef\xf5\xda\x92\xbd\xb9\x99\x5d\xcd\x7b\xdb\xe0\x2f\xdf\x45\xcb\xf9\x02\x24\xae\xd6\x7a\xfb\xb8\x5e\xe2\xeb\xdb\xa8\xbf\xdf\xde\xfe\x08\xea\xfd\xf5\x1b\x10\x8a\xfe\xfa\xdb\xfb\xe8\xaf\xbf\xbf\xa1\x91\xd8\xbe\x6e\x66\x57\x9f\x67\xb3\xab\xdf\xe5\x3a\x6a\x1f\xfb\x88\xfa\xa1\x4e\x66\x57\x77\x34\x9c\xef\xa2\xf9\xea\xf6\xfb\xd5\xc3\xc7\xeb\xbf\xb5\x8f\xfd\xdb\xe8\xc3\xa7\x9b\xd9\x95\x5a\xfc\xe8\x46\x7a\xfb\xfd\x62\xb5\xd1\xd7\x37\xb3\x73\x8d\x07\x64\x88\xbe\x87\x90\x5e\xaf\x69\xdc\xfc\x63\xfb\xd8\xdf\xfe\x1d\x43\xbf\xbe\x79\x8b\x3b\x66\x9f\x67\x33\x40\x24\x92\x9b\x8d\xde\x62\xca\x1f\xd5\x16\x54\x2c\x7f\xfc\x3c\x66\x57\xf3\x65\xbf\x8a\xa2\xd5\xe6\xf6\xbf\xe6\x0b\xfd\xd3\xb2\x5f\x3d\xb5\xe3\x47\xe8\x7e\xdf\xa1\x60\x9f\x61\x14\xf1\x63\x9c\x5d\x6d\xe6\x9f\xec\xf7\xf9\x72\x5b\xe6\xb3\xab\x7b\x18\xdc\xe8\x89\xe8\x7f\xaf\x3a\x6d\x7f\xfc\x65\x7e\xaf\x23\x88\xc9\x2d\xfe\x42\x3f\x56\x54\xae\xfb\xf9\x61\x5f\x37\xd1\xcf\xf2\x5e\x5f\xdf\x70\x0f\xe8\x93\xb9\xec\xe7\xb7\xe8\x7d\xf6\x39\xd0\xf6\x9f\xf3\x4f\x68\x6b\x47\xb3\xdf\x14\x03\x0d\x36\xc5\x58\xaf\x6f\x76\x47\xbe\x4f\x00\xac\x9d\x22\x00\xe6\xae\x6f\x9e\x19\x3d\xa2\xc0\xdc\xfb\x89\xfc\xb4\xf9\x61\xbe\xbe\xbe\x89\xda\xd5\x6a\xb1\xdb\x5a\x2e\x36\x27\x38\xff\xb8\x21\xc6\xf5\xba\x97\x4a\xff\xf9\x79\xa7\x35\x8b\x04\xa4\xfc\xee\x6e\xc8\xcd\xf9\xd7\xc3\x3f\x7f\x5b\x44\xdf\xb1\x64\x5c\xbf\x11\x26\xe9\x85\xa9\x5b\x61\xe2\x5a\x98\x38\x1e\xfe\xf4\xbd\x30\x55\x2a\x4c\xac\xe9\xff\xaa\x10\x26\x56\xc2\x54\x89\x30\x45\x41\x6d\xf1\x77\x95\x0b\xd3\xa7\xcf\xbf\xf7\x31\xfd\x56\x64\xf4\x77\x9f\x09\x13\xf7\xc2\x14\xb8\x37\x16\xa6\xee\xe8\x77\xd0\x02\xed\xb8\x11\xa6\x28\x85\x49\x6b\x61\xd2\x4e\x98\x5c\xd3\xff\xa9\xa4\xdf\xbb\x58\x18\x8d\x0f\xc6\x92\x0b\x93\x25\xd4\x5f\x82\x3e\x33\xea\x27\x29\x84\xc9\x53\x61\x0a\x25\x4c\x9a\xd1\xdf\x2a\x26\x1a\xbd\xa2\xef\x55\x27\x4c\xa5\x84\x49\x72\xfa\xde\x77\xc2\x64\x18\x03\xee\x07\x9d\x8e\x78\x6c\x6b\x61\x32\x7c\x32\xea\x03\xf3\x84\xbf\x8b\x94\xfa\x8a\xd3\xe7\xdf\xf1\x51\x2d\xf1\x88\xbf\xed\x3d\x31\xcd\x03\xe6\xa3\x6c\xe8\x7e\xfb\xd9\x99\x57\x7c\x74\x22\x4c\x03\xfe\x2a\x61\xba\x54\x98\x32\xdd\x9d\xff\x37\x4e\xdf\xfa\x9f\x28\xeb\x84\x21\x5d\xeb\x34\xc7\x8e\xae\x9e\x5d\x5d\x05\xa4\xe3\xed\xec\xea\xea\x4d\xc0\x45\x7e\xf3\x76\x76\x75\xf3\x04\x6c\x3f\x1d\x0c\xe7\x3f\xac\x5e\xda\x1d\x8e\x55\x4c\x4f\xda\xff\x24\x47\xa7\x34\xed\x93\x82\xb4\x2a\xee\xfd\x77\x87\x70\xf9\x13\x8a\xe4\x7d\x14\xe6\x27\x82\xca\x78\x1f\x35\xf5\xdb\x08\xd8\x7f\xbf\xab\x1a\xae\xf3\xac\xbc\xb1\xbf\x03\xd1\xef\x09\xf1\xff\x5a\xce\xcd\x75\x52\xa4\x49\xd1\x24\x59\x5e\xbe\x8d\xe2\x9b\xcf\xb3\x2b\x89\xfe\xff\x66\x39\xfe\xd3\xb2\xf9\x3e\x62\x6e\x31\xb8\xf7\xf6\xdf\xcf\x4f\x0f\x44\xbe\x3d\x44\xeb\x61\xd4\xf1\xc3\xea\x8f\xe5\x17\xa1\xb5\x21\x74\x58\xc4\xc5\x7e\x94\x0e\xa1\xad\x2d\x85\x89\x4b\x42\xd9\xa1\xb4\xb6\x9d\x30\x65\x27\x8c\x2a\x08\xc1\x49\xe2\x93\x56\x0f\x47\x93\xa4\xd5\x43\x8b\xa5\xd5\x1b\xb1\x1d\x49\xab\x87\xce\x48\x69\x0d\x73\x74\x3e\x69\x0d\xf0\xc3\xd2\x9a\x54\x97\x94\xd6\x60\x10\x3c\xdd\xc8\x94\x8a\x94\x28\x44\x4c\x4a\x52\x96\x50\xf2\x50\xd4\x0a\x62\x0b\x85\xaf\x85\xc9\x34\x89\x5f\x93\x0b\xd3\x42\xf1\xf6\x64\x50\x64\x2b\x4c\x99\x09\xa3\xb4\x30\x12\x06\x40\x09\x53\x97\xc2\x94\x30\x16\x8d\x30\x35\x3e\x85\x30\x5d\x41\x4a\x16\xa2\x9b\xb4\x44\xb7\x86\xf2\x87\xb8\xb7\xc2\x74\x80\x8c\x16\x26\x29\x85\x29\x1a\x1a\x97\xfd\x94\x64\x80\xe2\x4a\x98\xaa\xa7\x76\x4d\x43\x7d\xa0\x2f\xd0\xca\x7b\x61\xba\x9c\x20\xd8\xf6\xd4\x57\x5e\x11\xfd\x42\x0a\xd3\x28\xa2\x81\xfe\xf3\x5a\x98\xae\xa1\xf1\x59\x83\x0a\xc8\xc2\x70\x36\x64\x48\x64\xc1\xbc\x54\x64\xe0\xec\xf5\x8e\xa1\x08\xc8\x4a\x61\xf2\x82\x8d\x5e\x26\x4c\x96\x0b\x53\x6b\x61\x3a\x18\xa4\x58\x98\xa4\x23\xf8\x77\x9d\x30\x0d\x0c\x20\xe6\x21\x26\x63\x8b\x7b\x01\x71\x85\xb1\xe5\xc2\x94\x95\x30\x29\xe6\xbe\x20\xe3\x87\xe7\x80\x39\xa8\x7b\x61\x1a\x36\x4c\x30\xa8\x68\xa3\x31\xb7\x95\x30\x0d\xfa\x55\x64\x24\xf3\x86\x54\x08\x9e\x09\x9e\x35\xd4\x4a\xd6\xd1\x1c\xf4\xec\x3c\x1c\xaa\x12\x3c\xb7\x38\x11\x26\x87\xf1\x63\x3e\x87\x54\xc9\x69\x71\x9b\xa0\x53\x4e\x13\xb5\xca\x65\x4c\xbe\xe7\x40\xcb\x9c\xa6\x3c\x4a\xdd\x8c\xe6\xfa\x5c\x7a\x67\x1c\xab\x4e\x01\x95\x97\xd6\x40\xc1\xf4\xda\x97\x5a\x4f\x40\x05\x16\x14\x56\x32\xee\xc8\x9f\x0b\x59\x50\x40\x11\xd6\x53\xc1\x9a\xf6\x64\x45\x53\xf6\x67\xa1\x9a\x0e\xad\x31\x7e\xeb\x4b\x61\xfa\x8a\x54\x8e\xf3\x7f\x5d\xdf\x3d\xab\xa2\x3a\x21\xb5\x05\x98\x02\xe2\xba\x26\xf5\x22\x71\x5f\x2d\x4c\x9b\x13\x1c\xf1\x1b\xc6\x50\x02\x7a\x9a\xd4\x15\xd4\x0d\x54\x00\xfc\xd9\x82\xfd\xdd\x4e\x91\x1f\x6c\xd5\x91\x22\x88\x42\x3d\x40\x9d\xe0\x7a\xab\xe8\x7e\x40\x3d\x83\x9a\x8c\x89\x0e\xd4\x05\xd4\x4c\xcd\xbe\x75\xc7\x34\x1d\x1d\xb4\x6f\xb8\x6d\xed\xfc\x70\xc9\xbe\x30\xfb\xc4\xb5\x24\x9a\x79\x4c\x2a\x0f\xea\x05\x6a\xb0\xd4\xa4\xee\x65\x49\xf4\xa1\x32\x9a\x9e\x7c\xf3\xb2\x26\x55\x56\xb3\x6a\xaf\x6b\x52\xf3\xf6\xbe\x8c\x7e\x6b\x63\xfa\x5b\x72\x3f\x50\x63\x69\x7c\xac\x6e\xba\x92\x54\x2a\x54\x35\xcc\x09\xd4\x97\x47\xdd\x8c\x91\xad\x69\x3a\x67\x0c\x65\xa7\x78\xc6\x25\x90\x8f\xb5\xcf\x98\x3e\xc6\xaa\xa0\x17\xcc\xc4\x19\xf5\xd0\x58\xce\x9d\x32\xca\x9b\x8b\x2a\xa3\xfd\xf4\xfd\x97\x45\xd9\x2f\xd1\x3c\xb9\xf3\xdd\xe1\x04\x75\x2c\xf9\x3b\x5a\x07\xf7\xdb\x7b\x93\x03\x8d\xe3\x1c\x8d\x82\xd0\xa9\xd8\x80\x03\x19\xb8\xd7\x69\xb4\x1c\x1a\x4d\x09\xd3\x26\xc2\x68\x38\x39\xa9\x30\x32\x26\x0d\x93\xf5\xa4\xe9\x12\x76\xd6\x92\x98\x3e\x87\xa8\x83\xc3\x85\xf6\x45\x4e\xce\x54\xe1\x89\x17\x86\x26\x71\x0a\xc4\x06\xc8\x10\x9e\x06\xd7\x58\x0e\xc1\x33\xd0\x7a\x1c\x52\xfc\xa3\x3f\x1b\x2c\x3c\x0c\x30\x06\xea\xe4\xc2\x10\xd8\x5b\xa7\x7a\x4d\xfb\x7b\x0a\x05\x41\xdb\x1b\x40\xc2\x9e\xd4\xe7\xc2\xa4\xe5\xb3\xd4\x3b\x97\x1a\x36\x7a\x48\xea\xe1\x32\xf7\x9c\xa3\x6a\x32\xa2\xe9\x91\xfa\xa1\x79\x9b\x26\xf8\x43\x94\x9c\xec\x0f\xaf\x22\x1e\x8b\xff\x10\x8d\xb1\x08\x08\x70\x72\x46\x10\xf8\x38\x61\x1c\x54\xd9\x45\x71\x70\x6a\x49\xf6\xdb\x33\x0e\xa0\xa3\x98\x0e\xee\x77\xf0\xc0\xff\x2e\xfd\x6b\x23\xf3\x9c\x53\xc3\x1d\xa7\x8a\xf9\x37\xfb\xbd\x26\x37\x16\xe3\x3d\x4c\x05\xdb\x14\x70\xcb\x7d\x26\xcf\xb0\x8b\xd3\xe1\x04\x14\x5c\x51\x7c\xd2\x84\x32\x05\x36\x75\x3b\x04\xad\x51\x8f\x62\x0a\xd2\x46\x11\x26\xe0\x8d\x5c\xa1\x3f\xc4\xe1\xa8\x1e\xc6\xc1\xf2\x25\xb3\x70\x36\x94\x8e\x66\x9b\x41\x5b\xc6\x17\x06\xed\x89\xda\x88\x6f\xd5\x9c\x85\xb0\xdb\x16\x61\x9c\x15\xec\xdc\xc1\x24\xa2\xbf\xb4\xf6\xe2\x6c\xdc\xec\x4d\x83\xda\x38\xda\x0e\x6d\x63\x6b\x5c\x8e\x01\x37\xae\x9f\xb1\x98\x7b\xd1\x8c\x9c\x11\x76\xe3\xf9\x67\xe4\xe5\x97\x45\xde\x51\x99\xd1\xeb\xd9\xc7\x31\x69\x9b\x97\x04\x50\xaa\x25\x1a\x16\x63\x1d\xd1\x70\x7d\xd7\x6c\x03\xe3\x64\x18\x6b\xbd\x66\xbb\x58\x09\xd3\x56\x34\x86\x41\xac\x0d\xcf\xd7\x14\x64\x0d\x53\x22\x1c\xf9\x8a\xbf\x0e\x51\x33\x4c\x63\x1c\x46\x82\x9c\x9c\x0d\x11\x7e\x4e\x9c\xfc\x5f\x36\x6c\x1a\xaa\xa4\xfb\xa6\x72\x97\x23\x80\xe0\x5b\x49\xec\x1a\x72\x18\x11\x57\x29\xdc\xeb\xcb\xc7\x05\x26\x69\x9a\xe4\x7b\xc9\x39\xf1\x0f\x94\x37\x1e\x63\xc0\x4b\x6d\x2c\x10\x4e\x71\x77\x46\x34\x04\x19\x63\x48\x64\x97\xcd\xec\x7b\x4a\x47\x5f\xcf\x30\xd8\x1c\x40\xf7\xec\x28\x29\xfd\xec\x94\xbd\xd4\x30\xc8\x9a\x32\x68\x16\x57\x1d\xe1\x2a\xe7\xa5\x3b\x1b\x18\x75\xd4\xb7\xcd\x8a\x8d\x34\x16\x0d\xbe\x4b\x5a\x7a\x6b\x35\x65\xe3\x06\x71\x13\x9a\xc9\x29\xc0\x09\xd1\x23\xe4\x84\xcb\x7e\x0f\xa1\x13\xa2\x37\x0e\x3b\x23\x38\x3c\x1b\x78\x4e\xf1\xe6\x0c\x4a\x79\x61\xf4\x1c\x57\x55\xbf\xa6\x41\x19\x03\x9e\x97\x18\x94\xb1\x00\xf2\x81\x25\x29\x69\x0d\xde\x16\x77\x29\x32\x6e\x1e\xb0\x78\x27\x6e\x1a\x56\xbc\xe4\x1c\x54\x02\xe5\xef\xc7\x48\xf1\x52\x1b\x0b\x94\x53\xdc\x9d\x11\x27\x41\xc6\x1c\x4c\xd2\x8b\xc2\x64\x70\x6b\xc1\x97\xe0\x04\xb2\xa7\x62\x61\x54\x42\x32\x5c\xc7\x5c\x6b\xa1\x84\x89\x0b\x2a\x5e\xb4\x45\x91\x9a\x64\x50\x36\xa4\xe8\x65\x25\x4c\xd9\x53\x14\xde\x70\x9d\x84\x8e\x85\x91\x09\x2f\xb6\xc6\xf4\x49\x24\x25\x9d\xbb\x9e\x6a\x2f\x62\x5e\x84\x4d\x12\xc2\x23\x70\xd2\xd4\xb4\x10\xdb\x36\xc2\xe8\x4a\x98\xa6\x25\x63\x51\x48\xca\xaa\x65\x35\xd5\x86\x94\x25\x15\x37\xb6\xa9\x30\xb5\x12\x46\xf6\xb4\x78\x8a\xdf\xac\x13\xc7\x0b\xbf\x89\xa6\xc5\xd5\xbc\xa4\x05\x67\x2d\x69\xec\x18\x77\x9d\x50\x16\x2f\xe1\x1a\x16\x3b\x07\x43\x89\xf0\x96\x8a\x1b\xeb\x92\xca\xca\xf2\xdc\x83\xbf\xd0\x13\x99\x02\xc0\x10\x3d\x42\x60\x78\x7b\xc9\x21\x04\x43\xf4\xc6\x61\x70\x04\x87\x67\x03\xe1\x29\xde\x5c\xde\xed\xa2\x45\x8f\xde\xdd\x3b\x5f\x57\x12\xe0\xa5\xf1\x0f\x4c\x5f\x85\x98\x46\x3e\x9b\x2b\x5d\xf8\x13\x6d\x80\x98\xad\xdf\xc8\xb9\x7f\x5f\x19\x54\x70\xba\xa6\x61\x24\x40\xd0\x81\x24\xb8\xc1\xea\x18\x25\x01\x8a\x63\x61\x72\x9a\xcb\x33\xe2\xe4\x04\x7b\x2e\x26\xba\x6c\x81\x81\x6f\x0b\xdb\x74\xa0\xd4\x39\x09\x33\xec\x15\x00\xa0\xb8\x36\xd0\x15\x01\xf5\x5c\x0f\xa8\x4b\xb2\x2b\xb0\x67\x39\xdb\xaa\x46\x93\x2d\xe8\xd9\x1e\x94\x09\x65\x98\xad\xaf\x95\x91\x90\x77\xfc\x37\xc0\xa7\x15\x15\x2f\xa9\x54\x98\x56\x52\xb0\xd3\x48\x02\x63\x59\x70\xb6\x59\xd3\x6f\x9d\xa4\xcc\x74\x5e\xf0\xd8\x5a\x2e\xfa\x2f\x28\x93\x0d\x5f\xd0\xda\x14\x67\x3f\x13\xaa\x4d\x4c\x52\x2a\x7a\xaa\x1a\xce\x5c\x67\x54\x72\x00\xdb\xdb\x76\x5c\x20\x14\x73\xf9\xb2\xa4\x7b\x6b\x5e\x85\x72\x8a\xa3\x52\x64\xd3\xb2\x84\xfa\xaf\xeb\xe7\x82\x7d\x5c\xab\x2b\xe2\xb5\xe7\xda\x4a\x5b\xf0\x54\x52\xcd\x67\xad\x85\xc9\x52\xe2\xb7\x6d\x89\x4f\x55\x92\xdf\x09\x45\x23\x0b\xae\x4f\xed\xb8\xb6\x54\xd3\xff\x59\x43\x0a\xc5\xda\xf5\x92\x6a\x5b\x41\xb7\x74\xa5\x13\x8a\x92\x23\x99\xa2\x6b\x15\x67\xf5\x8b\x96\x82\x3f\xf8\x1c\xe0\xbf\x63\x7a\x65\x43\xf3\x8e\xa0\xb0\xcd\x49\x99\xc0\x07\xb7\x09\x97\x8c\x8a\xc6\xe0\x83\x24\x0d\xdb\xfb\x9e\xe6\xb4\xe3\x5a\x53\xf8\x0b\x95\x24\x85\xd4\xd5\x44\x1b\x73\x07\x19\xc0\xb3\x4a\xb9\x56\x15\x3c\x95\x39\x8d\x05\x63\xb5\xfe\x47\x43\x7d\xc2\x97\xc8\x78\xd5\x20\x67\x9f\xa7\xe4\x3a\xdc\x96\xeb\x55\xed\x7c\xd6\x54\x90\x06\xb9\xc2\x9c\x83\x1f\x9d\xd1\x1c\x17\x0d\x29\x53\xcc\xa5\x2b\x76\x83\xaf\x04\xbf\x23\xe3\x3a\xd8\x8e\xeb\x7b\x21\x87\xa5\xa6\x76\x0d\x17\xaf\x59\x65\xdf\xb2\x8c\x72\x4d\x2f\x78\x51\x5c\xd3\x0a\x59\x84\x82\xc6\x9c\x60\x4c\xb6\xb6\x37\xa1\xfe\xba\x84\x3e\x45\x35\xec\xd3\xf4\x0d\xc9\x7a\x55\x91\xff\xd3\xb8\xf8\xe3\x50\x61\x07\x61\x3b\x45\x61\x07\x09\x92\xc2\x3e\xb1\xdb\xf5\x50\x61\x07\x29\x8e\x53\xd8\x63\xb8\x3c\x9b\xc2\x3e\xc9\xde\xd3\xba\xc6\x8b\x03\x8c\xbc\xc9\x8b\xb4\x2c\xce\xa5\xb1\x87\x36\x14\xbf\xe6\xa6\x0e\x1b\x89\x2b\x92\x78\xfb\xe1\xb5\x3f\x68\x06\xb8\x25\xf0\xc6\xa1\xdd\xf3\x94\xb4\x25\x5c\xa0\xd0\xc6\x0f\xdd\x50\xb4\x90\x3a\xeb\xe0\x73\x53\x82\xac\x4f\x93\xfa\x00\x41\x27\xf5\xc1\xfd\xdb\xc7\x52\x1f\xa0\x38\x56\xea\x4f\x73\x79\x46\xa9\x3f\xc1\xde\x64\x37\x25\xab\x8b\x34\xaf\xcf\xe4\xa6\x1c\xed\x90\x9f\xee\x9f\xb8\x78\xba\x63\x27\x1e\xb6\x30\x63\x89\xdf\x8d\xa7\x35\xc7\xd3\x3d\x17\xf4\x42\x32\xab\x82\xee\x57\xec\xe3\x40\x52\x93\x98\x0a\xb1\x7a\xde\xd7\x61\x6d\x74\x4f\xb6\x07\x3a\x1c\x36\xcf\x15\x7a\x15\x5c\x85\x02\xbb\x01\x1b\x90\x27\x74\x5d\x55\xb4\x67\x01\xf6\x07\x71\xba\xca\x78\x9f\x49\x4b\x9b\xf7\x2a\xde\x23\x02\x5b\x5c\xd6\x34\xb6\xc2\x15\x81\xd5\xb4\x6f\x04\x7e\x07\x6c\xac\xae\xc9\x36\x35\x15\xf9\x39\xe0\x15\x63\x42\xe0\x50\xe9\x5d\x7b\xb2\xb3\x22\xcf\xe5\x97\xf0\x5b\x34\xdb\xd6\x41\x04\x0e\x3f\x87\x29\xd0\x1b\xa6\x44\x98\xf3\x9d\x87\x70\x08\xb6\x61\x1a\xe3\x50\x16\xe4\xe4\x6c\xf0\xf2\x73\xe2\xe2\xe4\x4b\xe3\xea\xf8\x70\x89\xd7\x5e\x25\x1c\xda\x91\x3b\x35\x3a\x06\x78\xe0\xd8\xdb\xa8\x9b\x57\x32\x54\x4b\xff\x23\x5a\xf6\x25\x73\x5b\xde\x1d\x00\xc7\xd1\xd5\x29\x7b\x00\xe0\x9d\xb0\x69\x28\xf0\x92\x73\x50\x08\x9c\xfe\x71\x8c\x07\x2f\xb5\xb1\xa0\x38\xc5\xdd\x19\x91\x11\x64\x6c\x72\x11\xc9\x59\xe1\x31\x74\xb2\xca\x74\xcb\x83\x48\x0b\xf7\x59\x41\x94\x14\x29\x64\x5c\xdc\x6e\x77\x0f\x56\x14\xe9\x40\xa0\x11\x9d\x49\xde\x72\x6e\x8b\xe1\x13\x8a\x92\xec\x8e\xba\x98\xa2\x52\x08\x3a\x00\x52\x73\x54\x5c\x74\x9c\x25\x4e\xc8\xb2\xc0\x82\x94\x4e\xab\xc3\x32\x74\xa4\xd9\xf3\x9c\x6a\x41\x3a\xde\x29\x07\xdf\x4c\xba\x28\x28\x25\x2b\x91\xf0\x56\x1b\x44\x3e\x35\x5b\xa0\x94\x97\x27\xc1\x67\xc3\xd1\x16\x00\x89\xc8\xac\x75\xb5\x29\x5c\x8f\x69\xa3\x1d\x2e\x63\x46\xc4\x87\xe8\x0a\x96\x09\x63\x46\x64\x87\x88\x0c\x3e\x1f\x22\x41\xdd\xd2\xff\x68\x87\x08\x5c\x72\x86\xb9\xea\x28\x22\xd2\x15\x81\x59\xb1\x45\xcd\xb8\xe6\x0c\xc0\xd6\x2e\x0a\xac\xe9\xde\x12\x11\x9f\xa4\xeb\x68\x27\x1b\x8a\x48\x5d\x34\x55\x70\x54\x87\x31\x21\x22\x87\xb2\x42\xd4\x66\xb3\x05\xdd\xf0\x6e\x42\x28\x1f\xf0\x02\x1e\xec\x16\xff\xce\xa3\x1c\xbc\xe2\x32\x45\x35\x78\x89\x91\x62\x08\x1c\xfa\x73\xa8\x16\xbc\x94\xc6\x29\x85\x53\x5c\x9d\x4d\x25\x04\x59\x72\x1b\x72\xd2\xe2\xa2\xf9\xb2\xe3\xb3\x94\x5e\x2b\xf2\xf2\x55\x6f\xfa\xa2\x2a\xf8\xa6\x40\x47\xcd\xfb\x80\x7d\xdb\xe9\xfd\x2c\x4d\x92\x5a\x1f\x31\x96\x5a\xff\x51\x54\x47\x52\xeb\xa3\x34\x52\x6a\x4f\x70\x75\x3e\xa9\x0d\xb1\xf4\x55\x6c\xaa\x1f\x3e\xe0\xeb\xcb\x76\xd3\xd7\x9a\xec\x58\x29\x29\x5a\x71\x76\x2c\xdf\x39\x6e\x04\xd2\x69\xb3\x73\x0d\xd9\xa0\x54\xf3\xea\x23\x97\xb8\xd8\xc8\x29\xe1\xad\x93\x31\xd3\x6b\xa8\x6d\xc3\x12\x1e\x73\x5d\xbe\xcd\xd2\xf5\x64\x27\x80\x1a\xd8\x39\x5b\xcf\xd8\x13\x5d\x38\x82\xb2\x64\xd4\xb4\x14\x29\xf5\x1c\x01\xc1\x5e\x20\x42\xb2\x76\x28\xa7\x6d\xa2\x36\xb3\xc7\xa8\xc8\x79\x25\x55\xb1\xdd\x83\xad\xec\x3a\xb2\x93\x76\x6b\x69\xcc\x7b\x03\x1a\xb6\x49\x31\x65\x6f\x61\xb3\x93\x9c\x32\xb6\x65\x4f\x74\xab\x9a\x90\xd7\x72\x34\x09\x5b\x0e\xfb\x86\x36\x75\x4c\x3c\x65\xbc\x9b\x1d\x6d\x7b\xc5\xab\xa2\x19\xd9\xc4\x44\x53\xc6\x11\xce\x68\x2b\x85\x49\x2a\xda\x7a\xdb\x70\x5f\x4d\x4f\x47\xc5\xb4\x1c\x31\x36\x6c\x7b\x31\x87\xd6\x4e\xc6\x34\x0e\xcc\x85\x2a\xd9\xd6\x4a\xa2\x8d\x88\xd7\x66\xb8\x53\xca\x7c\xe6\x0d\x65\xb5\xcb\x8e\xe6\xa3\xea\x29\xb2\xad\xda\xe7\xdd\xf5\x18\x3b\x78\xb7\x59\xcd\x86\xae\xd5\x6c\xdb\xf1\x7c\x9f\x9e\xb1\x26\x1e\x1a\x49\xdf\xed\x6e\xfe\x8c\x64\xc9\xfa\x2f\x35\xf9\x15\x39\x9f\x70\x50\x34\xbc\x74\xc5\x6d\x2c\xcd\x96\xb7\xda\x4a\xca\xb4\xda\x95\xec\x9c\x4f\x1c\x28\x88\x66\xc5\x27\x0a\xc0\x77\xb0\xcf\x21\xa3\x48\xd7\xae\x22\xa3\x4d\x47\x73\x02\xda\x95\x27\xcb\x8a\xb9\x54\xbc\x65\x37\x63\x2d\x3b\xa4\x19\x03\xb8\x99\xa0\x1a\x03\xd4\xac\x6e\x0c\x1e\xc3\x77\xa0\x1c\x03\xb4\x46\x69\xc7\xd3\x9c\x9d\x4b\x3d\x9e\xe0\x8a\xf5\x63\x7a\xd9\xa2\x8d\xa1\x03\x0e\x5f\xcb\xac\x87\xca\x9a\xbc\x09\x53\xbe\x86\x20\x20\x2b\xe8\xff\x61\x01\xf6\xf2\x35\x49\x80\xbd\xd4\x58\x80\x03\xc7\x44\x1e\x09\xb0\x97\xd6\x48\x01\x3e\xc5\xd9\xf9\x04\x38\xc8\x95\x33\xf0\x17\x2d\x77\xf0\x9d\xbf\xf9\x05\x26\x3e\x27\x15\x8b\x30\x12\xa1\x6a\x9d\x3d\x2f\xe2\xc2\x2c\xc2\xc4\xeb\x92\x17\x75\xf9\x80\x18\x98\xcd\xb4\xa0\xc4\xa4\x62\xe9\xb4\x45\x4a\xcd\xf3\x79\x4e\xf6\x44\x09\x5e\x20\x43\x58\x99\x4b\x3e\xc8\xa6\x20\xd5\x8d\x70\xb1\xe4\x2d\x42\xf6\xf4\x05\x36\x93\x30\x61\x70\x09\x60\xae\x34\xab\x70\x1b\x8e\x35\xb4\x70\x58\xa6\xb4\x48\x89\xf0\x13\xa6\x0a\x63\xa8\x62\x32\xb5\x35\xbb\x13\x70\x2d\x70\x1f\x78\xa9\x78\x51\x58\x71\x52\x34\x61\x27\xd9\x8e\x43\x92\x89\x84\x59\x85\xa9\x42\x48\x08\x73\x5b\x48\x4a\xa2\x82\x7f\xfc\xdf\x27\x94\x34\x2d\x14\x99\x68\x98\x51\x98\xdd\x86\xd1\x9d\xf2\x77\xa0\xbb\x60\xd7\xc0\x2e\x72\xbb\xf0\xb8\x27\x53\xd6\x35\x34\x97\xb2\xa5\x14\x01\xc2\x59\x98\x3d\xcc\x11\xdc\x16\x8c\xb3\xe1\x13\xe4\xdc\x96\xab\x9e\x0b\xbd\xe0\x7e\x41\x43\xd8\x2d\x21\x8a\xb4\x0b\x9e\x41\xd2\x0a\x93\x28\x32\xa7\x52\xd1\x12\x8b\x3d\x7d\xae\xa4\xb9\x40\x5b\xc9\xdb\x2a\xd1\xb7\x3d\xbd\x83\x4f\x9c\x83\xf9\xc6\x58\x61\x3e\xdb\x82\x9e\x97\xf4\x14\x61\xc1\x34\x17\xbc\x5d\x12\xae\x4c\xeb\xd9\x32\x19\x94\xd0\x09\xba\x28\x48\xcf\x6a\xa3\x13\x67\xd2\x1e\xe8\xa3\x20\xbd\x51\x1a\x69\x0c\x87\xe7\xd2\x49\x27\x79\x7b\xd2\x4a\x17\x56\x4b\x43\x67\xfe\xbe\x66\xbc\xac\xb8\xc6\x01\x1f\x9b\x0a\x56\x9c\x81\xd2\x61\x03\x0b\xaf\x5b\x27\xe4\x49\x77\x7c\xc0\xcd\xb0\x58\x07\x38\x9c\x24\xd6\x01\x7a\x2c\xd6\xc1\x73\x94\x8f\xc4\x3a\x40\x6f\xa4\x58\x9f\xe6\xf0\x7c\x62\x7d\x82\x37\xe7\x2d\x5e\x74\x67\xe1\xf0\x31\xd5\x5f\x1e\x4d\x23\x52\x85\x3a\xaf\xcb\x9d\xac\x70\x4e\x51\x9e\x3d\x2c\xa2\xa1\x6c\x6b\x53\x93\x5c\xc2\xdc\xd9\x43\x47\xf9\x00\x22\x9f\xb9\xb5\x6b\x84\x39\x45\xab\x4d\x49\xa6\xa2\xe0\x28\x10\xe6\xb2\xe7\xcc\xb0\xcd\x4c\x4b\x3e\x44\x89\x37\x5a\xa5\x09\x61\xa6\x52\x14\x45\x67\x5c\xd7\x54\xb3\x69\x40\x34\x67\x0f\x63\x2d\xc8\xd4\x24\x7c\x1c\x0b\xcc\xb8\x35\xad\x92\x22\x52\xbb\x1b\xbf\xe0\xac\x6f\xc5\xe7\xd3\xb1\x99\xc7\xf8\x6c\xae\x2a\x26\x53\x95\x71\xb4\x6a\xcf\xe6\x4b\x28\xaa\xd3\x6c\x8e\x14\x9b\x39\x98\x62\xe0\xd8\x1e\xde\x9a\xd0\x98\x14\xd7\x27\x63\x1c\x3d\xd7\xdd\xd8\xba\xfc\x84\xa3\x69\x4d\x19\x5e\x98\x5c\x9b\x5d\x67\x17\xa6\xca\xe8\x9e\xb2\xa6\xfe\xe1\x8e\x60\x5e\x10\x29\xdb\xfa\xa4\x8c\x8b\x2d\x31\xb6\x8a\x4c\x34\xa2\xcb\x26\xa6\x1a\x1f\x98\xf7\xa4\x23\x77\x09\xfc\x26\x5c\xeb\x84\xa8\x14\xe6\x36\xe6\xe8\x1c\x3a\x07\xae\x49\xc3\x07\x7f\xd8\x7a\xa7\x8c\xfb\xed\xc8\xbc\xf7\x5c\xfb\x04\xb7\x42\x65\xa4\x87\xf0\x9c\xf1\xdc\x31\xa7\xb6\x9e\xab\xe6\xe8\x3d\xa3\x0c\xb6\xe2\x7a\xea\x86\x5d\x13\x7b\x78\x6d\x42\xcf\x14\xa6\x5e\xf1\xf9\x83\x90\x95\x96\x6b\xad\xf1\x3c\x0b\xfe\xee\x0a\x43\xe1\x92\xd8\x3a\x6f\x5e\x4f\xc6\x98\xdc\x59\x84\x59\x4a\xcf\x07\xae\x14\xdc\x2f\x8c\x3f\xe1\x13\x12\x92\x8c\xe6\x77\x68\x5d\xb9\xe7\x55\x08\xcc\x33\x64\x12\x72\x35\x54\xcf\x14\xc0\xd4\x04\x2d\x1a\xa0\x66\x75\x68\xf0\xa0\xf9\x03\x0d\x1a\xa0\x35\x4a\x7f\x9e\xe6\xec\x5c\xda\xf3\x04\x57\xae\x8e\xa3\xbc\xe8\x29\x26\x43\x47\xf8\xbf\x66\xe9\x92\xaf\x22\x3b\x54\x9e\x84\xb6\xf0\xf1\xd1\x17\x80\x0d\x81\x1f\x72\x06\x02\xbc\x4d\x12\x62\x2f\x35\x16\xe2\xc0\xcb\x10\x8e\x84\xd8\x4b\x6b\xa4\x10\x9f\xe2\xec\x7c\x42\x1c\xe4\xca\xf9\xb5\x17\xad\x99\x3e\x7c\xcb\xc4\xb7\x75\xf0\x4e\xcd\x67\x1d\xda\x32\xed\x9c\x4a\x96\xec\x19\x54\x92\xa2\x3e\x44\x96\x35\x9f\x51\x6e\x13\xc7\x2d\x21\xc3\xba\x1f\xbc\xc8\x0a\x13\x9e\xb2\xa9\xc0\xbd\x68\xd3\x3b\x5e\x07\xce\x21\x87\x9b\xa0\xb8\xa4\x1a\x66\x38\xf3\x54\x57\x0c\xce\xec\x04\xec\x0c\xd2\xb1\xa8\xf1\xbc\x21\xe4\x00\x2f\x83\xed\x47\x21\x25\xc4\xc1\xb9\x30\xe2\xe5\x81\xd1\x51\x5c\x74\x9f\xe8\xc0\x8b\x56\xbe\xc5\x33\x6e\x6a\x5e\xbb\xa8\x8b\x7d\x98\xf8\x8e\xda\xef\xdd\x91\xa8\x35\x79\xf3\xbe\x02\x22\xff\xf4\x4c\x92\x73\x1f\x31\x16\x76\xff\x3b\x6f\x8e\x24\xde\x47\x69\xa4\xd8\x9f\xe0\xea\x7c\xb2\x1f\x62\xe9\xab\x38\x79\x66\xef\x4d\x42\x5f\xdb\x06\xe9\x17\x1d\xcd\xb6\xb3\xcb\x0c\x7d\x2b\x2e\x17\xc2\x75\xdb\x36\xa5\xb6\xb6\x30\x36\xa1\x20\xb0\xe7\xa0\x66\xc8\x8f\xb2\x4b\x81\x92\xf3\xc9\xad\xff\x74\x81\xa1\x09\x9c\x00\x8e\x21\x32\x16\x16\xc3\xaf\x7a\x3a\x00\xc4\x50\xeb\x51\x50\x08\x8c\xfe\x5c\x20\xf0\x31\xf0\x55\x9c\x13\x70\xf8\xba\xac\xaf\xeb\x74\x8d\x17\x1f\x71\xe6\xc1\x80\x4f\xc6\x15\xaf\x1b\xd8\xcd\xcd\xca\xbf\x95\x61\x70\x96\x26\x09\xf9\x00\x1d\x96\xf2\xc1\xd7\x96\x1d\x89\xf9\x40\xfb\x91\x72\xee\xe7\xe0\x7c\x82\xee\xe1\xe1\xab\xd8\x3b\x79\xfc\xf6\xb7\x6f\xe7\x2d\x48\xaa\x7e\x8e\x81\xed\xf6\x9d\xfe\xf8\x4d\x48\x0e\x47\xee\xac\xe6\xdd\xb1\xec\x9e\x24\x63\xd7\xa3\xda\xfd\x48\xc0\x26\xec\x62\xba\xb7\x29\xc9\x7d\xd2\x05\x6f\x32\x60\x97\xcc\xd6\x7e\xf3\x07\xd1\x88\x2d\x41\xe1\x82\x36\xbb\xa9\x5f\x72\x42\x94\xd7\x01\x35\xdf\xdb\xe4\xcf\xf4\x4a\x2e\x07\x0a\xbd\x05\xa9\xe2\xb5\x43\x87\xf1\xd2\x93\xcc\xf7\x3c\xcf\x09\xa8\xf4\x50\xb2\xb8\xf4\xbe\x33\xf0\x00\x99\x1e\x1a\xa3\xb0\x19\xe6\xe4\x5c\xe8\x0c\x70\xe2\xe2\xf4\xf8\xa2\x9e\xd8\xe0\x1b\x18\x5f\x7b\xa3\xdc\x21\xca\xbc\x6f\x3f\xca\xc9\xba\x21\x06\xcf\x7a\x7f\xb9\x66\x88\xa9\x49\xa2\xea\x27\xc7\xf2\x1a\x7a\x8d\xe5\x91\xd0\xfa\xa9\x8d\x94\xdc\x93\xdc\x9d\x4f\x7c\xc3\x8c\x7d\x15\xa5\x9b\xbb\xaf\x08\x3d\xd3\x96\xb7\x66\x67\xcb\x9b\x1a\xde\xf2\xa6\x1b\x4a\xd5\x77\x9a\x2a\x3d\xb2\x82\x35\x3d\x6b\xe7\x84\x97\x6a\xdc\x11\x32\x90\x57\xd0\x42\x7b\xcd\xb2\x0b\x0d\x2e\x35\x8d\x0d\xda\xb9\xe0\xed\xff\xa0\xd5\x70\x55\x46\xcf\xaf\x15\x72\x45\x8d\x49\x45\xcb\x15\xb0\x3c\x5d\x43\x55\x07\x15\x2f\xe9\xb4\xcd\xf0\x11\x32\x69\x4e\x7c\xc1\x6b\x73\x38\xb3\x5b\xde\x78\xcb\x76\xc6\xcb\x4e\x43\xd5\x0b\xba\xe2\xd7\x3b\x25\xbc\x5b\xc8\x93\xd9\x3d\x7a\x0a\x13\x80\x76\x44\xc3\xa2\x6b\xe0\x15\xb0\x07\x90\x3a\x6a\x37\x0a\x47\xbe\x11\x9f\x0b\x3c\x83\xe3\x76\x5b\xda\x2e\x8c\x98\xfd\xb7\xe7\x7e\xcb\xbb\xd9\x2a\x5e\xc2\xb4\x32\xcd\x5e\x98\x2f\xf2\x28\xf8\x35\x66\x65\x42\x4b\x98\xbe\x33\x2f\x3d\xf3\x33\x49\xa2\x07\x29\xb1\x5c\x7b\xde\x61\x7c\x24\xdd\x83\x34\x46\xca\x78\x88\x93\xf3\x49\xba\x97\x93\xaf\xe2\x54\xcb\xc1\x17\x42\x7f\x43\xc7\x1c\x7d\xc5\xaf\xa8\xfa\xff\x00\x00\x00\xff\xff\xea\xbf\xaf\x72\x00\x80\x00\x00")

func bindataGoBytes() ([]byte, error) {
	return bindataRead(
		_bindataGo,
		"bindata.go",
	)
}

func bindataGo() (*asset, error) {
	bytes, err := bindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bindata.go", size: 53248, mode: os.FileMode(436), modTime: time.Unix(1524945292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"0_create_users_table.up.sql": _0_create_users_tableUpSql,
	"0_drop_users_table.down.sql": _0_drop_users_tableDownSql,
	"10_add_reports_delete_cascade.up.sql": _10_add_reports_delete_cascadeUpSql,
	"10_remove_reports_delete_cascade.down.sql": _10_remove_reports_delete_cascadeDownSql,
	"11_add_lat_long.up.sql": _11_add_lat_longUpSql,
	"11_drop_lat_long.down.sql": _11_drop_lat_longDownSql,
	"12_add_end_date_rename_start_date.up.sql": _12_add_end_date_rename_start_dateUpSql,
	"12_drop_end_date_rename_start_date.down.sql": _12_drop_end_date_rename_start_dateDownSql,
	"13_add_notes_field.up.sql": _13_add_notes_fieldUpSql,
	"13_remove_notes_field.down.sql": _13_remove_notes_fieldDownSql,
	"14_add_youtube_url_table.up.sql": _14_add_youtube_url_tableUpSql,
	"14_remove_youtube_url.down.sql": _14_remove_youtube_urlDownSql,
	"15_add_is_blue_reports.down.sql": _15_add_is_blue_reportsDownSql,
	"15_remove_is_blue_reports.up.sql": _15_remove_is_blue_reportsUpSql,
	"16_create_picklist_tables.up.sql": _16_create_picklist_tablesUpSql,
	"16_drop_picklist_tables.down.sql": _16_drop_picklist_tablesDownSql,
	"17_add_is_verified.up.sql": _17_add_is_verifiedUpSql,
	"17_remove_is_verified.down.sql": _17_remove_is_verifiedDownSql,
	"1_create_events_table.up.sql": _1_create_events_tableUpSql,
	"1_drop_events_table.down.sql": _1_drop_events_tableDownSql,
	"2_create_matches_table.up.sql": _2_create_matches_tableUpSql,
	"2_drop_matches_table.down.sql": _2_drop_matches_tableDownSql,
	"3_create_alliances_table.up.sql": _3_create_alliances_tableUpSql,
	"3_drop_alliances_table.down.sql": _3_drop_alliances_tableDownSql,
	"4_create_reports_table.up.sql": _4_create_reports_tableUpSql,
	"4_drop_reports_table.down.sql": _4_drop_reports_tableDownSql,
	"5_add_event_type.up.sql": _5_add_event_typeUpSql,
	"5_remove_event_type.down.sql": _5_remove_event_typeDownSql,
	"6_add_bluewon.down.sql": _6_add_bluewonDownSql,
	"6_remove_bluewon.up.sql": _6_remove_bluewonUpSql,
	"7_add_photos_table.up.sql": _7_add_photos_tableUpSql,
	"7_remove_photos_table.down.sql": _7_remove_photos_tableDownSql,
	"8_add_isdmin.up.sql": _8_add_isdminUpSql,
	"8_remove_isadmin.down.sql": _8_remove_isadminDownSql,
	"9_add_reports_cascade.up.sql": _9_add_reports_cascadeUpSql,
	"9_remove_reports_cascade.down.sql": _9_remove_reports_cascadeDownSql,
	"bindata.go": bindataGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"0_create_users_table.up.sql": &bintree{_0_create_users_tableUpSql, map[string]*bintree{}},
	"0_drop_users_table.down.sql": &bintree{_0_drop_users_tableDownSql, map[string]*bintree{}},
	"10_add_reports_delete_cascade.up.sql": &bintree{_10_add_reports_delete_cascadeUpSql, map[string]*bintree{}},
	"10_remove_reports_delete_cascade.down.sql": &bintree{_10_remove_reports_delete_cascadeDownSql, map[string]*bintree{}},
	"11_add_lat_long.up.sql": &bintree{_11_add_lat_longUpSql, map[string]*bintree{}},
	"11_drop_lat_long.down.sql": &bintree{_11_drop_lat_longDownSql, map[string]*bintree{}},
	"12_add_end_date_rename_start_date.up.sql": &bintree{_12_add_end_date_rename_start_dateUpSql, map[string]*bintree{}},
	"12_drop_end_date_rename_start_date.down.sql": &bintree{_12_drop_end_date_rename_start_dateDownSql, map[string]*bintree{}},
	"13_add_notes_field.up.sql": &bintree{_13_add_notes_fieldUpSql, map[string]*bintree{}},
	"13_remove_notes_field.down.sql": &bintree{_13_remove_notes_fieldDownSql, map[string]*bintree{}},
	"14_add_youtube_url_table.up.sql": &bintree{_14_add_youtube_url_tableUpSql, map[string]*bintree{}},
	"14_remove_youtube_url.down.sql": &bintree{_14_remove_youtube_urlDownSql, map[string]*bintree{}},
	"15_add_is_blue_reports.down.sql": &bintree{_15_add_is_blue_reportsDownSql, map[string]*bintree{}},
	"15_remove_is_blue_reports.up.sql": &bintree{_15_remove_is_blue_reportsUpSql, map[string]*bintree{}},
	"16_create_picklist_tables.up.sql": &bintree{_16_create_picklist_tablesUpSql, map[string]*bintree{}},
	"16_drop_picklist_tables.down.sql": &bintree{_16_drop_picklist_tablesDownSql, map[string]*bintree{}},
	"17_add_is_verified.up.sql": &bintree{_17_add_is_verifiedUpSql, map[string]*bintree{}},
	"17_remove_is_verified.down.sql": &bintree{_17_remove_is_verifiedDownSql, map[string]*bintree{}},
	"1_create_events_table.up.sql": &bintree{_1_create_events_tableUpSql, map[string]*bintree{}},
	"1_drop_events_table.down.sql": &bintree{_1_drop_events_tableDownSql, map[string]*bintree{}},
	"2_create_matches_table.up.sql": &bintree{_2_create_matches_tableUpSql, map[string]*bintree{}},
	"2_drop_matches_table.down.sql": &bintree{_2_drop_matches_tableDownSql, map[string]*bintree{}},
	"3_create_alliances_table.up.sql": &bintree{_3_create_alliances_tableUpSql, map[string]*bintree{}},
	"3_drop_alliances_table.down.sql": &bintree{_3_drop_alliances_tableDownSql, map[string]*bintree{}},
	"4_create_reports_table.up.sql": &bintree{_4_create_reports_tableUpSql, map[string]*bintree{}},
	"4_drop_reports_table.down.sql": &bintree{_4_drop_reports_tableDownSql, map[string]*bintree{}},
	"5_add_event_type.up.sql": &bintree{_5_add_event_typeUpSql, map[string]*bintree{}},
	"5_remove_event_type.down.sql": &bintree{_5_remove_event_typeDownSql, map[string]*bintree{}},
	"6_add_bluewon.down.sql": &bintree{_6_add_bluewonDownSql, map[string]*bintree{}},
	"6_remove_bluewon.up.sql": &bintree{_6_remove_bluewonUpSql, map[string]*bintree{}},
	"7_add_photos_table.up.sql": &bintree{_7_add_photos_tableUpSql, map[string]*bintree{}},
	"7_remove_photos_table.down.sql": &bintree{_7_remove_photos_tableDownSql, map[string]*bintree{}},
	"8_add_isdmin.up.sql": &bintree{_8_add_isdminUpSql, map[string]*bintree{}},
	"8_remove_isadmin.down.sql": &bintree{_8_remove_isadminDownSql, map[string]*bintree{}},
	"9_add_reports_cascade.up.sql": &bintree{_9_add_reports_cascadeUpSql, map[string]*bintree{}},
	"9_remove_reports_cascade.down.sql": &bintree{_9_remove_reports_cascadeDownSql, map[string]*bintree{}},
	"bindata.go": &bintree{bindataGo, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

