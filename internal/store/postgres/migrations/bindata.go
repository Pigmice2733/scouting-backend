// Code generated by go-bindata.
// sources:
// 0_create_users_table.up.sql
// 0_drop_users_table.down.sql
// 10_add_reports_delete_cascade.up.sql
// 10_remove_reports_delete_cascade.down.sql
// 11_add_lat_long.up.sql
// 11_drop_lat_long.down.sql
// 12_add_end_date_rename_start_date.up.sql
// 12_drop_end_date_rename_start_date.down.sql
// 13_add_notes_field.up.sql
// 13_remove_notes_field.down.sql
// 1_create_events_table.up.sql
// 1_drop_events_table.down.sql
// 2_create_matches_table.up.sql
// 2_drop_matches_table.down.sql
// 3_create_alliances_table.up.sql
// 3_drop_alliances_table.down.sql
// 4_create_reports_table.up.sql
// 4_drop_reports_table.down.sql
// 5_add_event_type.up.sql
// 5_remove_event_type.down.sql
// 6_add_bluewon.down.sql
// 6_remove_bluewon.up.sql
// 7_add_photos_table.up.sql
// 7_remove_photos_table.down.sql
// 8_add_isdmin.up.sql
// 8_remove_isadmin.down.sql
// 9_add_reports_cascade.up.sql
// 9_remove_reports_cascade.down.sql
// bindata.go
// DO NOT EDIT!

package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __0_create_users_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\xf0\xf3\x0f\x51\x70\x8d\xf0\x0c\x0e\x09\x56\x28\x2d\x4e\x2d\x2a\x56\xd0\xe0\xe2\x04\x31\xf2\x12\x73\x53\x15\x42\x5c\x23\x42\xc0\x2a\xfc\x42\x7d\x7c\x14\x42\xfd\x3c\x03\x43\x5d\x75\xb8\x38\x33\x12\x8b\x33\x52\x53\x02\x12\x8b\x8b\xcb\xf3\x8b\x52\x50\x55\x71\x69\x02\x02\x00\x00\xff\xff\xe1\x96\xd7\xd2\x62\x00\x00\x00")

func _0_create_users_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__0_create_users_tableUpSql,
		"0_create_users_table.up.sql",
	)
}

func _0_create_users_tableUpSql() (*asset, error) {
	bytes, err := _0_create_users_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0_create_users_table.up.sql", size: 98, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __0_drop_users_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\xb6\x06\x04\x00\x00\xff\xff\xbd\x6d\xc5\x8d\x11\x00\x00\x00")

func _0_drop_users_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__0_drop_users_tableDownSql,
		"0_drop_users_table.down.sql",
	)
}

func _0_drop_users_tableDownSql() (*asset, error) {
	bytes, err := _0_drop_users_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0_drop_users_table.down.sql", size: 17, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __10_add_reports_delete_cascadeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcb\xbd\xaa\x02\x31\x14\xc4\xf1\xfe\x3e\xc5\x94\xbb\xcf\x70\xab\x63\xce\xac\x2c\x86\x64\x39\x89\x85\xd5\x62\x11\x1b\xf1\x83\x44\x0b\xdf\x5e\x16\x59\x6c\x6c\x66\xe0\x07\x7f\xf1\x99\x86\x2c\x1b\x4f\xd4\x72\xbf\xd5\x47\x83\x5a\x9c\xe0\x62\x48\xd9\x64\x0c\x79\xf5\xf9\xf3\xa5\xce\xa7\x73\x79\xfd\xff\xfd\x4a\x45\x15\x43\x34\x8e\xdb\x80\x1d\x0f\xdd\x9a\xf4\x30\x0e\x34\x06\xc7\x84\x67\x2b\xb5\x75\xcb\x5e\x8f\x97\xd2\x23\x06\xec\x27\x95\x4c\x38\x49\x4e\x94\x8b\x28\x3d\xbf\xf2\x0e\x00\x00\xff\xff\xcf\x01\x46\xde\xa7\x00\x00\x00")

func _10_add_reports_delete_cascadeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__10_add_reports_delete_cascadeUpSql,
		"10_add_reports_delete_cascade.up.sql",
	)
}

func _10_add_reports_delete_cascadeUpSql() (*asset, error) {
	bytes, err := _10_add_reports_delete_cascadeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "10_add_reports_delete_cascade.up.sql", size: 167, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __10_remove_reports_delete_cascadeDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x81\x89\xc7\x43\xe8\xd4\xa2\xf8\xb4\xec\xd4\x4a\x6b\x2e\x6c\x5a\x1d\x5d\x5c\x14\xdc\xfc\x83\x5c\x3d\xdd\xfd\x14\xbc\x5d\x23\x35\x60\x5a\x34\x15\x82\x5c\xdd\x5c\x83\x5c\xfd\x9c\x5d\x83\x15\x4a\x8b\x53\x8b\x8a\x35\x40\x64\x5e\x62\x6e\xaa\xa6\x82\xbf\x9f\x42\x68\x80\x8b\x63\x88\xab\x82\xb3\x63\xb0\xb3\xa3\x8b\x2b\x20\x00\x00\xff\xff\xd6\xa5\x2c\xc4\x95\x00\x00\x00")

func _10_remove_reports_delete_cascadeDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__10_remove_reports_delete_cascadeDownSql,
		"10_remove_reports_delete_cascade.down.sql",
	)
}

func _10_remove_reports_delete_cascadeDownSql() (*asset, error) {
	bytes, err := _10_remove_reports_delete_cascadeDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "10_remove_reports_delete_cascade.down.sql", size: 149, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __11_add_lat_longUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x49\x2c\x51\x28\x4a\x4d\xcc\xb1\xe6\x22\xa0\x2e\x3f\x2f\x1d\xaa\x10\x10\x00\x00\xff\xff\x85\xb1\x54\x59\x51\x00\x00\x00")

func _11_add_lat_longUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__11_add_lat_longUpSql,
		"11_add_lat_long.up.sql",
	)
}

func _11_add_lat_longUpSql() (*asset, error) {
	bytes, err := _11_add_lat_longUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "11_add_lat_long.up.sql", size: 81, mode: os.FileMode(436), modTime: time.Unix(1519604808, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __11_drop_lat_longDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x49\x2c\xb1\xe6\x22\xa4\x26\x3f\x2f\xdd\x9a\x0b\x10\x00\x00\xff\xff\x97\xf4\x31\x93\x49\x00\x00\x00")

func _11_drop_lat_longDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__11_drop_lat_longDownSql,
		"11_drop_lat_long.down.sql",
	)
}

func _11_drop_lat_longDownSql() (*asset, error) {
	bytes, err := _11_drop_lat_longDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "11_drop_lat_long.down.sql", size: 73, mode: os.FileMode(436), modTime: time.Unix(1519688252, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __12_add_end_date_rename_start_dateUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xcd\x4b\x71\x49\x2c\x49\x55\x08\xf1\xf4\x75\x0d\x0e\x71\xf4\x0d\x08\x89\x52\xf0\xf3\x0f\x51\xf0\x0b\xf5\xf1\xb1\xe6\x02\x04\x00\x00\xff\xff\x34\x34\x21\xbd\x3c\x00\x00\x00")

func _12_add_end_date_rename_start_dateUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__12_add_end_date_rename_start_dateUpSql,
		"12_add_end_date_rename_start_date.up.sql",
	)
}

func _12_add_end_date_rename_start_dateUpSql() (*asset, error) {
	bytes, err := _12_add_end_date_rename_start_dateUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "12_add_end_date_rename_start_date.up.sql", size: 60, mode: os.FileMode(436), modTime: time.Unix(1519688252, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __12_drop_end_date_rename_start_dateDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xcd\x4b\x71\x49\x2c\x49\xb5\xe6\x02\x04\x00\x00\xff\xff\x5f\x1d\xc8\xf2\x28\x00\x00\x00")

func _12_drop_end_date_rename_start_dateDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__12_drop_end_date_rename_start_dateDownSql,
		"12_drop_end_date_rename_start_date.down.sql",
	)
}

func _12_drop_end_date_rename_start_dateDownSql() (*asset, error) {
	bytes, err := _12_drop_end_date_rename_start_dateDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "12_drop_end_date_rename_start_date.down.sql", size: 40, mode: os.FileMode(436), modTime: time.Unix(1519688252, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __13_add_notes_fieldUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\xcb\x2f\x49\x2d\x56\x08\x71\x8d\x08\x01\x04\x00\x00\xff\xff\xfe\xf0\xf7\xb7\x29\x00\x00\x00")

func _13_add_notes_fieldUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__13_add_notes_fieldUpSql,
		"13_add_notes_field.up.sql",
	)
}

func _13_add_notes_fieldUpSql() (*asset, error) {
	bytes, err := _13_add_notes_fieldUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "13_add_notes_field.up.sql", size: 41, mode: os.FileMode(436), modTime: time.Unix(1519688237, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __13_remove_notes_fieldDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\xcb\x2f\x49\x2d\x06\x04\x00\x00\xff\xff\xd9\x75\x26\xc9\x25\x00\x00\x00")

func _13_remove_notes_fieldDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__13_remove_notes_fieldDownSql,
		"13_remove_notes_field.down.sql",
	)
}

func _13_remove_notes_fieldDownSql() (*asset, error) {
	bytes, err := _13_remove_notes_fieldDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "13_remove_notes_field.down.sql", size: 37, mode: os.FileMode(436), modTime: time.Unix(1519688241, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1_create_events_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8b\x4d\x0a\xc2\x30\x10\x85\xd7\x99\x53\xbc\xa5\x42\x2f\x11\x65\x84\x60\x12\x4b\xf2\x84\xd6\x5d\xc1\x01\x41\xac\x60\x83\xe0\xed\x45\x44\xb7\xdf\xcf\xb6\xa8\xa7\x82\x7e\x13\x15\x61\x87\x7c\x20\x74\x08\x95\x15\xf6\xb4\xb9\x2d\x58\x89\xbb\xda\x0b\xd4\x81\xe8\x4b\x48\xbe\x8c\xd8\xeb\xd8\x89\x9b\xa7\x9b\x7d\xf9\xe7\xca\xc7\x18\x3b\x71\xcb\xe5\xfe\x68\xf9\x67\x3a\x71\xe7\xa9\x19\x18\x92\x56\xfa\xd4\xf3\xf4\x8f\x65\xfd\x0e\x00\x00\xff\xff\x50\xda\x81\x7d\x7d\x00\x00\x00")

func _1_create_events_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_create_events_tableUpSql,
		"1_create_events_table.up.sql",
	)
}

func _1_create_events_tableUpSql() (*asset, error) {
	bytes, err := _1_create_events_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_create_events_table.up.sql", size: 125, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1_drop_events_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x06\x04\x00\x00\xff\xff\x27\xe5\x89\x64\x11\x00\x00\x00")

func _1_drop_events_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_drop_events_tableDownSql,
		"1_drop_events_table.down.sql",
	)
}

func _1_drop_events_tableDownSql() (*asset, error) {
	bytes, err := _1_drop_events_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_drop_events_table.down.sql", size: 17, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_create_matches_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x4d\x6a\xc3\x30\x10\x46\xd7\xd2\x29\x66\x69\x83\x2e\xa1\x84\x71\x10\x91\xa5\x20\x4d\x69\xd2\x9d\x2b\x0f\x34\xf8\xaf\xd8\x72\xc1\xb7\x2f\x2e\xf5\xa6\x74\xfb\xde\xf7\xc1\x3b\x07\xd4\x84\x40\xfa\x64\x11\x4c\x05\xce\x13\xe0\xdd\x44\x8a\x30\x34\x39\x7d\xf0\x02\x85\x14\x1d\x6f\x40\x78\x27\xb8\x05\x53\xeb\xf0\x80\x2b\x3e\x94\x14\xfc\xc5\x63\xbe\x1e\x6e\xbf\xba\x17\x6b\x95\x14\x9f\x33\xb7\xcf\x94\xb9\xa5\xe7\xc0\x40\xa6\xc6\x48\xba\xbe\xd1\x9b\x92\xa2\x49\x79\x6d\xfa\x7f\xc4\x7b\xbf\xf2\xeb\x34\xc2\xc9\x7b\x8b\xda\x29\x29\x66\x6e\x63\x9a\x66\x06\xe3\x08\x2f\x18\x7e\x47\x7f\x59\xe5\x03\x9a\x8b\xdb\xa3\x8a\x23\xa9\x84\x80\x15\x06\x74\x67\x8c\xf0\x03\x97\xa2\xe3\xad\x94\xe5\x77\x00\x00\x00\xff\xff\x95\xc6\xa5\x34\xf2\x00\x00\x00")

func _2_create_matches_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_create_matches_tableUpSql,
		"2_create_matches_table.up.sql",
	)
}

func _2_create_matches_tableUpSql() (*asset, error) {
	bytes, err := _2_create_matches_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_create_matches_table.up.sql", size: 242, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_drop_matches_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x06\x04\x00\x00\xff\xff\xed\x06\x12\x35\x12\x00\x00\x00")

func _2_drop_matches_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_drop_matches_tableDownSql,
		"2_drop_matches_table.down.sql",
	)
}

func _2_drop_matches_tableDownSql() (*asset, error) {
	bytes, err := _2_drop_matches_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_drop_matches_table.down.sql", size: 18, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_create_alliances_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8c\x41\x0a\x83\x30\x14\x44\xd7\xe6\x14\xb3\x34\xe0\x25\x54\xc6\x12\x0c\x09\x8d\x11\xec\xd2\xca\x87\x4a\xd5\x45\xad\x0b\x6f\x5f\xb0\xb4\x14\xba\x9d\x79\xef\x95\x81\x79\x24\x62\x5e\x58\xc2\x54\x70\x3e\x82\x9d\x69\x62\x83\x7e\x9a\xc6\x7e\x19\x64\x45\xaa\x92\xb9\x7f\x0e\xb7\x5a\x76\x44\x76\xf1\xa0\x5c\x6b\x6d\xa6\x92\x71\x2d\xa6\x4d\x50\x78\x6f\x99\xbb\xdf\x67\xd9\xe6\xab\x3c\xfe\x84\xca\x07\x9a\x93\x43\xcd\x4b\xfa\xa9\x6a\x04\x56\x0c\x74\x25\x1b\x1c\xa3\xac\xe9\x5d\x76\x9d\xa9\xa4\x75\xe6\xdc\xf2\x8b\x66\x78\x77\xb5\xd2\xaf\x00\x00\x00\xff\xff\x80\x51\xbd\xfc\xbc\x00\x00\x00")

func _3_create_alliances_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_create_alliances_tableUpSql,
		"3_create_alliances_table.up.sql",
	)
}

func _3_create_alliances_tableUpSql() (*asset, error) {
	bytes, err := _3_create_alliances_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_create_alliances_table.up.sql", size: 188, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_drop_alliances_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\xcc\xc9\xc9\x4c\xcc\x4b\x4e\x2d\x06\x04\x00\x00\xff\xff\x17\xe1\x40\xdc\x14\x00\x00\x00")

func _3_drop_alliances_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_drop_alliances_tableDownSql,
		"3_drop_alliances_table.down.sql",
	)
}

func _3_drop_alliances_tableDownSql() (*asset, error) {
	bytes, err := _3_drop_alliances_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_drop_alliances_table.down.sql", size: 20, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_create_reports_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xc1\x6a\x86\x30\x10\x84\xcf\xe6\x29\xf6\x98\x40\x5e\x42\x7f\xd6\x12\x0c\x09\x8d\x11\xec\x31\x94\x85\x96\x56\x5b\x92\x58\xf0\xed\x8b\x4a\x40\x6b\x2f\x21\xcc\x7c\x3b\x33\x0f\x87\xb5\x47\xf0\x75\xa3\x11\x54\x0b\xc6\x7a\xc0\x51\xf5\xbe\x87\x48\xdf\x5f\x31\x27\xe0\xac\x3a\xbe\x14\xc1\xe3\xe8\x77\xc6\x0c\x5a\x4b\x56\xd1\x0f\xcd\xb9\xa3\xf5\x66\x4c\x21\xbf\xbe\xfd\x67\xbc\xa7\xe6\x73\x21\x68\xac\xd5\x58\x9b\xb3\x93\x29\x4c\x37\x3c\xe5\x90\xd3\x4d\x1d\x8c\x7a\x1e\x90\x97\x76\x09\xa5\x4e\xc2\x96\x22\x24\x03\x68\xad\x43\xf5\x64\xa0\xc3\x17\x5e\xf6\x0b\x70\xd8\xa2\x43\xf3\xc0\x1e\x96\x44\x31\xf1\xed\x9d\xc3\x44\x42\xb2\xea\x7c\x52\xb2\x2f\x27\xbb\x98\xf8\x07\xad\x7f\xf1\x32\xe0\x82\xef\x22\x1d\x3c\x13\xbf\x01\x00\x00\xff\xff\xf1\xac\xe6\x8d\x6b\x01\x00\x00")

func _4_create_reports_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_create_reports_tableUpSql,
		"4_create_reports_table.up.sql",
	)
}

func _4_create_reports_tableUpSql() (*asset, error) {
	bytes, err := _4_create_reports_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_create_reports_table.up.sql", size: 363, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_drop_reports_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\xb6\x06\x04\x00\x00\xff\xff\x55\x5c\x72\x90\x13\x00\x00\x00")

func _4_drop_reports_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_drop_reports_tableDownSql,
		"4_drop_reports_table.down.sql",
	)
}

func _4_drop_reports_tableDownSql() (*asset, error) {
	bytes, err := _4_drop_reports_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_drop_reports_table.down.sql", size: 19, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_add_event_typeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x83\x88\x84\x54\x16\xa4\x2a\x78\xfa\x85\xb8\xba\xbb\x06\x29\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\x00\x02\x00\x00\xff\xff\x47\xcd\xa1\xbe\x38\x00\x00\x00")

func _5_add_event_typeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_add_event_typeUpSql,
		"5_add_event_type.up.sql",
	)
}

func _5_add_event_typeUpSql() (*asset, error) {
	bytes, err := _5_add_event_typeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_add_event_type.up.sql", size: 56, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_remove_event_typeDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x83\x08\x85\x54\x16\xa4\x02\x02\x00\x00\xff\xff\xfa\x1d\x58\x8e\x28\x00\x00\x00")

func _5_remove_event_typeDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_remove_event_typeDownSql,
		"5_remove_event_type.down.sql",
	)
}

func _5_remove_event_typeDownSql() (*asset, error) {
	bytes, err := _5_remove_event_typeDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_remove_event_type.down.sql", size: 40, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __6_add_bluewonDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xca\x29\x4d\x0d\xcf\xcf\x53\x70\xf2\xf7\xf7\x71\x75\xf4\x03\x04\x00\x00\xff\xff\x08\x2a\x0a\x8b\x2e\x00\x00\x00")

func _6_add_bluewonDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__6_add_bluewonDownSql,
		"6_add_bluewon.down.sql",
	)
}

func _6_add_bluewonDownSql() (*asset, error) {
	bytes, err := _6_add_bluewonDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "6_add_bluewon.down.sql", size: 46, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __6_remove_bluewonUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xca\x29\x4d\x0d\xcf\xcf\x03\x04\x00\x00\xff\xff\xc2\xb9\xb0\x4c\x27\x00\x00\x00")

func _6_remove_bluewonUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__6_remove_bluewonUpSql,
		"6_remove_bluewon.up.sql",
	)
}

func _6_remove_bluewonUpSql() (*asset, error) {
	bytes, err := _6_remove_bluewonUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "6_remove_bluewon.up.sql", size: 39, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __7_add_photos_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\xf0\xf3\x0f\x51\x70\x8d\xf0\x0c\x0e\x09\x56\x28\xc8\xc8\x2f\xc9\x2f\x56\xd0\xe0\xe2\x2c\x49\x4d\xcc\x55\x08\x71\x8d\x08\x01\x4b\xfb\x85\xfa\xf8\xe8\x70\x71\x96\x16\xe5\xa0\x8b\x29\x28\x28\x28\x84\xfa\x79\x06\x86\xba\x6a\x80\xb4\xe8\x28\x94\x16\xe5\x68\x72\x69\x02\x02\x00\x00\xff\xff\x7a\x9d\xf7\x09\x64\x00\x00\x00")

func _7_add_photos_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__7_add_photos_tableUpSql,
		"7_add_photos_table.up.sql",
	)
}

func _7_add_photos_tableUpSql() (*asset, error) {
	bytes, err := _7_add_photos_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "7_add_photos_table.up.sql", size: 100, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __7_remove_photos_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\xc8\xc8\x2f\xc9\x2f\x06\x04\x00\x00\xff\xff\xb4\x52\x78\x3f\x11\x00\x00\x00")

func _7_remove_photos_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__7_remove_photos_tableDownSql,
		"7_remove_photos_table.down.sql",
	)
}

func _7_remove_photos_tableDownSql() (*asset, error) {
	bytes, err := _7_remove_photos_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "7_remove_photos_table.down.sql", size: 17, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __8_add_isdminUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xd1\x09\x85\x30\x0c\x05\xd0\x55\xee\x2a\xe9\x6b\xde\xd7\x35\x01\x49\x06\x10\xac\x50\x50\x3f\x0c\xee\xef\x11\x86\xae\x08\x69\x54\xbc\x35\x9e\x82\xf4\x8e\x9f\x33\x17\xc3\x2c\xd9\xaf\x79\xa3\xb9\x53\xc5\x60\x1e\xb0\x24\xd1\xf5\x2f\xc9\xc0\xb1\x9d\x35\xbe\x00\x00\x00\xff\xff\xe7\x70\xa1\xca\x43\x00\x00\x00")

func _8_add_isdminUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__8_add_isdminUpSql,
		"8_add_isdmin.up.sql",
	)
}

func _8_add_isdminUpSql() (*asset, error) {
	bytes, err := _8_add_isdminUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "8_add_isdmin.up.sql", size: 67, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __8_remove_isadminDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x2c\x76\x4c\xc9\xcd\xcc\x03\x04\x00\x00\xff\xff\x54\xf1\x61\xd5\x25\x00\x00\x00")

func _8_remove_isadminDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__8_remove_isadminDownSql,
		"8_remove_isadmin.down.sql",
	)
}

func _8_remove_isadminDownSql() (*asset, error) {
	bytes, err := _8_remove_isadminDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "8_remove_isadmin.down.sql", size: 37, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __9_add_reports_cascadeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x81\x89\xc7\x43\xe8\xd4\xa2\xf8\xb4\xec\xd4\x4a\x6b\x2e\x6c\x5a\x1d\x5d\x5c\x14\xdc\xfc\x83\x5c\x3d\xdd\xfd\x14\xbc\x5d\x23\x35\x60\x5a\x34\x15\x82\x5c\xdd\x5c\x83\x5c\xfd\x9c\x5d\x83\x15\x4a\x8b\x53\x8b\x8a\x35\x40\x64\x5e\x62\x6e\xaa\xa6\x82\xbf\x9f\x42\x68\x80\x8b\x63\x88\xab\x82\xb3\x63\xb0\xb3\xa3\x8b\x2b\x20\x00\x00\xff\xff\xd6\xa5\x2c\xc4\x95\x00\x00\x00")

func _9_add_reports_cascadeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__9_add_reports_cascadeUpSql,
		"9_add_reports_cascade.up.sql",
	)
}

func _9_add_reports_cascadeUpSql() (*asset, error) {
	bytes, err := _9_add_reports_cascadeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "9_add_reports_cascade.up.sql", size: 149, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __9_remove_reports_cascadeDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x81\x89\xc7\x43\xe8\xd4\xa2\xf8\xb4\xec\xd4\x4a\x6b\x2e\x6c\x5a\x1d\x5d\x5c\x14\xdc\xfc\x83\x5c\x3d\xdd\xfd\x14\xbc\x5d\x23\x35\x60\x5a\x34\x15\x82\x5c\xdd\x5c\x83\x5c\xfd\x9c\x5d\x83\x15\x4a\x8b\x53\x8b\x8a\x35\x40\x64\x5e\x62\x6e\xaa\x26\x20\x00\x00\xff\xff\x47\x73\x6b\x93\x83\x00\x00\x00")

func _9_remove_reports_cascadeDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__9_remove_reports_cascadeDownSql,
		"9_remove_reports_cascade.down.sql",
	)
}

func _9_remove_reports_cascadeDownSql() (*asset, error) {
	bytes, err := _9_remove_reports_cascadeDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "9_remove_reports_cascade.down.sql", size: 131, mode: os.FileMode(436), modTime: time.Unix(1518482624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bindataGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5c\xdf\x6f\xe3\x38\x92\x7e\xb6\xff\x0a\x6d\x80\x5d\xc4\x87\x5c\x5a\xbf\x45\x05\xe8\x97\x9d\x99\x03\xe6\xe1\x66\x81\xdb\xd9\xa7\xe3\xc1\xa0\x44\x2a\x63\x9c\x63\x67\x6c\x67\x86\xdd\x83\xfe\xdf\x17\x1f\xab\x94\xf8\x87\x28\x2b\x6e\x21\x99\x7e\x70\x62\x4b\x62\x91\x45\xd5\x57\x5f\x91\x2c\xf2\xc3\x87\xe0\xbb\xb5\x36\xc1\xbd\x59\x99\x8d\xda\x19\x1d\x54\x9f\x82\xfb\xf5\x7f\x56\x8b\x95\x56\x3b\x75\x3b\xfd\xf0\x21\xd8\xae\x9f\x36\xb5\xd9\xde\xe1\x7b\x38\xaf\x37\x46\xed\xcc\xfc\x69\x6b\x36\xdb\xf9\x4e\x55\x4b\x73\xfb\xf4\x78\xbb\xfd\x75\x49\xb7\xf5\x66\xfd\x78\x70\x53\xaf\x7f\x5f\xb5\xb7\xa3\x70\xae\xb4\x9e\x6f\xcc\xe3\x7a\xb3\xdb\xce\xb5\x59\x9a\x9d\x99\xd7\x6a\x5b\x2b\xbd\x2f\x26\x0a\xe7\x1b\xf3\xb0\xfe\xcd\xf8\x1e\x3d\x10\x1a\x39\xa1\x4b\xb5\x9b\x2f\xd7\xab\xfb\x7d\x31\x11\x35\xe7\xf9\xd6\x41\xb1\xd8\x15\x33\x2b\x3d\xd7\x50\x68\x63\x56\xea\xc1\xcc\xb7\x3b\xb5\xd9\xb9\x2b\xfb\x82\x62\x12\xd4\xf3\xf0\x81\xe8\xc4\x89\x5e\xad\x77\x66\x3b\x6f\x16\x66\xa9\xf7\x65\x25\xad\x6e\xfb\xf7\x0f\x8a\xb7\x7d\x6c\x7e\x33\xab\xdd\x69\x27\xb3\x56\x07\x77\xf7\xcb\xc7\x6d\xf9\x07\xb5\xab\x7f\x31\xa7\x02\x58\x9b\xc3\xdb\xfb\x12\x92\x56\x82\x5a\x2e\x17\x6a\x55\x77\xc8\x48\x48\xc6\xf1\x03\xfb\x52\xd2\x56\x4a\xfb\x12\x8f\x65\xa4\x24\xe3\xf0\xf6\xbe\x84\x8c\x5e\x11\x14\x9d\xef\x3e\x3d\xee\x97\xcd\xda\x5e\xdc\xbb\xbb\x5f\x34\x77\x45\xab\xe5\x93\xf9\x7d\xbd\x3a\xba\xc3\x25\xdb\x9b\x2f\x42\x0b\x57\xe8\xf1\x97\xf5\x6e\x7d\xda\xda\xa2\x2d\x77\x70\x7f\x5f\xb2\x70\xc5\x17\x5b\xfd\xb0\xd8\x97\x2a\xda\x82\x8b\xad\x72\xb7\xf6\xcb\x94\x07\x88\x38\x85\x42\x79\x8c\x84\x2e\x08\xb4\x68\xbd\x5f\xe3\xd7\xf7\xff\x08\x7e\xfa\xc7\xcf\xc1\x0f\xdf\xff\xf8\xf3\x5f\xa6\xd3\x47\x55\xff\xbf\xba\x37\xc1\xc3\xe2\x7e\xa3\x76\x8b\xf5\x6a\x3b\x9d\x2e\x1e\x20\x2b\xb8\x9e\x4e\xae\xaa\x4f\x3b\xb3\xbd\x9a\x4e\xae\xea\xf5\xc3\xe3\xc6\x6c\xb7\x1f\xee\x3f\x2f\x1e\x71\xa1\x79\xd8\xe1\xdf\x62\x4d\x7f\x3f\x2c\xd6\x4f\xbb\xc5\x12\x3f\xd6\xae\xc0\xa3\xda\xfd\xf2\xa1\x59\x2c\x0d\xbe\xe0\xc2\x76\xb7\x59\xac\xee\xdd\xbd\xdd\xe2\xc1\x5c\x4d\x67\xd3\x69\xf3\xb4\xaa\xdb\xe6\xfd\x8f\x51\xfa\x1a\x5f\x82\xff\xfd\x3f\x54\x7b\x13\x00\x44\x01\x15\x9b\x05\xd7\xed\x55\xb3\xd9\xac\x37\xb3\xe0\x8f\xe9\xe4\xfe\xb3\xfb\x15\xdc\x7d\x0c\xd0\xaa\xdb\x9f\xcc\xef\x10\x62\x36\xd7\xae\xd9\xf8\xfd\xf7\xa7\xa6\x31\x1b\x27\x76\x36\x9b\x4e\x16\x8d\x2b\xf0\x97\x8f\xc1\x6a\xb1\x84\x88\xc9\xc6\xec\x9e\x36\x2b\xfc\xbc\x09\x9a\x87\xdd\xed\x0f\x90\xde\x5c\x5f\x41\x50\xf0\xd7\x5f\xef\x82\xbf\xfe\x76\x45\x2d\x71\x75\xcd\xa6\x93\x2f\xd3\xe9\xe4\x37\xb5\x09\xaa\xa7\x26\xa0\x7a\xa8\x92\xe9\x64\x4e\xcd\xf9\x18\x2c\xd6\xb7\xdf\xad\x1f\x3f\x5d\xff\xad\x7a\x6a\x6e\x82\xfb\xcf\xb3\xe9\xa4\x5e\xfe\xd0\xb6\xf4\xf6\xbb\xe5\x7a\x6b\xae\x67\xd3\xb1\xda\x03\x31\x24\xdf\x23\xc8\x6c\x36\xd4\x6e\xbe\x58\x3d\x35\xb7\x7f\x47\xd3\xaf\x67\x37\x78\x62\xfa\x65\x3a\x05\x44\x02\xb5\xdd\x9a\x1d\xba\xfc\xa9\xde\x41\x8a\xd3\x8f\xdf\xc7\x74\xb2\x58\x35\xeb\x20\x58\x6f\x6f\xff\x6b\xb1\x34\x3f\xae\x9a\xf5\x73\x39\x7e\x85\xed\xf5\x3d\x09\xee\x1d\x06\x01\xbf\xc6\xe9\x64\xbb\xf8\xec\x7e\x2f\x56\xbb\x3c\x9d\x4e\x1e\xc0\x2e\xc1\xb3\xd0\xff\x5e\x6b\xe3\x2e\xfe\xbc\x78\x30\x01\xcc\xe4\x16\xdf\x50\x8f\x33\x95\xeb\x66\x71\x5c\xd7\x2c\xf8\x49\x3d\x98\xeb\x19\xd7\x80\x3a\x59\xcb\x66\x71\x8b\xda\xa7\x5f\x7a\xca\xfe\x73\xf1\x19\x65\x5d\x6b\x0e\x8b\xa2\xa1\xbd\x45\xd1\xd6\xeb\xd9\x7e\xcb\x0f\x05\x40\xb5\x73\x02\xa0\xdc\xf5\xec\x45\xd1\x13\x09\xac\xbd\x5f\xc8\x8f\xdb\xef\x17\x9b\xeb\x59\x50\xad\xd7\xcb\xfd\xd2\x6a\xb9\x3d\xa3\xf9\xa7\x2d\x29\x6e\x36\x8d\xaa\xcd\x1f\x5f\xf6\x4a\xb3\x49\xc0\xca\xe7\xf3\x2e\x4e\xff\xd7\xe3\x3f\x7f\x5d\x06\x1f\xd9\x32\xae\xaf\xa4\x8d\x1a\x69\x45\x25\x6d\x28\xa4\x0d\xc3\xee\x4f\xd3\x48\x5b\xc4\xd2\x86\x86\xfe\x17\x99\xb4\x61\x2d\x6d\x11\x49\x9b\x65\x54\x16\xdf\x8b\x54\xda\x26\x7e\xb9\xde\x84\x74\x2d\x4b\xe8\x7b\x93\x48\x1b\x36\xd2\x66\x78\x36\x94\x56\x68\xba\x0e\x59\x90\x1d\x96\xd2\x66\xb9\xb4\xb1\x90\x36\xd6\xd2\xa6\x86\xfe\xc7\x8a\xae\xeb\x50\x5a\x83\x0f\xda\x92\x4a\x9b\x44\x54\x5f\x84\x3a\x13\xaa\x27\xca\xa4\x4d\x63\x69\xb3\x5a\xda\x38\xa1\xef\x75\x48\x32\x9a\x9a\x7e\x17\x5a\xda\xa2\x96\x36\x4a\xe9\x77\xa3\xa5\x4d\xd0\x06\x3c\x0f\x39\x9a\x74\xac\x84\xb4\x09\x3e\x09\xd5\x81\x7e\xc2\xf7\x2c\xa6\xba\xc2\xf8\xe5\x3a\x3e\x75\x45\x3a\xe2\xbb\x7b\x26\xa4\x7e\x40\x7f\xe4\x25\x3d\xef\x3e\x7b\xfd\x8a\x8f\x89\xa4\x2d\xa1\x5f\x21\xad\x8e\xa5\xcd\xe3\xfd\xfe\xbf\x6a\xfd\xad\xff\x8d\xb2\x4f\xe8\xf2\xb5\xad\xe7\xd8\xf3\xd5\xd3\xc9\xa4\xc7\x3a\x6e\xa6\x93\xc9\x55\x4f\x3c\x78\x75\x33\x9d\xcc\x9e\x81\xed\x97\x83\xe6\xfc\x87\xf3\x4b\xfb\xcd\x71\x8e\xe9\xd9\xfb\x9f\xd5\xe8\x9c\xa7\x7d\x76\x90\xce\xc5\xdd\x7d\x3c\x86\xcb\x1f\x70\x24\x77\x41\xbf\x3e\x01\x5c\xc6\x5d\x50\x8a\x9b\x00\xd8\xbf\xdb\x77\x0d\xd7\x69\x92\xcf\xdc\x75\x20\xfa\x8e\x10\xff\xaf\xd5\xc2\x5e\x47\x59\x24\x52\x11\xe7\x71\x7a\x13\x84\xb3\x2f\xd3\x89\x42\xfd\x7f\x73\x1a\xff\xe1\xd4\xbc\x0b\x58\x5b\x34\xee\xce\xfd\xfd\xf2\xfc\x42\xd4\xcd\x31\x5a\x8f\x43\xec\xef\xd7\xbf\xaf\xbe\x0a\xad\x25\xa1\xc3\x21\x2e\xf4\xa3\xb4\x0b\x6d\x55\x2e\x6d\x98\x13\xca\x8e\xad\xb5\xd2\xd2\xe6\x5a\xda\x3a\x23\x04\x47\x91\xcf\x5a\x3d\x1a\x5d\x64\xad\x1e\x59\x6c\xad\xde\xe1\xc9\x89\xb5\x7a\xe4\x0c\xb4\xd6\x7e\x8d\xc6\xb3\xd6\x1e\x7d\xd8\x5a\xa3\xe2\x3d\xad\xb5\x77\xc4\x77\x39\xc9\xe4\x35\x39\x51\x98\x98\x52\xe4\x2c\xe1\xe4\xe1\xa8\x6b\x98\x2d\x1c\xbe\x91\x36\x31\x64\x7e\x65\x2a\x6d\x05\xc7\xdb\x10\xa1\xa8\x4a\xda\x3c\x91\xb6\x36\xd2\x2a\x10\x40\x2d\xad\xc8\xa5\xcd\x41\x16\xa5\xb4\x02\x9f\x4c\x5a\x9d\x91\x93\x85\xe9\x46\x15\xc9\x15\x70\xfe\x30\xf7\x4a\x5a\x0d\xc8\x18\x69\xa3\x5c\xda\xac\xa4\x76\xb9\x4f\x4e\x04\x14\x16\xd2\x16\x0d\x95\x2b\x4b\xaa\x03\x75\x41\x56\xda\x48\xab\x53\x82\x60\xd5\x50\x5d\x69\x41\xf2\x33\x25\x6d\x59\x93\x0c\xd4\x9f\x0a\x69\x75\x49\xed\x73\x84\x0a\xc8\x82\x38\x4b\x22\x12\x95\xb1\x2e\x05\x11\x9c\xbb\xaf\x19\x8a\x80\xac\x92\x36\xcd\x98\xf4\x12\x69\x93\x54\x5a\x61\xa4\xd5\x20\xa4\x50\xda\x48\x13\xfc\xb5\x96\xb6\x04\x01\xa2\x1f\x42\x22\x5b\x3c\x0b\x88\xd7\x68\x5b\x2a\x6d\x5e\x48\x1b\xa3\xef\x33\x22\x3f\xbc\x07\xf4\x81\x68\xa4\x2d\x99\x98\x40\xa8\x28\x63\xd0\xb7\x85\xb4\x25\xea\xad\x89\x24\xd3\x92\x5c\x08\xde\x09\xde\x35\xdc\x4a\xa2\xa9\x0f\x1a\x0e\x1e\x8e\x5d\x09\xde\x5b\x18\x49\x9b\x82\xfc\x58\xcf\x2e\x57\x72\xde\xdc\x2e\xf0\x29\xe7\x85\x3a\xe7\x32\x64\x72\xe3\xc8\xcb\x9c\x97\x3c\xc8\xdd\x0c\xd6\x7a\x2c\xbf\x33\x4c\xd5\xd6\x01\xe5\xef\xed\x81\x7a\xe7\x92\xbe\x96\x3d\x01\x15\x30\x28\x58\x32\xd4\x14\xcf\xf5\x31\x28\xa0\x08\xf6\xac\xc1\xa6\x0d\xb1\x68\xcc\xf1\x2c\x5c\xd3\x31\x1b\xe3\x5a\x93\x4b\xdb\x14\xe4\x72\xda\xf8\xb7\xad\xbb\x61\x57\x24\x22\x72\x5b\x80\x29\x20\x6e\x04\xb9\x17\x85\xe7\x84\xb4\x55\x4a\x70\xc4\x35\xb4\x21\x07\xf4\x0c\xb9\x2b\xb8\x1b\xb8\x00\xc4\xb3\x19\xc7\xbb\xba\xa6\x38\xd8\xb9\xa3\x9a\x20\x0a\xf7\x00\x77\x82\xfb\x55\x4d\xcf\x03\xea\x09\xdc\x64\x48\x72\xe0\x2e\xe0\x66\x04\xc7\xd6\x9a\x65\xb6\x72\x50\xbe\xe4\xb2\xa2\x8d\xc3\x15\xc7\xc2\x1c\x13\x0b\x45\x32\xd3\x90\x5c\x1e\xdc\x0b\xdc\x60\x6e\xc8\xdd\xab\x9c\xe4\xc3\x65\x94\x0d\xc5\xe6\xb9\x20\x57\x26\xd8\xb5\x0b\x41\x6e\xde\x3d\x97\xd0\xb5\x2a\xa4\xef\x8a\xeb\x81\x1b\x8b\xc3\x53\x77\xa3\x73\x72\xa9\x70\xd5\xa0\x13\xb8\x2f\x8f\xbb\x19\x62\x5b\x97\xf9\x9c\x21\x92\x5b\xc7\x33\x6c\xb6\xf4\xd4\xfb\x0c\xa9\x63\xa8\x0b\x7a\x45\x4f\x8c\xe8\x87\x86\x6a\xde\x3a\xa3\xb4\x7c\x57\x67\x74\x38\x57\xfd\x75\xa3\xec\xd7\x78\x9e\xb4\x8d\xdd\x11\x04\x69\xb6\xfc\x3d\xaf\x83\xe7\xdd\xb3\xd1\x91\xc7\x69\x03\x8d\x8c\xd0\x59\x33\x81\x03\x19\x78\xb6\xf5\x68\x29\x3c\x5a\x2d\x6d\x15\x49\x6b\x10\xe4\xc4\xd2\xaa\x90\x3c\x4c\xd2\x90\xa7\x8b\x38\x58\x8b\x42\xfa\x1c\xa3\x0e\x01\x17\xca\x67\x29\x05\x53\x99\x67\xbc\xd0\xd5\x89\x97\x40\xac\x43\x0c\xe1\xa9\x73\x41\xe1\x18\x3c\x1d\xa5\x87\x21\xc5\xdf\xfa\xd1\x60\xe1\x51\x80\x31\x20\xa2\xd7\x42\xa0\xcc\xc3\x54\x84\x62\x2c\x08\x1c\x2c\xca\xbc\x25\xff\x9e\x43\x41\x2f\xf7\xf6\x20\xe1\xc0\xea\x53\x69\xe3\xfc\xc5\xea\xdb\x90\x1a\x1c\xdd\x65\xf5\x08\x99\x1b\x9e\xa3\x2a\x13\x92\xe9\xb1\xfa\xae\x7e\xbb\xcc\xf0\xbb\x24\xb5\xb6\xdf\xbd\x64\x76\x6a\xfe\x5d\x32\x86\x22\xa0\x47\x93\x11\x41\xe0\xd3\x84\x71\x50\x24\xaf\xc7\x81\x10\x71\x16\x8f\x83\x83\x73\xeb\x8f\xdf\x1e\x39\x40\x4e\xcd\x72\xf0\x7c\x0b\x0f\xfc\x6f\xa7\x7f\xdd\xc8\x3c\xe5\xa9\x61\xcd\x53\xc5\x7c\xcd\xfd\x16\x14\xc6\xa2\xbd\xc7\x53\xc1\x6e\x0a\xb8\xe2\x3a\xa3\x17\xd8\x85\x71\xf7\x04\x14\x42\x51\x7c\xe2\x88\x66\x0a\xdc\xd4\x6d\x17\xb4\x06\xbd\x8a\x4b\x90\x36\x48\x30\x01\x6f\xe0\x72\xf4\x31\x0e\x07\xd5\x30\x0c\x96\xaf\xe9\x85\xd1\x50\x3a\x58\x6d\x06\x6d\x1e\xbe\x33\x68\xcf\x24\x02\x7c\xab\x74\xd6\x87\xdd\x2a\xeb\xc7\x59\xc6\xc1\x1d\x28\x11\xf5\xc5\xc2\x8b\xb3\x61\xbd\x77\x19\xd4\x86\xc9\x6e\xd1\x36\x34\xa1\xe3\x14\x70\xc3\xea\x19\x8a\xb9\x57\xf5\xc8\x88\xb0\x1b\xae\x3f\x23\x2f\x7d\x5f\xe4\x9d\xe4\xd4\xbc\x1d\x3f\x0e\x99\xb6\x79\xcd\x00\xaa\xae\x48\x86\xc3\x98\x26\x19\x6d\xdd\x82\x39\x30\x8c\xba\xb1\xd6\x18\xe6\xc5\x42\xda\xaa\xa0\x36\x74\x62\xad\xbb\xbf\x2e\x41\x56\xb7\x24\xc2\x91\x2f\xd3\xe9\x18\x35\xdd\x32\x86\x61\xa4\x57\x93\xd1\x10\xe1\xd7\xa4\xb5\xff\x0b\x86\x4d\x42\xc4\x49\x31\x96\xfd\x9f\xa6\x8d\x7d\x53\x73\x97\x03\x80\xe0\x5b\x49\xd4\x25\x05\x8c\x18\x57\xd5\x78\xd6\x37\x1f\xd7\xd3\x49\x97\x59\xbe\x57\x5c\x6b\xfe\x3d\xb9\x7c\xa7\x18\xf0\x4a\x1b\x0a\x84\x73\xda\x8d\x88\x86\x5e\xc5\x18\x12\xc9\xab\x67\xf6\x1d\x24\x80\xa4\x31\x20\xd1\x95\x27\x79\x39\x2b\x60\x74\x80\xe7\x52\x18\xa2\x92\xb6\x8e\x69\x0d\x0c\x83\x76\xb7\x16\x58\xd0\x1a\x1e\x8c\xb7\xaa\x69\x82\x38\x8d\x79\x6a\x2b\x92\x36\xcf\x78\x7d\x2c\xa4\x64\x0f\x44\x52\x00\x03\xae\xe9\x9c\x26\xbc\xeb\x88\xd7\xb1\x22\x5a\x77\xc4\xb3\x22\xe1\x64\x15\x4d\x6b\x74\x69\x4a\x9e\x5d\xf3\xba\x57\x95\x4b\xab\x04\xad\x79\x09\x00\xd2\x48\x1b\xf1\xc4\x79\x0e\xc6\x28\x28\x49\x25\x66\x16\x82\x9e\x25\xaf\xf5\x01\x7c\x15\xe4\xb5\x4c\xc3\xa3\xab\xaa\x92\x56\xf3\xa4\x84\x4e\x69\xf1\xc0\x08\x6a\x33\x22\xc1\xca\x48\x2b\x6a\x69\xb5\x90\xd6\x54\xf4\x1f\xe5\xca\x8a\xda\x81\xff\x85\xa6\xf5\x47\x53\x48\x5b\x2b\x5a\x78\x88\x84\xb4\x09\x47\x90\x00\xb7\xc9\x88\xb1\x72\x41\xcf\xe6\x85\xb4\x89\xa2\xfb\x28\xa7\x4a\x69\xa3\x92\xca\x95\x31\x39\x92\x46\x51\x9b\x30\xf2\x83\x83\x12\x0d\xf5\x6d\xa3\xbb\xd7\x06\xe1\x68\xa0\x0b\x74\x70\x09\x3b\xda\xe3\x1c\xbc\xe6\x72\x89\x6b\xf0\x0a\x23\xc7\xd0\x93\xc2\x7b\xec\x16\xbc\x92\x86\x39\x85\x73\x5a\x8d\xe6\x12\x7a\x55\x6a\xa7\xd7\xe3\xec\x5d\xa7\xd7\x4f\x33\xa3\xdf\x2a\x39\xc6\x37\x16\xf3\x51\x5a\x5c\x10\x3a\x04\xaf\xea\xfb\x92\x63\xfc\x2a\x5d\x64\xb5\x3e\x61\x6c\xb5\xfe\xc4\xf2\x13\xab\xf5\x49\x1a\x68\xb5\x67\xb4\x1a\xcf\x6a\xfb\x54\xfa\x53\xa4\xc8\x74\xa7\xeb\x7f\x5d\x6e\x8c\x30\xc4\x63\x39\xfc\x72\xf2\xc2\x63\xe9\x5e\xf2\x20\xac\x33\xcf\x29\xe1\x10\x1c\x14\x1b\x69\x55\x44\x7c\x05\xab\xc6\xf3\x65\xc4\x0b\xa1\x21\xcb\x2b\xa9\x6c\xc9\x16\x1e\xf2\x2c\x5b\x03\x7e\x6a\x88\x27\x80\x1a\xf0\x9c\x1b\x9d\x34\x24\x17\x41\x9f\xca\x19\x35\x15\xe5\x70\x20\x28\xc4\x73\xe0\x8b\xb0\x60\x1e\x4a\x69\xd1\x17\x1c\xd0\xa2\x22\xad\xa5\x0d\x39\xbf\x25\x62\xae\xd4\x9a\x78\xd2\x2d\x14\x87\x3c\xd3\x57\x32\x27\x85\x34\x53\x01\xce\x8e\x52\x9a\x99\xc8\x1b\x92\x5b\x08\x42\x5e\x25\x48\x26\xb8\x1c\xfc\x86\x32\x22\x24\x9d\x12\xce\x4d\x41\xd9\xa6\xa6\xfc\x21\xb7\x78\x8c\xfa\x0d\x2d\x42\x57\xe0\x65\x25\x6d\x54\xd0\x42\x7a\xc9\x75\x95\x0d\x25\x7e\x42\x77\x70\x77\xc9\xdc\x8b\x3e\x74\x3c\x19\x52\x3b\xd0\x17\x75\xce\x5c\xab\x48\xb6\x8e\x88\x57\xc1\x83\x2a\xa6\xa0\xb8\x28\x29\x85\x0e\xfd\x51\x34\xb4\x18\x5d\x54\x2f\xb9\x32\x68\x3b\x74\x47\xac\x82\xc0\xb8\xe0\x04\x53\xcd\x81\xf9\xf3\x3b\x36\xa4\x43\xa9\xe8\xb7\xcb\xcd\x49\xc8\x96\x5c\xfc\x22\x28\xae\x48\x39\x5f\x29\x2b\xc9\x3b\x85\x5c\xc6\xc9\xac\x78\xe1\x5c\xd1\xa2\x3f\xb8\x1b\xef\xcb\xe5\x0f\x65\x24\xb3\xe0\xfc\x20\xc4\x0e\xee\x3d\x24\xb4\xc0\x01\x7d\x50\x9f\xd2\xd4\x27\x90\x5d\x14\xa7\xb6\xeb\x16\x44\x32\xea\x1b\xf4\x59\xc2\x5e\xb6\xcb\x33\xf6\xe0\xe6\x02\xd7\xd8\x23\xcd\xf9\xc6\xde\x4d\x35\x47\xce\xb1\x47\xd6\x20\xef\x78\x5e\xb3\xb1\xdc\xe3\x19\xad\xd8\x3f\xc6\x69\xfc\xbe\x0e\xf2\x74\xbb\xd2\x5b\xd1\xba\x5b\xe5\xd3\x2f\x53\xa1\x70\x42\x2d\xd5\xfb\xa8\xdd\xf0\x3d\x0c\x02\x92\x8c\xfe\x77\x1b\xb0\x57\xaf\x8b\x0c\xd8\x2b\x8d\x0d\xb8\x67\xd3\xd7\x89\x01\x7b\x65\x0d\x34\xe0\x73\x9a\x8d\x67\xc0\xbd\x5a\xb5\x04\xff\xae\x19\xdb\xbe\xdd\x74\x5f\x41\xf1\x29\xb9\x58\x0c\x23\x31\x54\x15\x2d\xc5\xa7\x44\x8b\xa0\x78\x93\x73\x9e\x16\xa7\x7b\x82\x36\xe3\x8c\xb2\x2b\x6a\xb6\x4e\xb7\x9f\xa2\x7c\xc9\xce\x76\xf9\x61\x31\x0d\xe7\x30\xac\x4c\x15\xa7\xa5\x66\xe4\xba\x31\x5c\xcc\x79\xc2\xdf\xe5\x52\x31\x4d\x82\xc2\x10\x12\x80\xae\x0c\xbb\x70\x37\x1c\x03\x05\xa5\x94\xbb\x95\x19\x1a\x7e\x82\xaa\xd0\x86\x22\x24\xaa\x15\x1c\x4e\x20\xb4\xc0\x73\xd0\x05\x54\x04\xda\x41\x3b\xdd\x70\x97\x83\x64\xd7\x0e\x45\x14\x09\x5a\x05\x55\x61\x48\x08\xba\xcd\x40\x91\x39\xe9\x8f\xff\x4d\x44\x19\x28\x59\x4d\x14\x0d\x1a\x05\xed\x96\x8c\xee\x98\x7f\x03\xdd\x19\x87\x06\xd0\xad\x6c\x87\xc7\x0d\x51\x99\x2e\xa9\x2f\x55\x45\x53\x04\x18\xce\x82\xf6\xd0\x47\x08\x5b\xd0\xce\x92\xf7\x83\xb4\x0b\x28\xa0\x6b\xd0\x23\xc2\x2f\x78\x08\x37\xc1\x5b\x93\x77\xc1\x3b\x88\x2a\x69\xa3\x9a\xe8\x54\xd5\xd2\x9a\x92\xf7\x92\xe4\xd4\x17\x28\xab\x78\x91\x14\x75\xbb\x5c\x3c\xde\x3f\x02\xfa\x46\x5b\x41\x9f\x55\x46\xef\x0b\xa1\x57\x17\x95\x82\x9a\x33\x5e\xfc\x44\x28\x53\x79\x16\x40\x7b\x2d\xf4\x02\x5f\xd4\x2b\xcf\x79\xa3\x33\x3b\x4c\x8f\xfc\x51\xaf\xbc\x41\x1e\x69\x88\x86\x63\xf9\xa4\xb3\xba\x3d\x7b\xa5\x77\x76\x4b\x5d\x3b\x78\xdf\x72\xbc\x5c\xd7\x14\xb5\xe2\x83\x28\x1f\xbf\xdd\x0c\x94\xe9\x27\x58\x44\xdd\x26\xa2\x48\x5a\x73\xba\x6a\xb7\x59\xf7\x68\x78\x91\x59\xf7\xc8\x63\xb3\xee\xdd\x15\x7d\x62\xd6\x3d\xf2\x06\x9a\xf5\x79\x0d\xc7\x33\xeb\x33\xba\xb5\xd1\xe2\xab\xd7\x09\xc7\xb4\xea\xee\x4d\xe7\x5f\x3f\x9a\xc6\x48\x15\xee\x5c\xe4\x7b\xb3\xc2\x29\x8d\xf2\x5c\xea\x57\x49\xb3\xad\xa5\x20\xbb\x04\xdd\xb9\x2d\x84\x9c\x4e\xec\xa3\x5b\x97\xf6\x95\xd2\x68\xb5\xcc\x89\x2a\x32\x1e\x05\x82\x2e\x1b\x9e\x19\x76\x33\xd3\x8a\x53\xa2\x79\xd9\x24\x8e\x08\x33\x45\x4d\xa3\xe8\x84\x73\x65\x04\x53\x03\x46\x73\x6e\x6b\x65\x46\x54\x13\x71\x72\x25\x68\xdc\x51\xab\xa2\x11\xa9\xcb\xad\xc9\x78\xd6\xb7\xe0\xdd\x26\x4c\xf3\x68\x9f\x9b\xab\x0a\x89\xaa\x12\x1e\xad\xba\x9d\x36\x11\x8d\xea\x0c\xd3\x51\xcd\x34\x07\x2a\x06\x8e\xdd\x56\xcc\x88\xda\x04\x6a\x74\x23\xe1\x84\xea\x02\x8d\x01\xf3\x2e\x37\xa7\x21\x99\x8d\x26\xca\x75\xb3\xeb\x1c\xc2\x14\x09\x3d\x93\x0b\xaa\x1f\xe1\x08\xfa\x05\x23\x65\x84\x36\xa0\xde\x98\xfd\x47\x52\x10\x45\x63\x74\x59\xc2\x37\x24\x44\xef\x91\xa6\x70\x09\xfa\x62\x04\x8f\x7b\x18\x95\x82\x6e\x43\x1e\x9d\xc3\xe7\x20\x34\x29\x39\x8d\x0f\x61\x0b\x46\xaf\xae\x5e\x4d\xf4\xee\xda\x9d\x52\x58\x51\x27\xe4\x87\xf0\x9e\xf1\xde\xd1\xa7\x08\x69\xb4\xe0\xd1\x7b\x42\x33\xd8\xe8\x5f\x57\x27\x87\x26\x6e\x2b\x6a\x44\xef\x14\x54\x5f\xf3\x6e\x22\xd8\x4a\x85\x51\xb2\xa2\xf7\x99\xf1\xef\x98\xe7\x0a\x11\x92\xc0\xb6\x1a\x41\x61\x07\xda\xd4\xee\x2c\x4a\x62\x7a\x3f\x08\xa5\x10\x7e\xa1\xfd\x11\xe7\x3b\x45\x09\xf5\x6f\x18\x75\xac\x25\xf3\x2a\x04\xfa\x19\x36\x09\xbb\x7a\x79\xee\xc5\x8f\xf6\x60\xea\x02\x2f\xda\x23\xcd\xf9\xd0\xde\x63\x23\x8e\x3c\x68\x8f\xac\x41\xfe\xf3\xbc\x66\x63\x79\xcf\x33\x5a\xb5\x0b\x6a\xf9\xab\x73\x12\xc7\x75\x9e\xa7\x07\x72\xbc\xe5\xee\x52\xdf\xfa\x72\xdf\x2e\x53\x94\x45\x8c\x8f\xba\x00\x6c\x18\x7c\x57\x30\xd0\xa3\xdb\x45\x46\xec\x95\xc6\x46\xdc\x73\xb4\xc9\x89\x11\x7b\x65\x0d\x34\xe2\x73\x9a\x8d\x67\xc4\xbd\x5a\xb5\x71\xed\xbb\x6e\xb1\x38\x3e\x33\xe6\xdb\x4a\xa3\x15\xbc\x73\x09\xa1\x05\xa8\x3a\xca\x39\xa3\x5c\xd1\xa8\x0f\x23\x4b\xc1\x27\x0e\xb8\x89\xe3\x8a\x90\xe1\xc2\x0f\x5e\x64\x05\x85\xc7\x4c\x15\x78\x16\x65\x9a\x56\xd7\x8e\x53\x05\x10\x26\xa0\xbd\x2a\x22\x1a\x4e\x3c\xe9\x7b\x9d\x3d\x7b\x01\x76\x3a\xe5\x38\xd4\x78\xce\xfb\x39\xc2\x4b\x67\xf9\x41\x48\xe9\xd3\x60\x2c\x8c\x78\x75\x60\x74\x64\xf9\xfb\xa2\xe3\xe4\xd8\xa4\x6f\x31\x63\x55\xf0\xda\x85\xc8\x0e\x61\xe2\x3b\x38\xa3\x69\x37\x38\x0a\x8a\xe6\x7d\x19\xaa\xfe\xee\xb9\xc8\xce\x7d\xc2\xd8\xd8\xfd\x27\x58\x9d\x58\xbc\x4f\xd2\x40\xb3\x3f\xa3\xd5\x78\xb6\xdf\xa7\xd2\xc5\x79\xa4\x63\x02\xe0\xe0\x5c\xb0\xb7\x34\xfd\xbe\x95\x84\x8b\x36\x5a\x70\x6c\xe4\xd2\x95\x34\x0d\x44\xf1\xc1\x7d\x57\x36\xa6\xb2\xf8\xb8\xf6\x64\xdc\xde\xa4\x3b\x8e\x72\x4b\x81\x8a\xe7\x93\x79\x6f\x70\x17\x44\xba\x3a\xf0\x02\x70\x74\x89\x71\xb0\xe8\x3e\xb8\xed\x08\x10\x5d\xa5\x07\x41\xa1\xa7\xf5\x63\x81\xc0\xa7\x40\x6b\xfe\xef\xea\xff\x8f\x0f\xbf\x7b\xbb\xe8\x68\x88\xfd\xbf\x7a\xc3\x82\x07\x03\x3e\x1b\xaf\x79\xdd\xa0\x0a\x79\xf2\xc1\x73\x8c\x44\x67\x2f\x5d\x64\xe4\x1d\x72\xd8\xca\x3b\x0f\x21\x3c\x31\xf3\x8e\xf2\x03\xed\xdc\xaf\xc1\x78\x86\xee\xd1\xa1\x1d\xcc\xbe\xeb\x38\xe0\xf4\x2c\xc7\x6f\xe7\x4c\xb3\x5a\xbc\x8c\x81\x5d\xbe\x73\x73\x7a\xae\x59\x8b\xa3\x76\xe7\xf5\x7e\x5b\xf6\x37\x11\xb8\xf5\xa8\xea\x70\x24\xe0\x26\xec\x42\x7a\xb6\xcc\x29\x7c\x32\x19\x4d\x6c\x09\x0e\xc9\xdc\x69\x4f\xfc\xc1\x68\xc4\xa5\xa0\x70\x42\x9b\xc8\x69\xf4\xe1\x26\x44\x79\x1d\xd0\xf0\xb3\x65\xfa\x22\x2f\xe7\x74\xa0\xbe\x33\xcd\x0a\x5e\x3b\x6c\x31\x9e\x7b\x26\xf3\x3d\xef\xf3\x02\x54\x7a\x24\x39\x5c\x7a\x4f\x00\x3d\x42\xa6\x47\xc6\x20\x6c\xf6\x6b\x32\x16\x3a\x7b\x34\x69\xc7\xe9\xe1\xbb\x46\x62\x9d\xe7\xa9\xbe\xe5\x6c\x53\x17\xca\xbc\x67\x99\xa5\xc4\x6e\x18\x83\x27\x8d\x3f\x5d\xb3\x4f\xa9\x8b\x4c\xd5\x2f\x8e\xed\xb5\xef\x50\xda\x13\xa3\xf5\x4b\x1b\x68\xb9\x67\xb5\x1b\xcf\x7c\xfb\x15\xfb\x53\xa4\x6e\xee\x1f\xf8\x7b\x39\xbb\xc0\xde\xea\x90\x97\x4a\xf8\xe0\xb1\xa4\x65\x86\x8c\xbc\x3e\x6c\xd6\x18\x8a\xd0\x4d\x49\x53\xf5\xda\x50\xa6\x47\x92\xb1\xa7\x67\xef\x1c\xf1\x52\x8d\x3b\x55\x32\x24\x7b\x85\x2c\x94\x37\x6c\xbb\xf0\xe0\xca\x50\xdb\xe0\x9d\x33\x3e\xd1\x07\xb2\x4a\xce\xca\x68\xf8\x90\xb0\x36\xa9\x31\x2a\x68\xb9\x02\xcc\xa3\x4b\xca\x3a\x28\x78\x49\xa7\xe2\x8d\x11\x35\x9f\x04\x14\x19\x8a\xb2\xe2\x94\xf4\x42\xd4\xd6\xe2\x0c\xba\x56\x11\x79\xfd\x84\x97\x9d\xba\xb2\x17\x4c\xc1\x87\xb5\x45\x14\xe9\xa5\x9e\x99\xdd\x93\xb7\x70\x01\xd0\x4e\x64\x38\x74\x75\x1c\xe8\x7c\x04\xa9\x93\x72\x83\x70\xe4\x6b\xf1\x58\xe0\xe9\x6c\x77\xbb\x81\xfa\x9d\x11\x73\x78\x16\xf6\x5b\xef\x60\xeb\x3a\x2d\xf6\x92\x9d\x6b\xc0\x40\xc1\x4b\x98\xce\xa6\x39\x0a\xf3\x8d\x3c\x32\x3e\x94\x30\x8f\x68\x09\xd3\xb7\x83\xcd\xd3\x3f\x17\x59\x74\xa7\x24\xb6\xeb\xf6\xde\xbf\x03\x00\x00\xff\xff\xd1\x04\x6f\x46\x00\x60\x00\x00")

func bindataGoBytes() ([]byte, error) {
	return bindataRead(
		_bindataGo,
		"bindata.go",
	)
}

func bindataGo() (*asset, error) {
	bytes, err := bindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bindata.go", size: 40960, mode: os.FileMode(436), modTime: time.Unix(1519688490, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"0_create_users_table.up.sql":                 _0_create_users_tableUpSql,
	"0_drop_users_table.down.sql":                 _0_drop_users_tableDownSql,
	"10_add_reports_delete_cascade.up.sql":        _10_add_reports_delete_cascadeUpSql,
	"10_remove_reports_delete_cascade.down.sql":   _10_remove_reports_delete_cascadeDownSql,
	"11_add_lat_long.up.sql":                      _11_add_lat_longUpSql,
	"11_drop_lat_long.down.sql":                   _11_drop_lat_longDownSql,
	"12_add_end_date_rename_start_date.up.sql":    _12_add_end_date_rename_start_dateUpSql,
	"12_drop_end_date_rename_start_date.down.sql": _12_drop_end_date_rename_start_dateDownSql,
	"13_add_notes_field.up.sql":                   _13_add_notes_fieldUpSql,
	"13_remove_notes_field.down.sql":              _13_remove_notes_fieldDownSql,
	"1_create_events_table.up.sql":                _1_create_events_tableUpSql,
	"1_drop_events_table.down.sql":                _1_drop_events_tableDownSql,
	"2_create_matches_table.up.sql":               _2_create_matches_tableUpSql,
	"2_drop_matches_table.down.sql":               _2_drop_matches_tableDownSql,
	"3_create_alliances_table.up.sql":             _3_create_alliances_tableUpSql,
	"3_drop_alliances_table.down.sql":             _3_drop_alliances_tableDownSql,
	"4_create_reports_table.up.sql":               _4_create_reports_tableUpSql,
	"4_drop_reports_table.down.sql":               _4_drop_reports_tableDownSql,
	"5_add_event_type.up.sql":                     _5_add_event_typeUpSql,
	"5_remove_event_type.down.sql":                _5_remove_event_typeDownSql,
	"6_add_bluewon.down.sql":                      _6_add_bluewonDownSql,
	"6_remove_bluewon.up.sql":                     _6_remove_bluewonUpSql,
	"7_add_photos_table.up.sql":                   _7_add_photos_tableUpSql,
	"7_remove_photos_table.down.sql":              _7_remove_photos_tableDownSql,
	"8_add_isdmin.up.sql":                         _8_add_isdminUpSql,
	"8_remove_isadmin.down.sql":                   _8_remove_isadminDownSql,
	"9_add_reports_cascade.up.sql":                _9_add_reports_cascadeUpSql,
	"9_remove_reports_cascade.down.sql":           _9_remove_reports_cascadeDownSql,
	"bindata.go":                                  bindataGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"0_create_users_table.up.sql":                 &bintree{_0_create_users_tableUpSql, map[string]*bintree{}},
	"0_drop_users_table.down.sql":                 &bintree{_0_drop_users_tableDownSql, map[string]*bintree{}},
	"10_add_reports_delete_cascade.up.sql":        &bintree{_10_add_reports_delete_cascadeUpSql, map[string]*bintree{}},
	"10_remove_reports_delete_cascade.down.sql":   &bintree{_10_remove_reports_delete_cascadeDownSql, map[string]*bintree{}},
	"11_add_lat_long.up.sql":                      &bintree{_11_add_lat_longUpSql, map[string]*bintree{}},
	"11_drop_lat_long.down.sql":                   &bintree{_11_drop_lat_longDownSql, map[string]*bintree{}},
	"12_add_end_date_rename_start_date.up.sql":    &bintree{_12_add_end_date_rename_start_dateUpSql, map[string]*bintree{}},
	"12_drop_end_date_rename_start_date.down.sql": &bintree{_12_drop_end_date_rename_start_dateDownSql, map[string]*bintree{}},
	"13_add_notes_field.up.sql":                   &bintree{_13_add_notes_fieldUpSql, map[string]*bintree{}},
	"13_remove_notes_field.down.sql":              &bintree{_13_remove_notes_fieldDownSql, map[string]*bintree{}},
	"1_create_events_table.up.sql":                &bintree{_1_create_events_tableUpSql, map[string]*bintree{}},
	"1_drop_events_table.down.sql":                &bintree{_1_drop_events_tableDownSql, map[string]*bintree{}},
	"2_create_matches_table.up.sql":               &bintree{_2_create_matches_tableUpSql, map[string]*bintree{}},
	"2_drop_matches_table.down.sql":               &bintree{_2_drop_matches_tableDownSql, map[string]*bintree{}},
	"3_create_alliances_table.up.sql":             &bintree{_3_create_alliances_tableUpSql, map[string]*bintree{}},
	"3_drop_alliances_table.down.sql":             &bintree{_3_drop_alliances_tableDownSql, map[string]*bintree{}},
	"4_create_reports_table.up.sql":               &bintree{_4_create_reports_tableUpSql, map[string]*bintree{}},
	"4_drop_reports_table.down.sql":               &bintree{_4_drop_reports_tableDownSql, map[string]*bintree{}},
	"5_add_event_type.up.sql":                     &bintree{_5_add_event_typeUpSql, map[string]*bintree{}},
	"5_remove_event_type.down.sql":                &bintree{_5_remove_event_typeDownSql, map[string]*bintree{}},
	"6_add_bluewon.down.sql":                      &bintree{_6_add_bluewonDownSql, map[string]*bintree{}},
	"6_remove_bluewon.up.sql":                     &bintree{_6_remove_bluewonUpSql, map[string]*bintree{}},
	"7_add_photos_table.up.sql":                   &bintree{_7_add_photos_tableUpSql, map[string]*bintree{}},
	"7_remove_photos_table.down.sql":              &bintree{_7_remove_photos_tableDownSql, map[string]*bintree{}},
	"8_add_isdmin.up.sql":                         &bintree{_8_add_isdminUpSql, map[string]*bintree{}},
	"8_remove_isadmin.down.sql":                   &bintree{_8_remove_isadminDownSql, map[string]*bintree{}},
	"9_add_reports_cascade.up.sql":                &bintree{_9_add_reports_cascadeUpSql, map[string]*bintree{}},
	"9_remove_reports_cascade.down.sql":           &bintree{_9_remove_reports_cascadeDownSql, map[string]*bintree{}},
	"bindata.go":                                  &bintree{bindataGo, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
