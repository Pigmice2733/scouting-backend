// Code generated by go-bindata.
// sources:
// 0_create_users_table.up.sql
// 0_drop_users_table.down.sql
// 10_add_reports_delete_cascade.up.sql
// 10_remove_reports_delete_cascade.down.sql
// 1_create_events_table.up.sql
// 1_drop_events_table.down.sql
// 2_create_matches_table.up.sql
// 2_drop_matches_table.down.sql
// 3_create_alliances_table.up.sql
// 3_drop_alliances_table.down.sql
// 4_create_reports_table.up.sql
// 4_drop_reports_table.down.sql
// 5_add_event_type.up.sql
// 5_remove_event_type.down.sql
// 6_add_bluewon.down.sql
// 6_remove_bluewon.up.sql
// 7_add_photos_table.up.sql
// 7_remove_photos_table.down.sql
// 8_add_isdmin.up.sql
// 8_remove_isadmin.down.sql
// 9_add_reports_cascade.up.sql
// 9_remove_reports_cascade.down.sql
// bindata.go
// DO NOT EDIT!

package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __0_create_users_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\xf0\xf3\x0f\x51\x70\x8d\xf0\x0c\x0e\x09\x56\x28\x2d\x4e\x2d\x2a\x56\xd0\xe0\xe2\x04\x31\xf2\x12\x73\x53\x15\x42\x5c\x23\x42\xc0\x2a\xfc\x42\x7d\x7c\x14\x42\xfd\x3c\x03\x43\x5d\x75\xb8\x38\x33\x12\x8b\x33\x52\x53\x02\x12\x8b\x8b\xcb\xf3\x8b\x52\x50\x55\x71\x69\x02\x02\x00\x00\xff\xff\xe1\x96\xd7\xd2\x62\x00\x00\x00")

func _0_create_users_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__0_create_users_tableUpSql,
		"0_create_users_table.up.sql",
	)
}

func _0_create_users_tableUpSql() (*asset, error) {
	bytes, err := _0_create_users_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0_create_users_table.up.sql", size: 98, mode: os.FileMode(436), modTime: time.Unix(1516677130, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __0_drop_users_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\xb6\x06\x04\x00\x00\xff\xff\xbd\x6d\xc5\x8d\x11\x00\x00\x00")

func _0_drop_users_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__0_drop_users_tableDownSql,
		"0_drop_users_table.down.sql",
	)
}

func _0_drop_users_tableDownSql() (*asset, error) {
	bytes, err := _0_drop_users_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0_drop_users_table.down.sql", size: 17, mode: os.FileMode(436), modTime: time.Unix(1516677130, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __10_add_reports_delete_cascadeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcb\xbd\xaa\x02\x31\x14\xc4\xf1\xfe\x3e\xc5\x94\xbb\xcf\x70\xab\x63\xce\xac\x2c\x86\x64\x39\x89\x85\xd5\x62\x11\x1b\xf1\x83\x44\x0b\xdf\x5e\x16\x59\x6c\x6c\x66\xe0\x07\x7f\xf1\x99\x86\x2c\x1b\x4f\xd4\x72\xbf\xd5\x47\x83\x5a\x9c\xe0\x62\x48\xd9\x64\x0c\x79\xf5\xf9\xf3\xa5\xce\xa7\x73\x79\xfd\xff\xfd\x4a\x45\x15\x43\x34\x8e\xdb\x80\x1d\x0f\xdd\x9a\xf4\x30\x0e\x34\x06\xc7\x84\x67\x2b\xb5\x75\xcb\x5e\x8f\x97\xd2\x23\x06\xec\x27\x95\x4c\x38\x49\x4e\x94\x8b\x28\x3d\xbf\xf2\x0e\x00\x00\xff\xff\xcf\x01\x46\xde\xa7\x00\x00\x00")

func _10_add_reports_delete_cascadeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__10_add_reports_delete_cascadeUpSql,
		"10_add_reports_delete_cascade.up.sql",
	)
}

func _10_add_reports_delete_cascadeUpSql() (*asset, error) {
	bytes, err := _10_add_reports_delete_cascadeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "10_add_reports_delete_cascade.up.sql", size: 167, mode: os.FileMode(436), modTime: time.Unix(1517205016, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __10_remove_reports_delete_cascadeDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x81\x89\xc7\x43\xe8\xd4\xa2\xf8\xb4\xec\xd4\x4a\x6b\x2e\x6c\x5a\x1d\x5d\x5c\x14\xdc\xfc\x83\x5c\x3d\xdd\xfd\x14\xbc\x5d\x23\x35\x60\x5a\x34\x15\x82\x5c\xdd\x5c\x83\x5c\xfd\x9c\x5d\x83\x15\x4a\x8b\x53\x8b\x8a\x35\x40\x64\x5e\x62\x6e\xaa\xa6\x82\xbf\x9f\x42\x68\x80\x8b\x63\x88\xab\x82\xb3\x63\xb0\xb3\xa3\x8b\x2b\x20\x00\x00\xff\xff\xd6\xa5\x2c\xc4\x95\x00\x00\x00")

func _10_remove_reports_delete_cascadeDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__10_remove_reports_delete_cascadeDownSql,
		"10_remove_reports_delete_cascade.down.sql",
	)
}

func _10_remove_reports_delete_cascadeDownSql() (*asset, error) {
	bytes, err := _10_remove_reports_delete_cascadeDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "10_remove_reports_delete_cascade.down.sql", size: 149, mode: os.FileMode(436), modTime: time.Unix(1517205016, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1_create_events_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8b\x4d\x0a\xc2\x30\x10\x85\xd7\x99\x53\xbc\xa5\x42\x2f\x11\x65\x84\x60\x12\x4b\xf2\x84\xd6\x5d\xc1\x01\x41\xac\x60\x83\xe0\xed\x45\x44\xb7\xdf\xcf\xb6\xa8\xa7\x82\x7e\x13\x15\x61\x87\x7c\x20\x74\x08\x95\x15\xf6\xb4\xb9\x2d\x58\x89\xbb\xda\x0b\xd4\x81\xe8\x4b\x48\xbe\x8c\xd8\xeb\xd8\x89\x9b\xa7\x9b\x7d\xf9\xe7\xca\xc7\x18\x3b\x71\xcb\xe5\xfe\x68\xf9\x67\x3a\x71\xe7\xa9\x19\x18\x92\x56\xfa\xd4\xf3\xf4\x8f\x65\xfd\x0e\x00\x00\xff\xff\x50\xda\x81\x7d\x7d\x00\x00\x00")

func _1_create_events_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_create_events_tableUpSql,
		"1_create_events_table.up.sql",
	)
}

func _1_create_events_tableUpSql() (*asset, error) {
	bytes, err := _1_create_events_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_create_events_table.up.sql", size: 125, mode: os.FileMode(436), modTime: time.Unix(1516677130, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1_drop_events_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x06\x04\x00\x00\xff\xff\x27\xe5\x89\x64\x11\x00\x00\x00")

func _1_drop_events_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_drop_events_tableDownSql,
		"1_drop_events_table.down.sql",
	)
}

func _1_drop_events_tableDownSql() (*asset, error) {
	bytes, err := _1_drop_events_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_drop_events_table.down.sql", size: 17, mode: os.FileMode(436), modTime: time.Unix(1516677130, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_create_matches_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x4d\x6a\xc3\x30\x10\x46\xd7\xd2\x29\x66\x69\x83\x2e\xa1\x84\x71\x10\x91\xa5\x20\x4d\x69\xd2\x9d\x2b\x0f\x34\xf8\xaf\xd8\x72\xc1\xb7\x2f\x2e\xf5\xa6\x74\xfb\xde\xf7\xc1\x3b\x07\xd4\x84\x40\xfa\x64\x11\x4c\x05\xce\x13\xe0\xdd\x44\x8a\x30\x34\x39\x7d\xf0\x02\x85\x14\x1d\x6f\x40\x78\x27\xb8\x05\x53\xeb\xf0\x80\x2b\x3e\x94\x14\xfc\xc5\x63\xbe\x1e\x6e\xbf\xba\x17\x6b\x95\x14\x9f\x33\xb7\xcf\x94\xb9\xa5\xe7\xc0\x40\xa6\xc6\x48\xba\xbe\xd1\x9b\x92\xa2\x49\x79\x6d\xfa\x7f\xc4\x7b\xbf\xf2\xeb\x34\xc2\xc9\x7b\x8b\xda\x29\x29\x66\x6e\x63\x9a\x66\x06\xe3\x08\x2f\x18\x7e\x47\x7f\x59\xe5\x03\x9a\x8b\xdb\xa3\x8a\x23\xa9\x84\x80\x15\x06\x74\x67\x8c\xf0\x03\x97\xa2\xe3\xad\x94\xe5\x77\x00\x00\x00\xff\xff\x95\xc6\xa5\x34\xf2\x00\x00\x00")

func _2_create_matches_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_create_matches_tableUpSql,
		"2_create_matches_table.up.sql",
	)
}

func _2_create_matches_tableUpSql() (*asset, error) {
	bytes, err := _2_create_matches_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_create_matches_table.up.sql", size: 242, mode: os.FileMode(436), modTime: time.Unix(1516677130, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_drop_matches_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x06\x04\x00\x00\xff\xff\xed\x06\x12\x35\x12\x00\x00\x00")

func _2_drop_matches_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_drop_matches_tableDownSql,
		"2_drop_matches_table.down.sql",
	)
}

func _2_drop_matches_tableDownSql() (*asset, error) {
	bytes, err := _2_drop_matches_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_drop_matches_table.down.sql", size: 18, mode: os.FileMode(436), modTime: time.Unix(1516677130, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_create_alliances_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8c\x41\x0a\x83\x30\x14\x44\xd7\xe6\x14\xb3\x34\xe0\x25\x54\xc6\x12\x0c\x09\x8d\x11\xec\xd2\xca\x87\x4a\xd5\x45\xad\x0b\x6f\x5f\xb0\xb4\x14\xba\x9d\x79\xef\x95\x81\x79\x24\x62\x5e\x58\xc2\x54\x70\x3e\x82\x9d\x69\x62\x83\x7e\x9a\xc6\x7e\x19\x64\x45\xaa\x92\xb9\x7f\x0e\xb7\x5a\x76\x44\x76\xf1\xa0\x5c\x6b\x6d\xa6\x92\x71\x2d\xa6\x4d\x50\x78\x6f\x99\xbb\xdf\x67\xd9\xe6\xab\x3c\xfe\x84\xca\x07\x9a\x93\x43\xcd\x4b\xfa\xa9\x6a\x04\x56\x0c\x74\x25\x1b\x1c\xa3\xac\xe9\x5d\x76\x9d\xa9\xa4\x75\xe6\xdc\xf2\x8b\x66\x78\x77\xb5\xd2\xaf\x00\x00\x00\xff\xff\x80\x51\xbd\xfc\xbc\x00\x00\x00")

func _3_create_alliances_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_create_alliances_tableUpSql,
		"3_create_alliances_table.up.sql",
	)
}

func _3_create_alliances_tableUpSql() (*asset, error) {
	bytes, err := _3_create_alliances_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_create_alliances_table.up.sql", size: 188, mode: os.FileMode(436), modTime: time.Unix(1516677130, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_drop_alliances_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\xcc\xc9\xc9\x4c\xcc\x4b\x4e\x2d\x06\x04\x00\x00\xff\xff\x17\xe1\x40\xdc\x14\x00\x00\x00")

func _3_drop_alliances_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_drop_alliances_tableDownSql,
		"3_drop_alliances_table.down.sql",
	)
}

func _3_drop_alliances_tableDownSql() (*asset, error) {
	bytes, err := _3_drop_alliances_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_drop_alliances_table.down.sql", size: 20, mode: os.FileMode(436), modTime: time.Unix(1516677130, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_create_reports_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xc1\x6a\x86\x30\x10\x84\xcf\xe6\x29\xf6\x98\x40\x5e\x42\x7f\xd6\x12\x0c\x09\x8d\x11\xec\x31\x94\x85\x96\x56\x5b\x92\x58\xf0\xed\x8b\x4a\x40\x6b\x2f\x21\xcc\x7c\x3b\x33\x0f\x87\xb5\x47\xf0\x75\xa3\x11\x54\x0b\xc6\x7a\xc0\x51\xf5\xbe\x87\x48\xdf\x5f\x31\x27\xe0\xac\x3a\xbe\x14\xc1\xe3\xe8\x77\xc6\x0c\x5a\x4b\x56\xd1\x0f\xcd\xb9\xa3\xf5\x66\x4c\x21\xbf\xbe\xfd\x67\xbc\xa7\xe6\x73\x21\x68\xac\xd5\x58\x9b\xb3\x93\x29\x4c\x37\x3c\xe5\x90\xd3\x4d\x1d\x8c\x7a\x1e\x90\x97\x76\x09\xa5\x4e\xc2\x96\x22\x24\x03\x68\xad\x43\xf5\x64\xa0\xc3\x17\x5e\xf6\x0b\x70\xd8\xa2\x43\xf3\xc0\x1e\x96\x44\x31\xf1\xed\x9d\xc3\x44\x42\xb2\xea\x7c\x52\xb2\x2f\x27\xbb\x98\xf8\x07\xad\x7f\xf1\x32\xe0\x82\xef\x22\x1d\x3c\x13\xbf\x01\x00\x00\xff\xff\xf1\xac\xe6\x8d\x6b\x01\x00\x00")

func _4_create_reports_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_create_reports_tableUpSql,
		"4_create_reports_table.up.sql",
	)
}

func _4_create_reports_tableUpSql() (*asset, error) {
	bytes, err := _4_create_reports_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_create_reports_table.up.sql", size: 363, mode: os.FileMode(436), modTime: time.Unix(1516677130, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_drop_reports_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\xb6\x06\x04\x00\x00\xff\xff\x55\x5c\x72\x90\x13\x00\x00\x00")

func _4_drop_reports_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_drop_reports_tableDownSql,
		"4_drop_reports_table.down.sql",
	)
}

func _4_drop_reports_tableDownSql() (*asset, error) {
	bytes, err := _4_drop_reports_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_drop_reports_table.down.sql", size: 19, mode: os.FileMode(436), modTime: time.Unix(1516677130, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_add_event_typeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x83\x88\x84\x54\x16\xa4\x2a\x78\xfa\x85\xb8\xba\xbb\x06\x29\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\x00\x02\x00\x00\xff\xff\x47\xcd\xa1\xbe\x38\x00\x00\x00")

func _5_add_event_typeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_add_event_typeUpSql,
		"5_add_event_type.up.sql",
	)
}

func _5_add_event_typeUpSql() (*asset, error) {
	bytes, err := _5_add_event_typeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_add_event_type.up.sql", size: 56, mode: os.FileMode(436), modTime: time.Unix(1516677130, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_remove_event_typeDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x83\x08\x85\x54\x16\xa4\x02\x02\x00\x00\xff\xff\xfa\x1d\x58\x8e\x28\x00\x00\x00")

func _5_remove_event_typeDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_remove_event_typeDownSql,
		"5_remove_event_type.down.sql",
	)
}

func _5_remove_event_typeDownSql() (*asset, error) {
	bytes, err := _5_remove_event_typeDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_remove_event_type.down.sql", size: 40, mode: os.FileMode(436), modTime: time.Unix(1516677130, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __6_add_bluewonDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xca\x29\x4d\x0d\xcf\xcf\x53\x70\xf2\xf7\xf7\x71\x75\xf4\x03\x04\x00\x00\xff\xff\x08\x2a\x0a\x8b\x2e\x00\x00\x00")

func _6_add_bluewonDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__6_add_bluewonDownSql,
		"6_add_bluewon.down.sql",
	)
}

func _6_add_bluewonDownSql() (*asset, error) {
	bytes, err := _6_add_bluewonDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "6_add_bluewon.down.sql", size: 46, mode: os.FileMode(436), modTime: time.Unix(1516677130, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __6_remove_bluewonUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xca\x29\x4d\x0d\xcf\xcf\x03\x04\x00\x00\xff\xff\xc2\xb9\xb0\x4c\x27\x00\x00\x00")

func _6_remove_bluewonUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__6_remove_bluewonUpSql,
		"6_remove_bluewon.up.sql",
	)
}

func _6_remove_bluewonUpSql() (*asset, error) {
	bytes, err := _6_remove_bluewonUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "6_remove_bluewon.up.sql", size: 39, mode: os.FileMode(436), modTime: time.Unix(1516677130, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __7_add_photos_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\xf0\xf3\x0f\x51\x70\x8d\xf0\x0c\x0e\x09\x56\x28\xc8\xc8\x2f\xc9\x2f\x56\xd0\xe0\xe2\x2c\x49\x4d\xcc\x55\x08\x71\x8d\x08\x01\x4b\xfb\x85\xfa\xf8\xe8\x70\x71\x96\x16\xe5\xa0\x8b\x29\x28\x28\x28\x84\xfa\x79\x06\x86\xba\x6a\x80\xb4\xe8\x28\x94\x16\xe5\x68\x72\x69\x02\x02\x00\x00\xff\xff\x7a\x9d\xf7\x09\x64\x00\x00\x00")

func _7_add_photos_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__7_add_photos_tableUpSql,
		"7_add_photos_table.up.sql",
	)
}

func _7_add_photos_tableUpSql() (*asset, error) {
	bytes, err := _7_add_photos_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "7_add_photos_table.up.sql", size: 100, mode: os.FileMode(436), modTime: time.Unix(1516677130, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __7_remove_photos_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\xc8\xc8\x2f\xc9\x2f\x06\x04\x00\x00\xff\xff\xb4\x52\x78\x3f\x11\x00\x00\x00")

func _7_remove_photos_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__7_remove_photos_tableDownSql,
		"7_remove_photos_table.down.sql",
	)
}

func _7_remove_photos_tableDownSql() (*asset, error) {
	bytes, err := _7_remove_photos_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "7_remove_photos_table.down.sql", size: 17, mode: os.FileMode(436), modTime: time.Unix(1516677130, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __8_add_isdminUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xd1\x09\x85\x30\x0c\x05\xd0\x55\xee\x2a\xe9\x6b\xde\xd7\x35\x01\x49\x06\x10\xac\x50\x50\x3f\x0c\xee\xef\x11\x86\xae\x08\x69\x54\xbc\x35\x9e\x82\xf4\x8e\x9f\x33\x17\xc3\x2c\xd9\xaf\x79\xa3\xb9\x53\xc5\x60\x1e\xb0\x24\xd1\xf5\x2f\xc9\xc0\xb1\x9d\x35\xbe\x00\x00\x00\xff\xff\xe7\x70\xa1\xca\x43\x00\x00\x00")

func _8_add_isdminUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__8_add_isdminUpSql,
		"8_add_isdmin.up.sql",
	)
}

func _8_add_isdminUpSql() (*asset, error) {
	bytes, err := _8_add_isdminUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "8_add_isdmin.up.sql", size: 67, mode: os.FileMode(436), modTime: time.Unix(1516750373, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __8_remove_isadminDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x2c\x76\x4c\xc9\xcd\xcc\x03\x04\x00\x00\xff\xff\x54\xf1\x61\xd5\x25\x00\x00\x00")

func _8_remove_isadminDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__8_remove_isadminDownSql,
		"8_remove_isadmin.down.sql",
	)
}

func _8_remove_isadminDownSql() (*asset, error) {
	bytes, err := _8_remove_isadminDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "8_remove_isadmin.down.sql", size: 37, mode: os.FileMode(436), modTime: time.Unix(1516750373, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __9_add_reports_cascadeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x81\x89\xc7\x43\xe8\xd4\xa2\xf8\xb4\xec\xd4\x4a\x6b\x2e\x6c\x5a\x1d\x5d\x5c\x14\xdc\xfc\x83\x5c\x3d\xdd\xfd\x14\xbc\x5d\x23\x35\x60\x5a\x34\x15\x82\x5c\xdd\x5c\x83\x5c\xfd\x9c\x5d\x83\x15\x4a\x8b\x53\x8b\x8a\x35\x40\x64\x5e\x62\x6e\xaa\xa6\x82\xbf\x9f\x42\x68\x80\x8b\x63\x88\xab\x82\xb3\x63\xb0\xb3\xa3\x8b\x2b\x20\x00\x00\xff\xff\xd6\xa5\x2c\xc4\x95\x00\x00\x00")

func _9_add_reports_cascadeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__9_add_reports_cascadeUpSql,
		"9_add_reports_cascade.up.sql",
	)
}

func _9_add_reports_cascadeUpSql() (*asset, error) {
	bytes, err := _9_add_reports_cascadeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "9_add_reports_cascade.up.sql", size: 149, mode: os.FileMode(436), modTime: time.Unix(1517181275, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __9_remove_reports_cascadeDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x81\x89\xc7\x43\xe8\xd4\xa2\xf8\xb4\xec\xd4\x4a\x6b\x2e\x6c\x5a\x1d\x5d\x5c\x14\xdc\xfc\x83\x5c\x3d\xdd\xfd\x14\xbc\x5d\x23\x35\x60\x5a\x34\x15\x82\x5c\xdd\x5c\x83\x5c\xfd\x9c\x5d\x83\x15\x4a\x8b\x53\x8b\x8a\x35\x40\x64\x5e\x62\x6e\xaa\x26\x20\x00\x00\xff\xff\x47\x73\x6b\x93\x83\x00\x00\x00")

func _9_remove_reports_cascadeDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__9_remove_reports_cascadeDownSql,
		"9_remove_reports_cascade.down.sql",
	)
}

func _9_remove_reports_cascadeDownSql() (*asset, error) {
	bytes, err := _9_remove_reports_cascadeDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "9_remove_reports_cascade.down.sql", size: 131, mode: os.FileMode(436), modTime: time.Unix(1517181275, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bindataGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\x5b\x6f\xe3\x46\xb2\x7e\x16\x7f\x05\x63\x20\x81\x74\xe0\xe3\xe1\xfd\x62\x60\x5e\x92\xc9\x01\xf2\x70\x12\x60\x93\x3c\x6d\x2f\x8c\x66\xb3\xe9\x10\x2b\x4b\x8e\x24\xcf\xf4\xcc\x60\xfe\xfb\xe2\xeb\x2a\xda\xb2\xc4\xa6\x68\x8d\x60\x65\x17\xfb\x40\x5b\x22\xd9\xd5\x5d\xdd\x55\xdf\x57\xd5\x17\xbd\x79\xe3\xff\xb0\xac\xb5\x7f\xab\x17\x7a\x25\x37\xba\xf6\xab\x8f\xfe\xed\xf2\x7f\xab\x76\x51\xcb\x8d\xbc\xf2\xde\xbc\xf1\xd7\xcb\x87\x95\xd2\xeb\x6b\x7c\x0e\x6e\xd4\x4a\xcb\x8d\xbe\x79\x58\xeb\xd5\xfa\x66\x23\xab\xb9\xbe\x7a\xb8\xbf\x5a\xff\x39\xa7\xc7\xf5\x6a\x79\xff\xec\x61\xbd\xfc\xb0\xe8\x1e\x87\xc1\x8d\xac\xeb\x9b\x95\xbe\x5f\xae\x36\xeb\x9b\x5a\xcf\xf5\x46\xdf\x28\xb9\x56\xb2\xde\x16\x13\x06\x37\x2b\x7d\xb7\x7c\xaf\x5d\xaf\x3e\x13\xda\x35\x49\xbf\xd7\x8b\xcd\x7e\x9b\x42\x6a\xd3\xb3\xa7\xdb\xe5\xa3\xae\xfc\x9d\xdc\xa8\x3f\xf4\xbe\x80\x88\x04\x3c\x7f\xbc\x2d\x21\xee\x24\xc8\xf9\xbc\x95\x0b\xd5\x23\x23\x26\x19\xbb\x2f\x6c\x4b\x49\x3a\x29\x9d\xce\xbb\x32\x12\x92\xf1\xfc\xf1\xb6\x84\xd4\xf6\xae\x55\xf4\x66\xf3\xf1\x7e\xbb\x6c\xda\x75\xe8\xd6\xd3\xed\xa2\x99\x2d\x5a\xcd\x1f\xf4\x87\xe5\x62\xe7\x09\x97\xec\x1e\x3e\x09\xcd\x6d\xa1\xfb\x3f\x96\x9b\xe5\x7e\x6b\xf3\xae\xdc\xb3\xe7\xdb\x92\x0b\x5b\xbc\x5d\xd7\x77\xed\xb6\xd4\xa2\x2b\xd8\xae\xa5\x7d\xb4\x5d\xa6\x7c\x66\x40\xfb\x96\x53\xee\x1a\x4e\x9f\xc5\x74\xc6\x7d\xbb\xc4\xb7\x77\xbf\xf8\x3f\xff\xf2\x9b\xff\xe3\xbb\x9f\x7e\xfb\xc6\xf3\xee\xa5\xfa\xa7\xbc\xd5\xfe\x5d\x7b\xbb\x92\x9b\x76\xb9\x58\x7b\x5e\x7b\x07\x59\xfe\xd4\x9b\x5c\x54\x1f\x37\x7a\x7d\xe1\x4d\x2e\xd4\xf2\xee\x7e\xa5\xd7\xeb\x37\xb7\x9f\xda\x7b\xdc\x68\xee\x36\xf8\xd7\x2e\xe9\xef\x9b\x76\xf9\xb0\x69\xe7\xf8\xb2\xb4\x05\xee\xe5\xe6\x8f\x37\x4d\x3b\xd7\xf8\x80\x1b\xeb\xcd\xaa\x5d\xdc\xda\x67\x9b\xf6\x4e\x5f\x78\x33\xcf\x6b\x1e\x16\xaa\x6b\xde\xdf\xb4\xac\xa7\xf8\xe0\xff\xfd\x1f\xa8\xf6\xd2\x5f\xc8\x3b\xed\x53\xb1\x99\x3f\xed\xee\xea\xd5\x6a\xb9\x9a\xf9\x9f\xbd\xc9\xed\x27\xfb\xcd\xbf\x7e\xeb\xa3\x55\x57\x3f\xeb\x0f\x10\xa2\x57\x53\xdb\x6c\x7c\xff\xfe\xa1\x69\xf4\xca\x8a\x9d\xcd\xbc\x49\xdb\xd8\x02\xdf\xbc\xf5\x17\xed\x1c\x22\x26\x2b\xbd\x79\x58\x2d\xf0\xf5\xd2\x6f\xee\x36\x57\x3f\x42\x7a\x33\xbd\x80\x20\xff\xdb\x3f\xaf\xfd\x6f\xdf\x5f\x50\x4b\x6c\x5d\x33\x6f\xf2\xc5\xf3\x26\xef\xe5\xca\xaf\x1e\x1a\x9f\xea\xa1\x4a\xbc\xc9\x0d\x35\xe7\xad\xdf\x2e\xaf\x7e\x58\xde\x7f\x9c\x7e\x57\x3d\x34\x97\xfe\xed\xa7\x99\x37\x51\xf3\x1f\xbb\x96\x5e\xfd\x30\x5f\xae\xf5\x74\xe6\x9d\xaa\x3d\x10\x43\xf2\x1d\x82\xf4\x6a\x45\xed\xe6\x9b\xd5\x43\x73\xf5\x3d\x9a\x3e\x9d\x5d\xe2\x0d\xef\x8b\xe7\xc1\x45\x7c\xb9\x5e\xeb\x0d\xba\xfc\x41\x6d\x20\xc5\xea\xc7\xe3\xe1\x4d\xda\x45\xb3\xf4\xfd\xe5\xfa\xea\xff\xda\xb9\xfe\x69\xd1\x2c\x1f\xcb\xf1\x10\x76\xf7\xb7\x24\xd8\x31\xf4\x7d\x1e\x46\x6f\xb2\x6e\x3f\xd9\xef\xed\x62\x93\x25\xde\xe4\x0e\x60\xec\x3f\x0a\xfd\xff\x65\xad\xed\xcd\xdf\xda\x3b\xed\xc3\x4c\xae\xf0\x09\xf5\x58\x53\x99\x36\xed\x6e\x5d\x33\xff\x67\x79\xa7\xa7\x33\xae\x01\x75\xb2\x96\x4d\x7b\x85\xda\xbd\x2f\x03\x65\x7f\x6d\x3f\xa1\xac\x6d\xcd\xf3\xa2\x68\xe8\x60\x51\xb4\x75\x3a\xdb\x6e\xf9\x73\x01\x50\xed\x90\x00\x28\x37\x9d\x3d\x29\xba\x27\x81\xb5\x77\x0b\xf9\x69\xfd\xae\x5d\x4d\x67\x7e\xb5\x5c\xce\xb7\x4b\xcb\xf9\xfa\x80\xe6\x1f\xd7\xa4\xb8\x5e\x35\x52\xe9\xcf\x5f\xb6\x4a\xb3\x49\xc0\xca\x6f\x6e\xfa\x28\xf0\xf7\xfb\x5f\xff\x9c\xfb\x6f\xd9\x32\xa6\x17\xc2\x84\x8d\x30\x45\x25\x4c\x50\x08\x13\x04\xfd\x57\xd3\x08\x93\x47\xc2\x04\x9a\xfe\xe7\xa9\x30\x81\x12\x26\x0f\x85\x49\x53\x2a\x8b\xcf\x79\x22\x4c\x13\x3d\xdd\x6f\x02\xba\x97\xc6\xf4\xb9\x89\x85\x09\x1a\x61\x52\xbc\x1b\x08\x53\xd4\x74\x1f\xb2\x20\x3b\x28\x85\x49\x33\x61\xa2\x42\x98\xa8\x16\x26\xd1\xf4\x3f\x92\x74\xbf\x0e\x84\xd1\xb8\xd0\x96\x44\x98\x38\xa4\xfa\x42\xd4\x19\x53\x3d\x61\x2a\x4c\x12\x09\x93\x2a\x61\xa2\x98\x3e\xab\x80\x64\x34\x8a\xbe\xe7\xb5\x30\xb9\x12\x26\x4c\xe8\x7b\x53\x0b\x13\xa3\x0d\x78\x1f\x72\x6a\xd2\xb1\x2a\x84\x89\x71\xc5\x54\x07\xfa\x09\x9f\xd3\x88\xea\x0a\xa2\xa7\xfb\xb8\x54\x45\x3a\xe2\xb3\x7d\x27\xa0\x7e\x40\x7f\x64\x25\xbd\x6f\xaf\xad\x7e\xc5\xa5\x43\x61\x4a\xe8\x97\x0b\x53\x47\xc2\x64\xd1\x76\xff\x5f\x74\x78\xeb\x1e\x51\xc6\x84\x3e\xac\xed\x90\x63\x0b\xab\xbd\xc9\x64\xc0\x3a\x2e\xbd\xc9\xe4\x62\x20\x7c\xba\xb8\xf4\x26\xb3\x47\xc7\x76\xcb\x41\x73\xfe\xc7\xe2\xd2\x76\x73\x2c\x30\x3d\xa2\xff\x41\x8d\x0e\x21\xed\x23\x40\x5a\x88\xbb\x7e\xbb\xeb\x2e\x9f\x01\x24\xd7\xfe\xb0\x3e\x3e\x20\xe3\xda\x2f\x8b\x4b\x1f\xbe\x7f\xbd\x0d\x0d\xd3\x24\xce\x66\xf6\x3e\x3c\xfa\x9a\x3c\xfe\xf7\x45\x6b\xa6\x61\x1a\x66\x59\x9e\x87\x71\x70\xe9\x07\xb3\x2f\xde\x44\xa2\xfe\xef\xac\xc6\x9f\xad\x9a\xd7\x3e\x6b\x8b\xc6\x5d\xdb\xbf\x5f\x1e\x07\x44\x5e\xee\x7a\xeb\x6e\x44\xfa\x6e\xf9\x61\xf1\x55\xde\x5a\x92\x77\x58\x8f\x0b\xdc\x5e\xda\xe7\x6d\x55\x26\x4c\x90\x91\x97\xed\x5a\x6b\x55\x0b\x93\xd5\xc2\xa8\x94\x3c\x38\x0c\x5d\xd6\xea\xd0\xe8\x28\x6b\x75\xc8\x62\x6b\x75\x46\xf3\x7b\xd6\xea\x90\x33\xd2\x5a\x87\x35\x3a\x9d\xb5\x0e\xe8\xc3\xd6\x1a\xe6\xe7\xb4\xd6\xc1\x04\xe9\x78\x92\xc9\x14\x81\x28\x4c\x4c\x4a\x02\x4b\x80\x3c\x80\x5a\xc1\x6c\x01\xf8\x5a\x98\x58\x93\xf9\x95\x89\x30\x15\x80\xb7\x21\x42\x91\x95\x30\x59\x2c\x8c\xd2\xc2\x48\x10\x80\x12\xa6\xc8\x84\xc9\x40\x16\xa5\x30\x05\xae\x54\x98\x3a\x25\x90\x85\xe9\x86\x15\xc9\x2d\x00\xfe\x30\xf7\x4a\x98\x1a\x2e\xa3\x85\x09\x33\x61\xd2\x92\xda\x65\xaf\x8c\x08\x28\xc8\x85\xc9\x1b\x2a\x57\x96\x54\x07\xea\x82\xac\xa4\x11\xa6\x4e\xc8\x05\xab\x86\xea\x4a\x72\x92\x9f\x4a\x61\x4a\x45\x32\x50\x7f\x52\x08\x53\x97\xd4\x3e\x4b\xa8\x70\x59\x10\x67\x49\x44\x22\x53\xd6\x25\x27\x82\xb3\xcf\x6b\x76\x45\xb8\xac\x14\x26\x49\x99\xf4\x62\x61\xe2\x44\x98\x42\x0b\x53\x83\x90\x02\x61\xc2\x9a\xdc\xbf\xae\x85\x29\x41\x80\xe8\x87\x80\xc8\x16\xef\xc2\xc5\x15\xda\x96\x08\x93\xe5\xc2\x44\xe8\xfb\x94\xc8\x0f\xe3\x80\x3e\x28\x1a\x61\x4a\x26\x26\x10\x2a\xca\x68\xf4\x6d\x2e\x4c\x89\x7a\x15\x91\x64\x52\x12\x84\x60\x4c\x30\xd6\x80\x95\xb8\xa6\x3e\x68\x38\x78\xd8\x85\x12\x8c\x5b\x10\x0a\x93\x80\xfc\x58\xcf\x3e\x28\x39\x6c\x6e\x47\x60\xca\x61\xa1\x16\x5c\xc6\xcc\x05\xec\xa0\xcc\x61\xc9\xa3\xe0\x66\xb4\xd6\xa7\xc2\x9d\x71\xaa\x76\x00\x94\xbd\x18\x81\xf2\x28\x48\x83\x30\x3b\x15\x02\x0d\x4e\xbd\x7c\x2d\x7b\xc2\x55\xc0\xa0\x60\xc9\xa0\xa6\x78\x6e\x88\x41\xe1\x8a\x60\x4f\x05\x36\x6d\x88\x45\x23\x8e\x67\x01\x4d\xbb\x6c\x8c\x7b\x4d\x26\x4c\x93\x13\xe4\x74\xf1\x6f\x57\x77\xc3\x50\x54\x84\x04\x5b\x70\x53\xb8\xb8\x2e\x08\x5e\x24\xde\x2b\x84\xa9\x12\x72\x47\xdc\x43\x1b\x32\xb8\x9e\x26\xb8\x02\xdc\x00\x02\x10\xcf\xa6\x1c\xef\xd6\x8a\xe2\x60\x0b\x47\x8a\x5c\x14\xf0\x00\x38\xc1\xf3\x4a\xd1\xfb\x70\xf5\x18\x30\x19\x90\x1c\xc0\x05\x60\xa6\xe0\xd8\xba\x66\x99\x9d\x1c\x94\x2f\xb9\x6c\xd1\xc5\xe1\x92\x63\x61\x8e\x89\x0b\x49\x32\x93\x80\x20\x0f\xf0\x02\x18\xcc\x34\xc1\xbd\xcc\x48\x3e\x20\xa3\x6c\x28\x36\xcf\x0a\x82\xb2\x82\xa1\xbd\x28\x08\xe6\xed\x7b\x31\xdd\xab\x02\xfa\x2c\xb9\x1e\xc0\x58\x14\xec\xc3\x4d\x9d\x11\xa4\x02\xaa\x41\x27\x80\x2f\x07\xdc\x8c\xb1\xad\xe3\x30\x67\x8c\xe4\x0e\x78\xc6\x4d\x2e\xee\xa3\xcf\x98\x3a\xc6\x42\xd0\x0b\x7a\xe2\x84\x38\x34\x56\xf3\x0e\x8c\x92\xf2\xac\x60\xd4\x37\xb5\x7b\x7c\x18\x84\x5c\x14\xef\x25\xa0\x6f\x29\x8c\x8a\x88\xb6\xc3\x80\xc3\x97\x9c\xc2\x0e\xf8\x15\xfc\x55\x72\xce\x0b\xdc\x41\x48\x93\xa5\x4c\xe9\x01\xe5\xa7\x49\x45\xd8\x83\x7b\xf0\x01\xf8\xa8\x0a\x99\x7a\x43\x0a\x95\xf0\x2e\xfc\xd6\xe6\xd7\x35\x85\x15\x08\x87\xaa\x9c\xc2\x21\x50\x35\xb2\x02\x59\x10\x4d\xc3\xff\x72\x84\x48\xec\xeb\x19\x70\x2a\xa7\xbc\x3a\xe2\xbc\x1f\x7a\x96\x1c\x9e\x00\xeb\x80\x55\x55\x49\x38\x99\x16\x84\x6b\x08\xdf\x6a\xc9\x61\x57\x42\x78\x07\x8c\x43\x9b\x11\x1e\x55\x08\x41\x80\x37\x85\x30\xba\xa2\xff\x28\x57\x56\xd4\x0e\xfc\x47\x3e\x8f\x90\x49\xe7\xc2\x28\x49\x58\x19\x22\xfc\xa8\x08\xa3\x11\xca\xe8\x94\x42\x47\xe0\x09\xde\x45\xb8\x13\x4b\x7a\x8e\x72\xb2\x14\x26\x2c\xa9\x5c\x19\x11\x6e\x37\x92\xda\x84\x50\x0c\x78\x8c\x50\x08\x7d\x0b\xac\xeb\x0b\x67\x80\xeb\xd0\x05\x3a\xd8\x39\x86\xda\x81\x2f\x4e\x73\x39\x06\x52\x9c\xc2\x08\x45\x06\x56\x1d\x76\x81\xc3\x29\x69\x1c\x56\x1c\xd2\xea\x64\xf0\x30\xa8\x52\x87\x08\x51\x7a\xd6\x04\x69\x7f\x31\xe7\xb5\xf2\xf9\xa4\xcb\xe7\x91\x18\xd5\xcc\x86\xa5\x3b\x9f\x47\x20\x0f\xef\x28\x38\x11\x71\xe5\xf3\x6e\x95\x8e\xb2\x5a\x97\x30\xb6\x5a\xf7\x5a\xd8\x9e\xd5\xba\x24\x8d\xb4\xda\x03\x5a\x9d\xce\x6a\x87\x54\xfa\x4b\x64\xf5\xfd\x2b\x8c\x5f\x97\xce\x23\x1d\x05\x8f\x65\xc0\xe5\xf8\x89\xc7\x92\xad\xf9\x4e\x58\x27\x52\xeb\xac\x24\x0e\x42\xfc\x2a\x43\xe2\x2b\x58\x35\xde\x2f\x43\x8e\xdd\x02\x96\x57\x52\xd9\x92\x2d\x1c\x5e\x81\x18\x15\x31\xb1\x6c\x88\x27\xe0\x35\xe0\x39\x70\x98\x8d\xc9\x35\xa5\xd7\x88\x33\xad\xd7\x54\x94\x76\x22\x06\xc7\x7b\xe0\x0b\xa4\xf6\x96\x87\x12\x8a\x53\xc1\x01\x9d\x57\x20\xd5\x0d\x38\x25\x0f\x99\x2b\x11\x07\x83\x27\x6d\x6c\x1b\x50\x1b\xe2\x92\x39\x29\xa0\x29\x0c\x70\x36\x62\x6b\xc4\xe2\x59\x43\x72\xf3\x82\x3c\xaf\x2a\x48\x26\xb8\x1c\xfc\x86\x32\x88\x77\xa1\x53\xcc\xe9\x34\xca\x22\x66\x57\x29\xc7\xbb\xa8\x5f\x53\xdc\x8c\x58\xb9\x42\x9c\x9f\x53\xec\x5f\x72\x5d\x88\x9f\xe3\x98\x74\x07\x77\x97\xcc\xbd\xe8\x43\xcb\x93\x01\xb5\x03\x7d\xa1\x32\xe6\x5a\x49\xb2\xeb\x90\x78\x15\x3c\x88\x3c\x03\xa9\x7d\x5e\xd2\xac\x1f\xfa\x23\x6f\x28\x7e\xce\xab\xa7\xf4\x1e\x6d\x87\xee\x88\x55\x54\x49\xcf\x0a\xe6\x76\x8c\xef\xe3\x18\x6b\xd2\xa1\x94\xf4\xdd\x4e\x27\xc4\x64\x4b\x36\x7e\x29\x28\xae\x48\x78\x8a\x25\x2d\x09\x9d\x02\x2e\x63\x65\x56\x1c\xeb\x4b\xca\x53\xc0\xdd\x18\x2f\x3b\xe5\x91\x92\xcc\x9c\xa7\x34\x10\x3b\xd8\x71\x88\x69\x1a\x03\xfa\xa0\x3e\x59\x53\x9f\x40\x76\x9e\xef\xdb\x2e\x2e\xf4\xa5\xe2\x9c\x21\x66\x94\xed\x43\xc6\x01\xbf\x39\x02\x1a\x07\xa4\x59\x6c\x1c\xdc\x07\xb0\x03\x8e\x03\xb2\x46\xa1\xe3\x61\xcd\x4e\x05\x8f\x07\xb4\x62\x7c\x8c\x92\xe8\xbc\x00\xb9\xbf\xc3\xe2\xb5\x68\x5d\x15\x04\x7c\x48\x5e\xe1\x90\x00\xa1\x8e\xea\x5d\xd4\xae\xf9\x19\x92\x00\x24\xde\xa1\xd3\x80\x9d\x7a\x1d\x65\xc0\x4e\x69\x6c\xc0\x03\xfb\x54\xf6\x0c\xd8\x29\x6b\xa4\x01\x1f\xd2\xec\x74\x06\x3c\xa8\x55\x47\xf0\x67\x5d\x64\x72\x6d\x00\xfa\x0a\x8a\x4f\x08\x62\x91\x46\x22\x55\x2d\x3a\x8a\x4f\x88\x16\x41\xf1\x3a\xe3\xa9\x25\x9e\xa1\x06\x6d\x46\xa0\xbc\x84\xe0\xd5\x5a\xa5\x22\x4f\xe8\x16\x94\xec\x94\x56\x44\xe9\x1c\xd2\xca\x44\xf2\x4c\x7a\x4a\xd0\x8d\x74\x11\x54\x9a\x36\x3c\xfd\xc3\x34\x09\x0a\x43\x48\x00\xba\xd2\x0c\xe1\x36\x1d\x03\x05\x25\x34\xdd\x94\x6a\x4a\x3f\x41\x55\x68\x43\x1e\x10\xd5\x16\x1c\x4e\x20\xb4\xc0\x7b\xd0\x05\x54\x04\xda\x41\x3b\x6d\xba\xcb\x41\xb2\x6d\x87\x24\x8a\x04\xad\x82\xaa\x90\x12\x82\x6e\x53\x50\x64\x46\xfa\xe3\x7f\x83\xd0\x25\xa0\x69\x32\x50\x34\x68\x14\xb4\x5b\xb2\x77\x47\xfc\x1d\xde\x9d\x72\x68\x00\xdd\xca\x2e\x3d\x6e\x88\xca\xea\x92\xfa\x52\x56\x34\x45\x80\x74\x16\xb4\x87\x3e\x42\xd8\x82\x76\x96\xbc\x84\xad\x38\x01\x00\x5d\x83\x1e\x11\x7e\x01\x21\x90\xd6\xda\x95\x86\x84\xc6\x20\xac\x84\x09\x15\xd1\xa9\x54\xc2\xe8\x92\x97\xbf\x33\xea\x0b\x94\x95\x09\xad\x08\xa0\x6e\x3b\x7d\xc8\x4b\xde\xa0\x6f\xb4\x15\xf4\x59\xa5\x34\x5e\x08\xbd\xfa\xa8\x14\xd4\x9c\x86\xb4\xb2\x83\x50\xa6\x52\xfd\x48\x34\x68\xa1\x47\x60\xd1\xa0\x3c\x8b\x46\x07\x36\xc5\xed\xe0\xd1\xa0\xbc\x51\x88\x34\x46\xc3\x53\x61\xd2\x41\xdd\x1e\x51\xe9\xcc\xb0\xd4\xb7\xe9\xf0\x35\xf3\x65\xa5\x28\x6a\xc5\x85\x28\x1f\xdf\xed\x0c\x94\x1e\x26\x58\x44\xdd\x3a\xa4\x48\xba\xe6\x19\xf6\x7e\xb3\x1e\xd0\xf0\x28\xb3\x1e\x90\xc7\x66\x3d\xb8\x91\x73\xcf\xac\x07\xe4\x8d\x34\xeb\xc3\x1a\x9e\xce\xac\x0f\xe8\xd6\x45\x8b\xc1\x39\xad\xba\x7f\x9f\xec\xd7\x67\xd3\xc8\x54\x01\xe7\x45\xb6\x35\x2b\x9c\x50\x96\x07\x88\x46\xa6\xd5\x00\xbe\x0b\xb2\x4b\xd0\x9d\xdd\xf5\xc4\x2b\x20\x2e\xba\x8d\x43\x5e\xbc\x4d\x69\x37\x12\xa8\x22\xe5\x2c\x10\x74\xd9\xf0\xcc\xb0\x9d\x99\x96\xbc\x8a\x53\x71\x66\x1d\x92\xcf\xe4\x8a\xb2\xe8\x98\x77\x7a\x15\x4c\x0d\xc8\xe6\xec\x6e\xb0\x94\xa8\x06\x75\xa6\xbc\xc2\x65\xa9\x55\x52\x46\x0a\x8a\x40\x86\x6e\x67\x7d\x73\x5e\x20\x67\x9a\x47\xfb\xec\x5c\x55\x40\x54\x15\x73\xb6\x6a\x37\x07\x84\x94\xd5\x69\xa6\x23\xc5\x34\x07\x2a\x86\x1f\xdb\xdd\x63\x21\xb5\x09\xd4\x68\x33\xe1\x98\xea\x02\x8d\xc1\xe7\xa1\x83\xcd\xa6\x35\xcd\xf0\x82\x72\xed\xec\x3a\x87\x30\x79\x4c\xef\x64\x05\xd5\x8f\x70\x04\xfd\x82\x4c\x19\xa1\x0d\xa8\x37\x62\xfc\x88\x73\xa2\x68\x64\x97\x25\xb0\x21\x26\x7a\x0f\x6b\x0a\x97\xa0\x2f\x32\x78\x3c\x43\x56\x0a\xba\x0d\x38\x3b\x07\xe6\x20\x34\xc1\x18\x44\x11\x85\x2d\xc8\x5e\x6d\xbd\x35\xd1\xbb\x6d\x77\x42\x61\x85\x8a\x09\x87\x30\xce\x18\x77\xf4\x29\x42\x9a\xba\xe0\xec\x3d\xa6\x19\x6c\xf4\xaf\xad\x93\x43\x13\xbb\x7b\x2e\xa4\x31\x05\xd5\x2b\xde\x00\x01\x5b\xa9\x90\x25\x4b\x1a\xcf\x94\xbf\x47\x3c\x57\x88\x90\x04\xb6\xd5\x14\x14\x76\xa0\x4d\xdd\x66\x88\x38\xa2\xf1\x41\x28\x85\xf0\x0b\xed\x0f\x79\x77\x5d\x18\x53\xff\x06\xe1\x3e\x8e\x36\xbc\x0a\x81\x7e\x86\x4d\xc2\xae\x9e\xde\x7b\xc2\xd1\x01\x9f\x3a\x02\x45\x07\xa4\x59\x0c\x1d\xdc\xe9\xbe\x83\xa0\x03\xb2\x46\xe1\xe7\x61\xcd\x4e\x85\x9e\x07\xb4\x62\xec\x8c\xb3\xf8\xbc\xe0\xb9\x7f\x86\xe0\x35\x37\xc4\xb9\x96\xf3\x87\x36\xc6\xa1\x2c\x62\x7c\xd4\x05\xc7\x86\xc1\xf7\x05\x03\x03\xba\x1d\x65\xc4\x4e\x69\x6c\xc4\x03\xa7\x31\xf6\x8c\xd8\x29\x6b\xa4\x11\x1f\xd2\xec\x74\x46\x3c\xa8\x55\x17\xd7\xbe\x78\x55\xf8\x94\x36\xbc\x7b\xcc\xe5\xeb\x36\x5f\xbf\x64\x43\x8a\x6b\x09\xa8\xdb\x8c\x92\xf3\xc4\x7a\xb7\x11\xfb\x71\x23\x4a\xb7\xff\x2c\xa5\xec\xb7\x28\x28\xb4\x00\x55\x87\x19\x65\x82\xf0\x04\x64\x7d\xc8\x2c\x0b\xde\x24\x6d\x27\x8e\x2b\xf2\x0c\x1b\x7e\xf0\x22\x2b\x28\x3c\x62\xaa\xc0\xbb\x28\xd3\x74\xba\xf6\x6c\x84\x46\x98\x80\xf6\xca\x90\x68\x38\x2e\xfa\x3d\xa8\xb7\x67\x8f\xf0\x9d\x5e\x39\xd6\x6b\x1c\x47\x94\x76\xfc\xa5\xb7\xfc\x28\x4f\x19\xd2\xe0\x54\x3e\xe2\xd4\x81\xbd\x23\xcd\xce\xeb\x1d\x7b\x27\xbd\x5e\x73\xcf\xd6\x21\x17\x19\xdc\xaf\xb5\xe3\x26\x01\x9b\xf7\xb6\x9b\xb8\xf6\xfa\x37\xdd\x9e\xac\x82\xa2\xf9\xc8\x69\xe2\xae\xee\x39\xca\xce\x5d\xc2\xd8\xd8\xdd\x87\xee\xf6\x2c\xde\x25\x69\xa4\xd9\x1f\xd0\xea\x74\xb6\x3f\xa4\x12\x3b\x40\x72\xd6\xfc\xf0\xd9\x51\xc6\xd7\x34\xfd\xa1\x95\x84\x97\x30\x44\x1a\xf3\xe4\x09\xc7\x46\x76\xbb\x52\x4d\x89\x28\x2e\x3c\xb7\x65\x23\x2a\x8b\xcb\xb6\x27\xe5\xf6\xc6\xfd\x71\x94\x5d\x0a\x94\x3c\x9f\xcc\xdb\x19\xfb\x5c\xa4\xaf\x03\x8f\x70\x8e\x3e\x31\xd6\x2d\xfa\xcf\x9a\xee\x38\x44\x5f\xe9\x51\xae\x30\xd0\xfa\x53\x39\x81\x4b\x81\xce\xfc\xcf\x8a\xff\xbb\xe7\x75\x5f\x2f\x3a\x1a\x63\xff\x63\xe1\xff\x90\x0f\xb8\x6c\x5c\xf1\xba\x41\x15\xf0\xe4\x83\x63\xe7\x7b\x6f\x2f\x1d\x65\xe4\x3d\x72\xd8\xca\x7b\xcf\x4d\xef\x99\x79\x4f\xf9\x91\x76\xee\xd6\xe0\x74\x86\xee\xd0\xa1\x4b\x66\xcf\x9a\x07\xec\x1f\x3f\xff\xf7\x39\x86\xa9\x8a\xa7\x1c\x58\x95\xf4\x7f\xf7\x28\x66\xe7\x47\xb0\x7d\xa5\x9e\xb7\x05\xb2\xad\x4e\x21\xaf\x47\x55\xcf\x33\x01\x3b\x61\x17\xd0\xbb\x65\x46\xe1\x93\x4e\x69\x62\xab\xe0\x90\xcc\x1e\x50\xe3\x0b\xd9\x88\xdd\x82\xc2\x1b\xda\x8a\x8c\xb2\x0f\x3b\x21\xca\xeb\x80\x9a\xdf\x2d\x93\x27\x79\x19\x6f\x07\x1a\x3a\x86\x99\xf3\xda\x61\xe7\xe3\x99\x63\x32\xdf\x31\x9e\x47\x78\xa5\x43\x92\xf5\x4b\xe7\x8f\x16\xec\x78\xa6\x43\xc6\x28\xdf\x1c\xd6\xe4\x54\xde\x39\xa0\x49\x97\xa7\x07\x67\x8d\xc4\x7a\x7f\x02\xe2\x35\x67\x9b\xfa\xbc\xcc\x79\xfc\x32\x21\x76\x43\x0e\x1e\x37\xee\xed\x9a\x43\x4a\x1d\x65\xaa\x6e\x71\x6c\xaf\x43\xbf\xa3\xb1\x67\xb4\x6e\x69\x23\x2d\xf7\xa0\x76\xa7\x33\xdf\x61\xc5\xfe\x12\x5b\x37\xb7\x7f\xa3\xe4\x78\x76\x81\xbd\xa9\x80\x97\x4a\xf8\xac\x64\xdc\x31\x43\x4a\xa8\x0f\x9b\xd5\x9a\x22\x74\x5d\xd2\x54\x7d\xad\x69\xa7\x47\x9c\x32\xd2\x33\x3a\x87\xbc\x54\x63\x0f\xc2\x07\x64\xaf\x90\x85\xf2\x9a\x6d\x17\x08\x2e\x35\xb5\x0d\xe8\x9c\xf2\x21\x24\xc8\x2a\x79\x57\x46\xc3\xe7\x1a\xbb\x4d\x8d\x61\x4e\xcb\x15\x60\x9e\xba\xa4\x5d\x07\x39\x2f\xe9\x54\x7c\x30\x42\xf1\xe1\xa5\x50\x53\x94\x15\x25\xa4\x17\xa2\xb6\xce\xcf\xa0\x6b\x15\x12\xea\xc7\xbc\xec\xd4\xb7\x7b\x41\xe7\x7c\xbe\x34\xa4\x48\x2f\x71\xcc\xec\xee\x8d\xc2\x11\x8e\xb6\x27\xc3\x7a\x57\xcf\x6f\xd0\xec\xb8\xd4\x5e\xb9\x51\x7e\xe4\x6a\xf1\xa9\x9c\xa7\xb7\xdd\xec\x31\x2f\x3f\x40\x98\xe5\x69\x10\xe7\xf1\x89\x3c\xe6\xf9\xcf\xf7\xbc\xf6\x81\xc1\xbe\x1f\xb8\x78\x69\xe6\x61\x39\x43\xf1\x6e\xa3\x6e\x0b\x03\x47\x61\xae\xcc\x23\xe5\x73\xd4\x59\x48\x4b\x98\x91\xe3\x10\x9c\xa3\x7f\x8e\xb2\xe8\x5e\x49\x6c\xd7\x8e\x1f\x51\xda\xb3\xee\x5e\x19\x23\x6d\x7c\x48\x93\xd3\x59\xba\x53\x93\x2e\x0b\x39\xab\xbd\xf7\xfe\x22\xd5\xeb\x25\xdd\xff\x3d\x23\xfb\x9f\x75\x46\xd6\x6d\x4e\x47\x20\x84\x5b\x98\x05\x89\xf2\x46\xfe\x2b\x00\x00\xff\xff\xdb\x5f\x4e\x62\x00\x50\x00\x00")

func bindataGoBytes() ([]byte, error) {
	return bindataRead(
		_bindataGo,
		"bindata.go",
	)
}

func bindataGo() (*asset, error) {
	bytes, err := bindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bindata.go", size: 36864, mode: os.FileMode(436), modTime: time.Unix(1518038824, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"0_create_users_table.up.sql": _0_create_users_tableUpSql,
	"0_drop_users_table.down.sql": _0_drop_users_tableDownSql,
	"10_add_reports_delete_cascade.up.sql": _10_add_reports_delete_cascadeUpSql,
	"10_remove_reports_delete_cascade.down.sql": _10_remove_reports_delete_cascadeDownSql,
	"1_create_events_table.up.sql": _1_create_events_tableUpSql,
	"1_drop_events_table.down.sql": _1_drop_events_tableDownSql,
	"2_create_matches_table.up.sql": _2_create_matches_tableUpSql,
	"2_drop_matches_table.down.sql": _2_drop_matches_tableDownSql,
	"3_create_alliances_table.up.sql": _3_create_alliances_tableUpSql,
	"3_drop_alliances_table.down.sql": _3_drop_alliances_tableDownSql,
	"4_create_reports_table.up.sql": _4_create_reports_tableUpSql,
	"4_drop_reports_table.down.sql": _4_drop_reports_tableDownSql,
	"5_add_event_type.up.sql": _5_add_event_typeUpSql,
	"5_remove_event_type.down.sql": _5_remove_event_typeDownSql,
	"6_add_bluewon.down.sql": _6_add_bluewonDownSql,
	"6_remove_bluewon.up.sql": _6_remove_bluewonUpSql,
	"7_add_photos_table.up.sql": _7_add_photos_tableUpSql,
	"7_remove_photos_table.down.sql": _7_remove_photos_tableDownSql,
	"8_add_isdmin.up.sql": _8_add_isdminUpSql,
	"8_remove_isadmin.down.sql": _8_remove_isadminDownSql,
	"9_add_reports_cascade.up.sql": _9_add_reports_cascadeUpSql,
	"9_remove_reports_cascade.down.sql": _9_remove_reports_cascadeDownSql,
	"bindata.go": bindataGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"0_create_users_table.up.sql": &bintree{_0_create_users_tableUpSql, map[string]*bintree{}},
	"0_drop_users_table.down.sql": &bintree{_0_drop_users_tableDownSql, map[string]*bintree{}},
	"10_add_reports_delete_cascade.up.sql": &bintree{_10_add_reports_delete_cascadeUpSql, map[string]*bintree{}},
	"10_remove_reports_delete_cascade.down.sql": &bintree{_10_remove_reports_delete_cascadeDownSql, map[string]*bintree{}},
	"1_create_events_table.up.sql": &bintree{_1_create_events_tableUpSql, map[string]*bintree{}},
	"1_drop_events_table.down.sql": &bintree{_1_drop_events_tableDownSql, map[string]*bintree{}},
	"2_create_matches_table.up.sql": &bintree{_2_create_matches_tableUpSql, map[string]*bintree{}},
	"2_drop_matches_table.down.sql": &bintree{_2_drop_matches_tableDownSql, map[string]*bintree{}},
	"3_create_alliances_table.up.sql": &bintree{_3_create_alliances_tableUpSql, map[string]*bintree{}},
	"3_drop_alliances_table.down.sql": &bintree{_3_drop_alliances_tableDownSql, map[string]*bintree{}},
	"4_create_reports_table.up.sql": &bintree{_4_create_reports_tableUpSql, map[string]*bintree{}},
	"4_drop_reports_table.down.sql": &bintree{_4_drop_reports_tableDownSql, map[string]*bintree{}},
	"5_add_event_type.up.sql": &bintree{_5_add_event_typeUpSql, map[string]*bintree{}},
	"5_remove_event_type.down.sql": &bintree{_5_remove_event_typeDownSql, map[string]*bintree{}},
	"6_add_bluewon.down.sql": &bintree{_6_add_bluewonDownSql, map[string]*bintree{}},
	"6_remove_bluewon.up.sql": &bintree{_6_remove_bluewonUpSql, map[string]*bintree{}},
	"7_add_photos_table.up.sql": &bintree{_7_add_photos_tableUpSql, map[string]*bintree{}},
	"7_remove_photos_table.down.sql": &bintree{_7_remove_photos_tableDownSql, map[string]*bintree{}},
	"8_add_isdmin.up.sql": &bintree{_8_add_isdminUpSql, map[string]*bintree{}},
	"8_remove_isadmin.down.sql": &bintree{_8_remove_isadminDownSql, map[string]*bintree{}},
	"9_add_reports_cascade.up.sql": &bintree{_9_add_reports_cascadeUpSql, map[string]*bintree{}},
	"9_remove_reports_cascade.down.sql": &bintree{_9_remove_reports_cascadeDownSql, map[string]*bintree{}},
	"bindata.go": &bintree{bindataGo, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

