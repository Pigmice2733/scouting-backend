// Code generated by go-bindata.
// sources:
// 0_create_users_table.up.sql
// 0_drop_users_table.down.sql
// 10_add_reports_delete_cascade.up.sql
// 10_remove_reports_delete_cascade.down.sql
// 11_add_lat_long.up.sql
// 11_drop_lat_long.down.sql
// 12_add_end_date_rename_start_date.up.sql
// 12_drop_end_date_rename_start_date.down.sql
// 13_add_notes_field.up.sql
// 13_remove_notes_field.down.sql
// 14_add_youtube_url_table.up.sql
// 14_remove_youtube_url.down.sql
// 15_add_is_blue_reports.down.sql
// 15_remove_is_blue_reports.up.sql
// 16_create_picklist_tables.up.sql
// 16_drop_picklist_tables.down.sql
// 17_add_is_verified.up.sql
// 17_remove_is_verified.down.sql
// 1_create_events_table.up.sql
// 1_drop_events_table.down.sql
// 2_create_matches_table.up.sql
// 2_drop_matches_table.down.sql
// 3_create_alliances_table.up.sql
// 3_drop_alliances_table.down.sql
// 4_create_reports_table.up.sql
// 4_drop_reports_table.down.sql
// 5_add_event_type.up.sql
// 5_remove_event_type.down.sql
// 6_add_bluewon.down.sql
// 6_remove_bluewon.up.sql
// 7_add_photos_table.up.sql
// 7_remove_photos_table.down.sql
// 8_add_isdmin.up.sql
// 8_remove_isadmin.down.sql
// 9_add_reports_cascade.up.sql
// 9_remove_reports_cascade.down.sql
// bindata.go
// DO NOT EDIT!

package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __0_create_users_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\xf0\xf3\x0f\x51\x70\x8d\xf0\x0c\x0e\x09\x56\x28\x2d\x4e\x2d\x2a\x56\xd0\xe0\xe2\x04\x31\xf2\x12\x73\x53\x15\x42\x5c\x23\x42\xc0\x2a\xfc\x42\x7d\x7c\x14\x42\xfd\x3c\x03\x43\x5d\x75\xb8\x38\x33\x12\x8b\x33\x52\x53\x02\x12\x8b\x8b\xcb\xf3\x8b\x52\x50\x55\x71\x69\x02\x02\x00\x00\xff\xff\xe1\x96\xd7\xd2\x62\x00\x00\x00")

func _0_create_users_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__0_create_users_tableUpSql,
		"0_create_users_table.up.sql",
	)
}

func _0_create_users_tableUpSql() (*asset, error) {
	bytes, err := _0_create_users_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0_create_users_table.up.sql", size: 98, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __0_drop_users_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\xb6\x06\x04\x00\x00\xff\xff\xbd\x6d\xc5\x8d\x11\x00\x00\x00")

func _0_drop_users_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__0_drop_users_tableDownSql,
		"0_drop_users_table.down.sql",
	)
}

func _0_drop_users_tableDownSql() (*asset, error) {
	bytes, err := _0_drop_users_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0_drop_users_table.down.sql", size: 17, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __10_add_reports_delete_cascadeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcb\xbd\xaa\x02\x31\x14\xc4\xf1\xfe\x3e\xc5\x94\xbb\xcf\x70\xab\x63\xce\xac\x2c\x86\x64\x39\x89\x85\xd5\x62\x11\x1b\xf1\x83\x44\x0b\xdf\x5e\x16\x59\x6c\x6c\x66\xe0\x07\x7f\xf1\x99\x86\x2c\x1b\x4f\xd4\x72\xbf\xd5\x47\x83\x5a\x9c\xe0\x62\x48\xd9\x64\x0c\x79\xf5\xf9\xf3\xa5\xce\xa7\x73\x79\xfd\xff\xfd\x4a\x45\x15\x43\x34\x8e\xdb\x80\x1d\x0f\xdd\x9a\xf4\x30\x0e\x34\x06\xc7\x84\x67\x2b\xb5\x75\xcb\x5e\x8f\x97\xd2\x23\x06\xec\x27\x95\x4c\x38\x49\x4e\x94\x8b\x28\x3d\xbf\xf2\x0e\x00\x00\xff\xff\xcf\x01\x46\xde\xa7\x00\x00\x00")

func _10_add_reports_delete_cascadeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__10_add_reports_delete_cascadeUpSql,
		"10_add_reports_delete_cascade.up.sql",
	)
}

func _10_add_reports_delete_cascadeUpSql() (*asset, error) {
	bytes, err := _10_add_reports_delete_cascadeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "10_add_reports_delete_cascade.up.sql", size: 167, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __10_remove_reports_delete_cascadeDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x81\x89\xc7\x43\xe8\xd4\xa2\xf8\xb4\xec\xd4\x4a\x6b\x2e\x6c\x5a\x1d\x5d\x5c\x14\xdc\xfc\x83\x5c\x3d\xdd\xfd\x14\xbc\x5d\x23\x35\x60\x5a\x34\x15\x82\x5c\xdd\x5c\x83\x5c\xfd\x9c\x5d\x83\x15\x4a\x8b\x53\x8b\x8a\x35\x40\x64\x5e\x62\x6e\xaa\xa6\x82\xbf\x9f\x42\x68\x80\x8b\x63\x88\xab\x82\xb3\x63\xb0\xb3\xa3\x8b\x2b\x20\x00\x00\xff\xff\xd6\xa5\x2c\xc4\x95\x00\x00\x00")

func _10_remove_reports_delete_cascadeDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__10_remove_reports_delete_cascadeDownSql,
		"10_remove_reports_delete_cascade.down.sql",
	)
}

func _10_remove_reports_delete_cascadeDownSql() (*asset, error) {
	bytes, err := _10_remove_reports_delete_cascadeDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "10_remove_reports_delete_cascade.down.sql", size: 149, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __11_add_lat_longUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x49\x2c\x51\x28\x4a\x4d\xcc\xb1\xe6\x22\xa0\x2e\x3f\x2f\x1d\xaa\x10\x10\x00\x00\xff\xff\x85\xb1\x54\x59\x51\x00\x00\x00")

func _11_add_lat_longUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__11_add_lat_longUpSql,
		"11_add_lat_long.up.sql",
	)
}

func _11_add_lat_longUpSql() (*asset, error) {
	bytes, err := _11_add_lat_longUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "11_add_lat_long.up.sql", size: 81, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __11_drop_lat_longDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x49\x2c\xb1\xe6\x22\xa4\x26\x3f\x2f\xdd\x9a\x0b\x10\x00\x00\xff\xff\x97\xf4\x31\x93\x49\x00\x00\x00")

func _11_drop_lat_longDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__11_drop_lat_longDownSql,
		"11_drop_lat_long.down.sql",
	)
}

func _11_drop_lat_longDownSql() (*asset, error) {
	bytes, err := _11_drop_lat_longDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "11_drop_lat_long.down.sql", size: 73, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __12_add_end_date_rename_start_dateUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xcd\x4b\x71\x49\x2c\x49\x55\x08\xf1\xf4\x75\x0d\x0e\x71\xf4\x0d\x08\x89\x52\xf0\xf3\x0f\x51\xf0\x0b\xf5\xf1\xb1\xe6\x02\x04\x00\x00\xff\xff\x34\x34\x21\xbd\x3c\x00\x00\x00")

func _12_add_end_date_rename_start_dateUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__12_add_end_date_rename_start_dateUpSql,
		"12_add_end_date_rename_start_date.up.sql",
	)
}

func _12_add_end_date_rename_start_dateUpSql() (*asset, error) {
	bytes, err := _12_add_end_date_rename_start_dateUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "12_add_end_date_rename_start_date.up.sql", size: 60, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __12_drop_end_date_rename_start_dateDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xcd\x4b\x71\x49\x2c\x49\xb5\xe6\x02\x04\x00\x00\xff\xff\x5f\x1d\xc8\xf2\x28\x00\x00\x00")

func _12_drop_end_date_rename_start_dateDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__12_drop_end_date_rename_start_dateDownSql,
		"12_drop_end_date_rename_start_date.down.sql",
	)
}

func _12_drop_end_date_rename_start_dateDownSql() (*asset, error) {
	bytes, err := _12_drop_end_date_rename_start_dateDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "12_drop_end_date_rename_start_date.down.sql", size: 40, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __13_add_notes_fieldUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\xcb\x2f\x49\x2d\x56\x08\x71\x8d\x08\x01\x04\x00\x00\xff\xff\xfe\xf0\xf7\xb7\x29\x00\x00\x00")

func _13_add_notes_fieldUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__13_add_notes_fieldUpSql,
		"13_add_notes_field.up.sql",
	)
}

func _13_add_notes_fieldUpSql() (*asset, error) {
	bytes, err := _13_add_notes_fieldUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "13_add_notes_field.up.sql", size: 41, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __13_remove_notes_fieldDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\xcb\x2f\x49\x2d\x06\x04\x00\x00\xff\xff\xd9\x75\x26\xc9\x25\x00\x00\x00")

func _13_remove_notes_fieldDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__13_remove_notes_fieldDownSql,
		"13_remove_notes_field.down.sql",
	)
}

func _13_remove_notes_fieldDownSql() (*asset, error) {
	bytes, err := _13_remove_notes_fieldDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "13_remove_notes_field.down.sql", size: 37, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __14_add_youtube_url_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\xa8\xcc\x2f\x2d\x29\x4d\x4a\x0d\x0d\xf2\x51\x08\x71\x8d\x08\x01\x04\x00\x00\xff\xff\x90\x0a\x4c\xbe\x2e\x00\x00\x00")

func _14_add_youtube_url_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__14_add_youtube_url_tableUpSql,
		"14_add_youtube_url_table.up.sql",
	)
}

func _14_add_youtube_url_tableUpSql() (*asset, error) {
	bytes, err := _14_add_youtube_url_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "14_add_youtube_url_table.up.sql", size: 46, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __14_remove_youtube_urlDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xa8\xcc\x2f\x2d\x29\x4d\x4a\x0d\x0d\xf2\x01\x04\x00\x00\xff\xff\x16\xd5\x03\x4c\x2a\x00\x00\x00")

func _14_remove_youtube_urlDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__14_remove_youtube_urlDownSql,
		"14_remove_youtube_url.down.sql",
	)
}

func _14_remove_youtube_urlDownSql() (*asset, error) {
	bytes, err := _14_remove_youtube_urlDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "14_remove_youtube_url.down.sql", size: 42, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __15_add_is_blue_reportsDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x09\x80\x30\x0c\x05\xd0\x55\xfe\x2a\xa9\x8d\xa7\x6f\x02\x92\x0e\xe0\xa1\x82\x50\x50\x1a\xdd\xdf\x27\x0c\xdd\x11\x52\xa8\x98\xfd\xb9\xe7\x9b\x90\x5a\xb1\x38\xdb\x66\xb8\xb2\x8c\xaf\xa3\xb8\x53\xc5\x60\x1e\xb0\x46\xa2\xea\x2a\x8d\x81\xf3\x18\xd9\xff\x00\x00\x00\xff\xff\x9b\x96\x86\xb6\x44\x00\x00\x00")

func _15_add_is_blue_reportsDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__15_add_is_blue_reportsDownSql,
		"15_add_is_blue_reports.down.sql",
	)
}

func _15_add_is_blue_reportsDownSql() (*asset, error) {
	bytes, err := _15_add_is_blue_reportsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "15_add_is_blue_reports.down.sql", size: 68, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __15_remove_is_blue_reportsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x2c\x76\xca\x29\x4d\xe5\x02\x04\x00\x00\xff\xff\xb0\xd4\x44\x2f\x27\x00\x00\x00")

func _15_remove_is_blue_reportsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__15_remove_is_blue_reportsUpSql,
		"15_remove_is_blue_reports.up.sql",
	)
}

func _15_remove_is_blue_reportsUpSql() (*asset, error) {
	bytes, err := _15_remove_is_blue_reportsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "15_remove_is_blue_reports.up.sql", size: 39, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __16_create_picklist_tablesUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xc1\x4e\x03\x21\x14\x45\xf7\x7c\xc5\x5d\x42\xe2\x1f\xb8\xc2\xe6\x8d\x21\x45\x6a\x00\x93\x76\xd9\x38\x2f\x86\xd4\xa2\x19\x50\xd3\xbf\x37\x30\x19\x6d\xd5\xc4\x0d\xc9\xe3\xc2\xe1\x1e\x56\x9e\x74\x24\x44\x7d\x63\x09\x66\x80\xdb\x44\xd0\xd6\x84\x18\xf0\x9a\x1e\x0f\xcf\xa9\xd4\x02\x29\x00\x20\x8d\x08\xe4\x8d\xb6\xb8\xf7\xe6\x4e\xfb\x1d\xd6\xb4\xbb\xea\x11\xbf\x73\xae\x6b\x3e\x21\xd2\x36\x76\x86\x7b\xb0\x76\xce\xf2\xfe\xc8\x7d\x7f\x1e\x5f\x3e\x32\x4f\x67\xf3\xb0\xf1\x64\x6e\x5d\x63\xc9\x05\xa3\xe0\x69\x20\x4f\x6e\x45\x61\x66\x17\x79\xe0\x93\xfa\x7d\xa3\xd3\x2e\x8e\xbf\x15\x9e\x8a\x6c\x6b\x7b\x58\x09\x75\x2d\xc4\x3f\x92\x8b\xe0\x22\x6c\x46\xa4\x5c\xf9\x89\xa7\x1f\x2a\x95\xf7\xc7\xbf\x14\xcf\x1b\x7d\x43\x2e\x6a\x7d\x7d\xa6\x4c\x63\x2b\xf5\x19\x00\x00\xff\xff\xb6\xfa\xb8\x75\x78\x01\x00\x00")

func _16_create_picklist_tablesUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__16_create_picklist_tablesUpSql,
		"16_create_picklist_tables.up.sql",
	)
}

func _16_create_picklist_tablesUpSql() (*asset, error) {
	bytes, err := _16_create_picklist_tablesUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "16_create_picklist_tables.up.sql", size: 376, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __16_drop_picklist_tablesDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\xc8\x4c\xce\xce\xc9\x2c\x2e\x29\xb6\xe6\x42\x13\x2d\xb6\x06\x04\x00\x00\xff\xff\xe9\x8c\x2c\xf7\x27\x00\x00\x00")

func _16_drop_picklist_tablesDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__16_drop_picklist_tablesDownSql,
		"16_drop_picklist_tables.down.sql",
	)
}

func _16_drop_picklist_tablesDownSql() (*asset, error) {
	bytes, err := _16_drop_picklist_tablesDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "16_drop_picklist_tables.down.sql", size: 39, mode: os.FileMode(436), modTime: time.Unix(1523816838, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __17_add_is_verifiedUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xd1\x0d\x85\x30\x08\x05\xd0\x55\xee\x2a\xf4\x95\xf7\x75\x85\xc4\x50\x27\x10\x93\xfe\x16\xbb\xbf\x47\x18\x7a\x22\xa4\x51\xb1\x2b\x57\x41\x7a\xc7\xcf\x39\x0e\xc3\xac\x2b\xd7\x7c\x66\xde\x68\xee\x54\x31\x98\x07\x6c\x90\xe8\xfa\x97\xc1\xc0\xbb\x76\x7e\x01\x00\x00\xff\xff\x52\xa0\x83\xe2\x45\x00\x00\x00")

func _17_add_is_verifiedUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__17_add_is_verifiedUpSql,
		"17_add_is_verified.up.sql",
	)
}

func _17_add_is_verifiedUpSql() (*asset, error) {
	bytes, err := _17_add_is_verifiedUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "17_add_is_verified.up.sql", size: 69, mode: os.FileMode(436), modTime: time.Unix(1523816889, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __17_remove_is_verifiedDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x2c\x0e\x4b\x2d\xca\x4c\xcb\x4c\x4d\x01\x04\x00\x00\xff\xff\xb2\xbf\x88\x51\x28\x00\x00\x00")

func _17_remove_is_verifiedDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__17_remove_is_verifiedDownSql,
		"17_remove_is_verified.down.sql",
	)
}

func _17_remove_is_verifiedDownSql() (*asset, error) {
	bytes, err := _17_remove_is_verifiedDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "17_remove_is_verified.down.sql", size: 40, mode: os.FileMode(436), modTime: time.Unix(1523816936, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1_create_events_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8b\x4d\x0a\xc2\x30\x10\x85\xd7\x99\x53\xbc\xa5\x42\x2f\x11\x65\x84\x60\x12\x4b\xf2\x84\xd6\x5d\xc1\x01\x41\xac\x60\x83\xe0\xed\x45\x44\xb7\xdf\xcf\xb6\xa8\xa7\x82\x7e\x13\x15\x61\x87\x7c\x20\x74\x08\x95\x15\xf6\xb4\xb9\x2d\x58\x89\xbb\xda\x0b\xd4\x81\xe8\x4b\x48\xbe\x8c\xd8\xeb\xd8\x89\x9b\xa7\x9b\x7d\xf9\xe7\xca\xc7\x18\x3b\x71\xcb\xe5\xfe\x68\xf9\x67\x3a\x71\xe7\xa9\x19\x18\x92\x56\xfa\xd4\xf3\xf4\x8f\x65\xfd\x0e\x00\x00\xff\xff\x50\xda\x81\x7d\x7d\x00\x00\x00")

func _1_create_events_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_create_events_tableUpSql,
		"1_create_events_table.up.sql",
	)
}

func _1_create_events_tableUpSql() (*asset, error) {
	bytes, err := _1_create_events_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_create_events_table.up.sql", size: 125, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1_drop_events_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x06\x04\x00\x00\xff\xff\x27\xe5\x89\x64\x11\x00\x00\x00")

func _1_drop_events_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_drop_events_tableDownSql,
		"1_drop_events_table.down.sql",
	)
}

func _1_drop_events_tableDownSql() (*asset, error) {
	bytes, err := _1_drop_events_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_drop_events_table.down.sql", size: 17, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_create_matches_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x4d\x6a\xc3\x30\x10\x46\xd7\xd2\x29\x66\x69\x83\x2e\xa1\x84\x71\x10\x91\xa5\x20\x4d\x69\xd2\x9d\x2b\x0f\x34\xf8\xaf\xd8\x72\xc1\xb7\x2f\x2e\xf5\xa6\x74\xfb\xde\xf7\xc1\x3b\x07\xd4\x84\x40\xfa\x64\x11\x4c\x05\xce\x13\xe0\xdd\x44\x8a\x30\x34\x39\x7d\xf0\x02\x85\x14\x1d\x6f\x40\x78\x27\xb8\x05\x53\xeb\xf0\x80\x2b\x3e\x94\x14\xfc\xc5\x63\xbe\x1e\x6e\xbf\xba\x17\x6b\x95\x14\x9f\x33\xb7\xcf\x94\xb9\xa5\xe7\xc0\x40\xa6\xc6\x48\xba\xbe\xd1\x9b\x92\xa2\x49\x79\x6d\xfa\x7f\xc4\x7b\xbf\xf2\xeb\x34\xc2\xc9\x7b\x8b\xda\x29\x29\x66\x6e\x63\x9a\x66\x06\xe3\x08\x2f\x18\x7e\x47\x7f\x59\xe5\x03\x9a\x8b\xdb\xa3\x8a\x23\xa9\x84\x80\x15\x06\x74\x67\x8c\xf0\x03\x97\xa2\xe3\xad\x94\xe5\x77\x00\x00\x00\xff\xff\x95\xc6\xa5\x34\xf2\x00\x00\x00")

func _2_create_matches_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_create_matches_tableUpSql,
		"2_create_matches_table.up.sql",
	)
}

func _2_create_matches_tableUpSql() (*asset, error) {
	bytes, err := _2_create_matches_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_create_matches_table.up.sql", size: 242, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_drop_matches_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x06\x04\x00\x00\xff\xff\xed\x06\x12\x35\x12\x00\x00\x00")

func _2_drop_matches_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_drop_matches_tableDownSql,
		"2_drop_matches_table.down.sql",
	)
}

func _2_drop_matches_tableDownSql() (*asset, error) {
	bytes, err := _2_drop_matches_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_drop_matches_table.down.sql", size: 18, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_create_alliances_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8c\x41\x0a\x83\x30\x14\x44\xd7\xe6\x14\xb3\x34\xe0\x25\x54\xc6\x12\x0c\x09\x8d\x11\xec\xd2\xca\x87\x4a\xd5\x45\xad\x0b\x6f\x5f\xb0\xb4\x14\xba\x9d\x79\xef\x95\x81\x79\x24\x62\x5e\x58\xc2\x54\x70\x3e\x82\x9d\x69\x62\x83\x7e\x9a\xc6\x7e\x19\x64\x45\xaa\x92\xb9\x7f\x0e\xb7\x5a\x76\x44\x76\xf1\xa0\x5c\x6b\x6d\xa6\x92\x71\x2d\xa6\x4d\x50\x78\x6f\x99\xbb\xdf\x67\xd9\xe6\xab\x3c\xfe\x84\xca\x07\x9a\x93\x43\xcd\x4b\xfa\xa9\x6a\x04\x56\x0c\x74\x25\x1b\x1c\xa3\xac\xe9\x5d\x76\x9d\xa9\xa4\x75\xe6\xdc\xf2\x8b\x66\x78\x77\xb5\xd2\xaf\x00\x00\x00\xff\xff\x80\x51\xbd\xfc\xbc\x00\x00\x00")

func _3_create_alliances_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_create_alliances_tableUpSql,
		"3_create_alliances_table.up.sql",
	)
}

func _3_create_alliances_tableUpSql() (*asset, error) {
	bytes, err := _3_create_alliances_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_create_alliances_table.up.sql", size: 188, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_drop_alliances_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\xcc\xc9\xc9\x4c\xcc\x4b\x4e\x2d\x06\x04\x00\x00\xff\xff\x17\xe1\x40\xdc\x14\x00\x00\x00")

func _3_drop_alliances_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_drop_alliances_tableDownSql,
		"3_drop_alliances_table.down.sql",
	)
}

func _3_drop_alliances_tableDownSql() (*asset, error) {
	bytes, err := _3_drop_alliances_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_drop_alliances_table.down.sql", size: 20, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_create_reports_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xc1\x6a\x86\x30\x10\x84\xcf\xe6\x29\xf6\x98\x40\x5e\x42\x7f\xd6\x12\x0c\x09\x8d\x11\xec\x31\x94\x85\x96\x56\x5b\x92\x58\xf0\xed\x8b\x4a\x40\x6b\x2f\x21\xcc\x7c\x3b\x33\x0f\x87\xb5\x47\xf0\x75\xa3\x11\x54\x0b\xc6\x7a\xc0\x51\xf5\xbe\x87\x48\xdf\x5f\x31\x27\xe0\xac\x3a\xbe\x14\xc1\xe3\xe8\x77\xc6\x0c\x5a\x4b\x56\xd1\x0f\xcd\xb9\xa3\xf5\x66\x4c\x21\xbf\xbe\xfd\x67\xbc\xa7\xe6\x73\x21\x68\xac\xd5\x58\x9b\xb3\x93\x29\x4c\x37\x3c\xe5\x90\xd3\x4d\x1d\x8c\x7a\x1e\x90\x97\x76\x09\xa5\x4e\xc2\x96\x22\x24\x03\x68\xad\x43\xf5\x64\xa0\xc3\x17\x5e\xf6\x0b\x70\xd8\xa2\x43\xf3\xc0\x1e\x96\x44\x31\xf1\xed\x9d\xc3\x44\x42\xb2\xea\x7c\x52\xb2\x2f\x27\xbb\x98\xf8\x07\xad\x7f\xf1\x32\xe0\x82\xef\x22\x1d\x3c\x13\xbf\x01\x00\x00\xff\xff\xf1\xac\xe6\x8d\x6b\x01\x00\x00")

func _4_create_reports_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_create_reports_tableUpSql,
		"4_create_reports_table.up.sql",
	)
}

func _4_create_reports_tableUpSql() (*asset, error) {
	bytes, err := _4_create_reports_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_create_reports_table.up.sql", size: 363, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_drop_reports_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\xb6\x06\x04\x00\x00\xff\xff\x55\x5c\x72\x90\x13\x00\x00\x00")

func _4_drop_reports_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_drop_reports_tableDownSql,
		"4_drop_reports_table.down.sql",
	)
}

func _4_drop_reports_tableDownSql() (*asset, error) {
	bytes, err := _4_drop_reports_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_drop_reports_table.down.sql", size: 19, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_add_event_typeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x83\x88\x84\x54\x16\xa4\x2a\x78\xfa\x85\xb8\xba\xbb\x06\x29\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\x00\x02\x00\x00\xff\xff\x47\xcd\xa1\xbe\x38\x00\x00\x00")

func _5_add_event_typeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_add_event_typeUpSql,
		"5_add_event_type.up.sql",
	)
}

func _5_add_event_typeUpSql() (*asset, error) {
	bytes, err := _5_add_event_typeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_add_event_type.up.sql", size: 56, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_remove_event_typeDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x83\x08\x85\x54\x16\xa4\x02\x02\x00\x00\xff\xff\xfa\x1d\x58\x8e\x28\x00\x00\x00")

func _5_remove_event_typeDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_remove_event_typeDownSql,
		"5_remove_event_type.down.sql",
	)
}

func _5_remove_event_typeDownSql() (*asset, error) {
	bytes, err := _5_remove_event_typeDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_remove_event_type.down.sql", size: 40, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __6_add_bluewonDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xca\x29\x4d\x0d\xcf\xcf\x53\x70\xf2\xf7\xf7\x71\x75\xf4\x03\x04\x00\x00\xff\xff\x08\x2a\x0a\x8b\x2e\x00\x00\x00")

func _6_add_bluewonDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__6_add_bluewonDownSql,
		"6_add_bluewon.down.sql",
	)
}

func _6_add_bluewonDownSql() (*asset, error) {
	bytes, err := _6_add_bluewonDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "6_add_bluewon.down.sql", size: 46, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __6_remove_bluewonUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\x4d\x2c\x49\xce\x48\x2d\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xca\x29\x4d\x0d\xcf\xcf\x03\x04\x00\x00\xff\xff\xc2\xb9\xb0\x4c\x27\x00\x00\x00")

func _6_remove_bluewonUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__6_remove_bluewonUpSql,
		"6_remove_bluewon.up.sql",
	)
}

func _6_remove_bluewonUpSql() (*asset, error) {
	bytes, err := _6_remove_bluewonUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "6_remove_bluewon.up.sql", size: 39, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __7_add_photos_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\xf0\xf3\x0f\x51\x70\x8d\xf0\x0c\x0e\x09\x56\x28\xc8\xc8\x2f\xc9\x2f\x56\xd0\xe0\xe2\x2c\x49\x4d\xcc\x55\x08\x71\x8d\x08\x01\x4b\xfb\x85\xfa\xf8\xe8\x70\x71\x96\x16\xe5\xa0\x8b\x29\x28\x28\x28\x84\xfa\x79\x06\x86\xba\x6a\x80\xb4\xe8\x28\x94\x16\xe5\x68\x72\x69\x02\x02\x00\x00\xff\xff\x7a\x9d\xf7\x09\x64\x00\x00\x00")

func _7_add_photos_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__7_add_photos_tableUpSql,
		"7_add_photos_table.up.sql",
	)
}

func _7_add_photos_tableUpSql() (*asset, error) {
	bytes, err := _7_add_photos_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "7_add_photos_table.up.sql", size: 100, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __7_remove_photos_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\xc8\xc8\x2f\xc9\x2f\x06\x04\x00\x00\xff\xff\xb4\x52\x78\x3f\x11\x00\x00\x00")

func _7_remove_photos_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__7_remove_photos_tableDownSql,
		"7_remove_photos_table.down.sql",
	)
}

func _7_remove_photos_tableDownSql() (*asset, error) {
	bytes, err := _7_remove_photos_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "7_remove_photos_table.down.sql", size: 17, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __8_add_isdminUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xd1\x09\x85\x30\x0c\x05\xd0\x55\xee\x2a\xe9\x6b\xde\xd7\x35\x01\x49\x06\x10\xac\x50\x50\x3f\x0c\xee\xef\x11\x86\xae\x08\x69\x54\xbc\x35\x9e\x82\xf4\x8e\x9f\x33\x17\xc3\x2c\xd9\xaf\x79\xa3\xb9\x53\xc5\x60\x1e\xb0\x24\xd1\xf5\x2f\xc9\xc0\xb1\x9d\x35\xbe\x00\x00\x00\xff\xff\xe7\x70\xa1\xca\x43\x00\x00\x00")

func _8_add_isdminUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__8_add_isdminUpSql,
		"8_add_isdmin.up.sql",
	)
}

func _8_add_isdminUpSql() (*asset, error) {
	bytes, err := _8_add_isdminUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "8_add_isdmin.up.sql", size: 67, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __8_remove_isadminDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x2c\x76\x4c\xc9\xcd\xcc\x03\x04\x00\x00\xff\xff\x54\xf1\x61\xd5\x25\x00\x00\x00")

func _8_remove_isadminDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__8_remove_isadminDownSql,
		"8_remove_isadmin.down.sql",
	)
}

func _8_remove_isadminDownSql() (*asset, error) {
	bytes, err := _8_remove_isadminDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "8_remove_isadmin.down.sql", size: 37, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __9_add_reports_cascadeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x81\x89\xc7\x43\xe8\xd4\xa2\xf8\xb4\xec\xd4\x4a\x6b\x2e\x6c\x5a\x1d\x5d\x5c\x14\xdc\xfc\x83\x5c\x3d\xdd\xfd\x14\xbc\x5d\x23\x35\x60\x5a\x34\x15\x82\x5c\xdd\x5c\x83\x5c\xfd\x9c\x5d\x83\x15\x4a\x8b\x53\x8b\x8a\x35\x40\x64\x5e\x62\x6e\xaa\xa6\x82\xbf\x9f\x42\x68\x80\x8b\x63\x88\xab\x82\xb3\x63\xb0\xb3\xa3\x8b\x2b\x20\x00\x00\xff\xff\xd6\xa5\x2c\xc4\x95\x00\x00\x00")

func _9_add_reports_cascadeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__9_add_reports_cascadeUpSql,
		"9_add_reports_cascade.up.sql",
	)
}

func _9_add_reports_cascadeUpSql() (*asset, error) {
	bytes, err := _9_add_reports_cascadeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "9_add_reports_cascade.up.sql", size: 149, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __9_remove_reports_cascadeDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2d\xc8\x2f\x2a\x29\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x81\x89\xc7\x43\xe8\xd4\xa2\xf8\xb4\xec\xd4\x4a\x6b\x2e\x6c\x5a\x1d\x5d\x5c\x14\xdc\xfc\x83\x5c\x3d\xdd\xfd\x14\xbc\x5d\x23\x35\x60\x5a\x34\x15\x82\x5c\xdd\x5c\x83\x5c\xfd\x9c\x5d\x83\x15\x4a\x8b\x53\x8b\x8a\x35\x40\x64\x5e\x62\x6e\xaa\x26\x20\x00\x00\xff\xff\x47\x73\x6b\x93\x83\x00\x00\x00")

func _9_remove_reports_cascadeDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__9_remove_reports_cascadeDownSql,
		"9_remove_reports_cascade.down.sql",
	)
}

func _9_remove_reports_cascadeDownSql() (*asset, error) {
	bytes, err := _9_remove_reports_cascadeDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "9_remove_reports_cascade.down.sql", size: 131, mode: os.FileMode(436), modTime: time.Unix(1521591346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bindataGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x7d\x5d\x6f\xe3\x38\x96\xf6\x75\xfc\x2b\x34\x01\x66\x90\xbc\xa8\x37\xa5\x6f\x51\x01\xea\x66\xba\x7b\x81\xbe\xd8\x1e\x60\xa7\xe7\x6a\xb5\x08\x28\x89\x4a\x1b\xe3\xd8\x69\xdb\xa9\x66\x55\xa3\xfe\xfb\xe2\xe1\x39\x4c\xfc\x21\xd2\x8a\x4a\x88\xab\xf6\xc2\x89\x2d\x89\x87\x3c\xe4\x79\xce\x07\x79\x48\xbd\x7f\x1f\xfc\xb0\x6a\x55\x70\xaf\x96\x6a\x2d\xb7\xaa\x0d\xea\x4f\xc1\xfd\xea\xff\xd7\xf3\x65\x2b\xb7\xf2\x66\xf6\xfe\x7d\xb0\x59\x3d\xad\x1b\xb5\xb9\xc5\xf7\xf0\xae\x59\x2b\xb9\x55\x77\x4f\x1b\xb5\xde\xdc\x6d\x65\xbd\x50\x37\x4f\x8f\x37\x9b\xdf\x17\x74\xbb\x5d\xaf\x1e\xf7\x6e\xb6\xab\x3f\x96\xf6\x76\x14\xde\xc9\xb6\xbd\x5b\xab\xc7\xd5\x7a\xbb\xb9\x6b\xd5\x42\x6d\xd5\x5d\x23\x37\x8d\x6c\x77\xc9\x44\xe1\xdd\x5a\x3d\xac\x3e\x2a\xd7\xa3\x7b\x44\x23\x43\x74\x21\xb7\x77\x8b\xd5\xf2\x7e\x97\x4c\x44\xcd\x79\xbe\xb5\x57\x2c\x36\xc5\xd4\xb2\xbd\x6b\xc1\xd0\x5a\x2d\xe5\x83\xba\xdb\x6c\xe5\x7a\x6b\xae\xec\x12\x8a\x89\x90\xe7\xe1\x3d\xd2\x89\x21\xbd\x5c\x6d\xd5\xe6\xae\x9b\xab\x45\xbb\x4b\x2b\xb1\xbc\xed\xde\xdf\x2b\x9e\x9a\xe2\x9f\x56\x4f\xdb\xa7\x5a\xdd\x3d\xad\x17\x47\xfd\x1c\xa5\x96\xc8\xce\x53\xfb\x44\x32\x43\x64\xbe\xb9\xab\x17\x4f\xcf\xfd\x78\xf8\x08\x13\x39\x7c\x6a\xa7\xa2\xdc\x0e\xf8\xe3\xbc\xf9\xf7\x62\xbe\xd9\x52\x5b\x0e\x9e\x31\xbd\x73\xf8\xc4\x5e\x5d\x85\x6d\xce\x47\xb5\x9e\x77\x73\xb5\xd7\x25\xc5\x4e\x43\x9e\xef\xef\x15\xb7\xad\x50\x1f\xd5\x72\x7b\x2c\x77\x3c\xd0\x7b\x77\x77\xcb\xc7\xb6\xfc\x83\xdc\x36\xbf\xa9\x63\x02\x3c\xc0\xfb\xb7\x77\x29\x24\x96\x82\x5c\x2c\xe6\x72\xd9\xf4\xd0\x48\x88\xc6\xe1\x03\xbb\x54\x52\x4b\xc5\xca\xf5\x21\x8d\x94\x68\xec\xdf\xde\xa5\x40\xc3\x6a\x18\xbd\xdb\x7e\x7a\xdc\x2d\xfb\x3c\x9c\x3b\x77\x77\x8b\xe6\xa6\x28\x06\xfa\x8f\xd5\xf2\xe0\x0e\x97\xb4\x37\x5f\x88\xd2\xb8\x3d\xfe\xb6\xda\xae\x8e\x5b\xfb\x3c\x6e\x7b\xf7\x77\x29\x0b\x1e\xf6\xf6\x61\xbe\x4b\x55\xbc\x0c\xb8\x34\xb7\x76\xcb\x94\x7b\x4a\xe2\x58\x3b\x94\x87\xca\xa1\x4f\x2b\x58\x05\x76\xbf\xc2\xaf\x1f\xff\x11\xfc\xf2\x8f\x5f\x83\x9f\x7e\xfc\xf9\xd7\xbf\xcc\x66\x8f\xb2\xf9\xb7\xbc\x57\xc1\xc3\xfc\x7e\x2d\xb7\xf3\xd5\x72\x33\x9b\xcd\x1f\x40\x2b\xb8\x9a\x5d\x5c\xd6\x9f\xb6\x6a\x73\x39\xbb\xb8\x6c\x56\x0f\x8f\x6b\xb5\xd9\xbc\xbf\xff\x3c\x7f\xc4\x85\xee\x61\x8b\x7f\xf3\x15\xfd\x7d\x3f\x5f\x3d\x6d\xe7\x0b\xfc\x58\x99\x02\x8f\x72\xfb\xdb\xfb\x6e\xbe\x50\xf8\x82\x0b\x9b\xed\x7a\xbe\xbc\x37\xf7\xb6\xf3\x07\x75\x39\xbb\x9e\xcd\xba\xa7\x65\x63\x9b\xf7\x5f\x4a\xb6\x57\xf8\x12\xfc\xf7\xff\xa0\xda\x77\x01\xf4\x4a\x40\xc5\xae\x83\x2b\x7b\x55\xad\xd7\xab\xf5\x75\xf0\xe7\xec\xe2\xfe\xb3\xf9\x15\xdc\x7e\x08\xd0\xaa\x9b\x5f\xd4\x1f\x20\xa2\xd6\x57\xa6\xd9\xf8\xfd\xf7\xa7\xae\x53\x6b\x43\xf6\xfa\x7a\x76\x31\xef\x4c\x81\xbf\x7c\x08\x96\xf3\x05\x48\x5c\xac\xd5\xf6\x69\xbd\xc4\xcf\x77\x41\xf7\xb0\xbd\xf9\x09\xd4\xbb\xab\x4b\x10\x0a\xfe\xfa\xfb\x6d\xf0\xd7\x8f\x97\xd4\x12\x53\xd7\xf5\xec\xe2\xcb\x6c\x76\xf1\x51\xae\x83\xfa\xa9\x0b\xa8\x1e\xaa\x64\x76\x71\x47\xcd\xf9\x10\xcc\x57\x37\x3f\xac\x1e\x3f\x5d\xfd\xad\x7e\xea\xde\x05\xf7\x9f\xaf\x67\x17\xcd\xe2\x27\xdb\xd2\x9b\x1f\x16\xab\x8d\xba\xba\x9e\x4d\xd5\x1e\x90\x21\xfa\x0e\x42\x6a\xbd\xa6\x76\xf3\xc5\xfa\xa9\xbb\xf9\x3b\x9a\x7e\x75\xfd\x0e\x4f\xcc\xbe\xcc\x66\x80\x48\x20\x37\x1b\xb5\x45\x97\x3f\x35\x5b\x50\x31\xfc\xf1\x78\xcc\x2e\xe6\xcb\x6e\x15\x04\xab\xcd\xcd\x7f\xcc\x17\xea\xe7\x65\xb7\x7a\x2e\xc7\x43\x68\xaf\xef\x50\x30\x63\x18\x04\x3c\x8c\xb3\x8b\xcd\xfc\xb3\xf9\x3d\x5f\x6e\xf3\x74\x76\xf1\x00\x83\x1b\x3c\x13\xfd\xcf\x55\xab\xcc\xc5\x5f\xe7\x0f\x2a\x80\x98\xdc\xe0\x1b\xea\x31\xa2\x72\xd5\xcd\x0f\xeb\xba\x0e\x7e\x91\x0f\xea\xea\x9a\x6b\x40\x9d\xcc\x65\x37\xbf\x41\xed\xb3\x2f\x9e\xb2\xff\x9c\x7f\x46\x59\xd3\x9a\xfd\xa2\x68\xa8\xb7\x28\xda\x7a\x75\xbd\xdb\xf2\x7d\x02\x60\xed\x14\x01\x30\x77\x75\xfd\xc2\xe8\x11\x05\xe6\xde\x4d\xe4\xe7\xcd\x8f\xf3\xf5\xd5\x75\x50\xaf\x56\x8b\xdd\xd2\x72\xb1\x39\xc1\xf9\xa7\x0d\x31\xae\xd6\x9d\x6c\xd4\x9f\x5f\x76\x4a\xb3\x48\x40\xca\xef\xee\xfa\xdc\x9c\x7f\x3d\xfe\xf3\xf7\x45\xf0\x81\x25\xe3\xea\xb2\xd2\x51\x57\x69\x51\x57\x3a\x14\x95\x0e\xc3\xfe\x4f\xd7\x55\xba\x88\x2b\x1d\x2a\xfa\x5f\x64\x95\x0e\x9b\x4a\x17\x51\xa5\xb3\x8c\xca\xe2\x7b\x91\x56\xba\x8b\x5f\xae\x77\x21\x5d\xcb\x12\xfa\xde\x25\x95\x0e\xbb\x4a\x67\x78\x36\xac\xb4\x68\xe9\x3a\x68\x81\x76\x58\x56\x3a\xcb\x2b\x1d\x8b\x4a\xc7\x6d\xa5\x53\x45\xff\x63\x49\xd7\xdb\xb0\xd2\x0a\x1f\xb4\x25\xad\x74\x12\x51\x7d\x11\xea\x4c\xa8\x9e\x28\xab\x74\x1a\x57\x3a\x6b\x2a\x1d\x27\xf4\xbd\x09\x89\x46\xd7\xd0\xef\xa2\xad\x74\xd1\x54\x3a\x4a\xe9\x77\xd7\x56\x3a\x41\x1b\xf0\x3c\xe8\xb4\xc4\x63\x2d\x2a\x9d\xe0\x93\x50\x1d\xe8\x27\x7c\xcf\x62\xaa\x2b\x8c\x5f\xae\xe3\xd3\xd4\xc4\x23\xbe\x9b\x67\x42\xea\x07\xf4\x47\x5e\xd2\xf3\xe6\xb3\xd3\xaf\xf8\xa8\xa8\xd2\x25\xf8\x2b\x2a\xdd\xc6\x95\xce\xe3\xdd\xfe\xbf\xb4\xfa\xd6\x3d\xa2\xac\x13\xfa\x74\xad\xd5\x1c\x3b\xba\x7a\x76\x71\xe1\x91\x8e\x77\xb3\x8b\x8b\x4b\x8f\x8b\x7c\xf9\x6e\x76\x71\xfd\x0c\x6c\x37\x1d\x34\xe7\xff\x19\xbd\xb4\xdb\x1c\xa3\x98\x9e\xb5\xff\x49\x8e\x4e\x69\xda\x67\x05\x69\x54\xdc\xed\x87\x43\xb8\xfc\x09\x45\x72\x1b\xf8\xf9\x09\xa0\x32\x6e\x83\x52\xbc\x0b\x80\xfd\xdb\x5d\xd5\x70\x95\x26\xf9\xb5\xb9\x0e\x44\xdf\x12\xe2\xff\xb5\x9c\xeb\xab\x28\x8b\xa3\xac\x8c\x92\x34\x7f\x17\x84\xd7\x5f\x66\x17\x12\xf5\xff\xcd\x70\xfc\xa7\x61\xf3\x36\x60\x6e\xd1\xb8\x5b\xf3\xf7\xcb\xf3\x80\xc8\x77\x87\x68\x3d\x8c\x3a\x7e\x5c\xfd\xb1\xfc\x2a\xb4\x96\x84\x0e\x83\xb8\xd0\x8d\xd2\x3e\xb4\xd5\x79\xa5\xc3\x9c\x50\x76\x28\xad\x75\x5b\xe9\xbc\xad\x74\x93\x11\x82\xa3\xc8\x25\xad\x0e\x8e\x46\x49\xab\x83\x16\x4b\xab\x33\x62\x3b\x92\x56\x07\x9d\x81\xd2\xea\xe7\x68\x3a\x69\xf5\xf0\xc3\xd2\x1a\x15\xe7\x94\x56\x6f\x10\x3c\xde\xc8\xe4\x0d\x29\x51\x88\x98\x94\xa4\x2c\xa1\xe4\xa1\xa8\x1b\x88\x2d\x14\xbe\xaa\x74\xa2\x48\xfc\xca\xb4\xd2\x35\x14\x6f\x47\x06\x45\xd6\x95\xce\x93\x4a\x37\xaa\xd2\x12\x06\xa0\xa9\xb4\xc8\x2b\x9d\xc3\x58\x94\x95\x16\xf8\x64\x95\x6e\x33\x52\xb2\x10\xdd\xa8\x26\xba\x02\xca\x1f\xe2\x5e\x57\xba\x05\x64\x54\xa5\xa3\xbc\xd2\x59\x49\xed\x32\x9f\x9c\x0c\x50\x58\x54\xba\xe8\xa8\x5c\x59\x52\x1d\xa8\x0b\xb4\xd2\xae\xd2\x6d\x4a\x10\xac\x3b\xaa\x2b\x2d\x88\x7e\x26\x2b\x5d\x36\x44\x03\xf5\xa7\xa2\xd2\x6d\x49\xed\x33\x06\x15\x90\x85\xe1\x2c\xc9\x90\xc8\x8c\x79\x29\xc8\xc0\x99\xfb\x2d\x43\x11\x90\x95\x95\x4e\x33\x36\x7a\x49\xa5\x93\xb4\xd2\x42\x55\xba\x85\x41\x0a\x2b\x1d\xb5\x04\xff\xb6\xad\x74\x09\x03\x88\x7e\x08\xc9\xd8\xe2\x59\x40\xbc\x41\xdb\xd2\x4a\xe7\x45\xa5\x63\xf4\x7d\x46\xc6\x0f\xe3\x80\x3e\x10\x5d\xa5\x4b\x36\x4c\x30\xa8\x28\xa3\xd0\xb7\x45\xa5\x4b\xd4\xdb\x90\x91\x4c\x4b\x52\x21\x18\x13\x8c\x35\xd4\x4a\xd2\x52\x1f\x74\xec\x3c\x1c\xaa\x12\x8c\x5b\x18\x55\x3a\x85\xf1\x63\x3e\xfb\x54\xc9\x69\x71\x1b\xa1\x53\x4e\x13\x35\xca\x65\xc8\x7c\xcf\x81\x96\x39\x4d\x79\x90\xba\x19\xcc\xf5\x54\x7a\x67\x18\xab\x56\x01\xe5\xe7\xd6\x40\xde\xe9\xb5\xaf\xb5\x9e\x80\x0a\x2c\x28\xac\x64\xd8\x92\x3f\xe7\xb3\xa0\x80\x22\xac\x67\x03\x6b\xda\x91\x15\x8d\xd9\x9f\x85\x6a\x3a\xb4\xc6\xb8\xd6\xe5\x95\xee\x0a\x52\x39\xd6\xff\xb5\x75\x77\xac\x8a\x44\x44\x6a\x0b\x30\x05\xc4\x95\x20\xf5\x22\xf1\x9c\xa8\x74\x9d\x12\x1c\x71\x0d\x6d\xc8\x01\x3d\x45\xea\x0a\xea\x06\x2a\x00\xfe\x6c\xc6\xfe\x6e\xdb\x90\x1f\x6c\xd4\x51\x43\x10\x85\x7a\x80\x3a\xc1\xfd\xba\xa1\xe7\x01\xf5\x04\x6a\x32\x24\x3a\x50\x17\x50\x33\x82\x7d\xeb\x96\x69\x5a\x3a\x28\x5f\x72\x59\x61\xfd\x70\xc9\xbe\x30\xfb\xc4\x42\x12\xcd\x34\x24\x95\x07\xf5\x02\x35\x98\x2b\x52\xf7\x32\x27\xfa\x50\x19\x65\x47\xbe\x79\x2e\x48\x95\x09\x56\xed\x42\x90\x9a\x37\xcf\x25\x74\xad\x0e\xe9\xbb\xe4\x7a\xa0\xc6\xe2\xf0\x58\xdd\xb4\x39\xa9\x54\xa8\x6a\x98\x13\xa8\x2f\x87\xba\x19\x22\x5b\xe3\x74\xce\x10\xca\x56\xf1\x0c\x9b\x40\x3e\xd6\x3e\x43\xea\x18\xaa\x82\x5e\xd1\x13\x13\xea\xa1\xa1\x9c\x5b\x65\x94\x96\x67\x55\x46\xfb\xd3\xf7\x5f\x17\x65\xbf\x46\xf3\xa4\xd6\x77\x87\x13\xd4\xb2\xe4\xef\x68\x1d\x3c\x6f\x9e\x8d\x0e\x34\x8e\x75\x34\x32\x42\x67\xc3\x06\x1c\xc8\xc0\xb3\x56\xa3\xa5\xd0\x68\x4d\xa5\xeb\xa8\xd2\x0a\x4e\x4e\x5c\x69\x19\x92\x86\x49\x3a\xd2\x74\x11\x3b\x6b\x51\x48\x9f\x43\xd4\xc1\xe1\x42\xf9\x2c\x25\x67\x2a\x73\xc4\x0b\x7d\x9d\x38\x06\x62\x3d\x64\x08\x4f\xbd\x6b\x2c\x87\xe0\xe9\x29\x3d\x0c\x29\xee\xd6\x4f\x06\x0b\x07\x03\x8c\x01\x11\x9d\x19\x02\x7b\xeb\x54\x6f\x69\x7f\x4f\xa1\xc0\x6b\x7b\x3d\x48\xd8\x93\xfa\xb4\xd2\x71\xfe\x22\xf5\xd6\xa5\x86\x8d\xee\x93\x7a\xb8\xcc\x1d\xcf\x51\x95\x09\xd1\x74\x48\x7d\x5f\xbf\x8d\x13\xfc\x3e\x4a\x56\xf6\xfb\x57\x11\x8f\xc5\xbf\x8f\xc6\x50\x04\x78\x38\x99\x10\x04\x2e\x4e\x18\x07\x45\x72\x56\x1c\x9c\x5a\x92\xfd\xfe\x8c\x03\xe8\x34\x4c\x07\xcf\x5b\x78\xe0\xbf\x9d\xfe\x35\x91\x79\xca\x53\xc3\x2d\x4f\x15\xf3\x35\xf3\x5b\x90\x1b\x8b\xf6\x1e\x4e\x05\x9b\x29\xe0\x9a\xeb\x8c\x5e\x60\x17\xc6\xfd\x13\x50\x70\x45\xf1\x89\x23\x9a\x29\x30\x53\xb7\x7d\xd0\x1a\x34\x14\x63\x90\x36\x88\x30\x01\x6f\xe0\x0a\xfd\x21\x0e\x07\xd5\x30\x0c\x96\xaf\xe9\x85\xc9\x50\x3a\x98\x6d\x06\x6d\x1e\x9e\x19\xb4\x27\x72\x23\xbe\x57\x73\xe6\xc3\x6e\x9d\xf9\x71\x96\xb1\x73\x07\x93\x88\xfa\x62\xe1\xc4\xd9\xb0\xde\x1b\x07\xb5\x61\xb4\x2d\xda\x86\xe6\xb8\x1c\x03\x6e\x58\x3d\x43\x31\xf7\xaa\x1e\x99\x10\x76\xc3\xf9\x67\xe4\xa5\xe7\x45\xde\x51\x9a\xd1\xdb\xd9\xc7\x21\xd3\x36\xaf\x09\xa0\x9a\x9a\x68\x18\x8c\xb5\x44\xc3\xd6\x2d\xd8\x06\x86\x51\x3f\xd6\x3a\xc5\x76\xb1\xa8\x74\x5d\x50\x1b\x7a\xb1\xd6\xdf\x5f\x63\x90\xd5\x4f\x89\x70\xe4\x4a\xfe\x3a\x44\x4d\x3f\x8d\x61\x18\xf1\x72\x32\x19\x22\xdc\x9c\x58\xf9\x3f\x6f\xd8\xd4\x97\x49\xf7\x5d\xcd\x5d\x0e\x00\x82\x6b\x25\xb1\x2d\xc9\x61\x44\x5c\xd5\xe0\x59\xd7\x7c\x9c\xa7\x93\xc6\x49\xbe\x93\x9c\x15\x7f\x4f\x7a\xe3\x31\x06\x9c\xd4\x86\x02\xe1\x14\x77\x13\xa2\xc1\xcb\x18\x43\x22\x39\xef\xcc\xbe\x23\x75\xf4\xed\x0c\x83\x99\x03\x68\x5f\x1c\xa5\x46\xbd\x38\x65\xaf\x35\x0c\x52\xd0\x0c\x9a\xc1\x55\x4b\xb8\x4a\x79\xe9\xce\x04\x46\x2d\xd5\x6d\x66\xc5\x06\x1a\x8b\x12\xbf\x25\x2d\xbd\xd5\x8a\x66\xe3\x7a\x71\xe3\xeb\xc9\x31\xc0\xf1\xd1\x23\xe4\xf8\xd3\x7e\x0f\xa1\xe3\xa3\x37\x0c\x3b\x03\x38\x9c\x0c\x3c\xa7\x78\xb3\x06\x25\x3f\x33\x7a\x8e\xb3\xaa\xdf\xd2\xa0\x0c\x01\xcf\x6b\x0c\xca\x50\x00\xb9\xc0\x12\xe5\xb4\x06\x6f\x92\xbb\x1a\x32\x6e\x0e\xb0\x38\x3b\x6e\x1c\x56\x9c\xe4\x2c\x54\x3c\xe9\xef\xc7\x48\x71\x52\x1b\x0a\x94\x53\xdc\x4d\x88\x13\x2f\x63\x16\x26\xf1\x59\x61\xd2\xbb\xb5\xe0\x6b\x70\x02\xd9\x6b\xc2\x4a\x37\x11\xc9\xb0\x08\x39\xd7\xa2\xa9\x74\x98\x51\xf2\xa2\x49\x8a\x54\x24\x83\xb2\x24\x45\x2f\x8b\x4a\xe7\x1d\x45\xe1\x25\xe7\x49\xa8\xb0\xd2\x32\xe2\xc5\xd6\x90\x3e\x91\xa4\x49\xe7\xb6\xa3\xdc\x8b\x90\x17\x61\xa3\x88\xf0\x08\x9c\x94\x82\x16\x62\xeb\xb2\xd2\xaa\xa8\x74\x59\x93\xb1\xc8\x24\xcd\xaa\x25\x82\x72\x43\xf2\x9c\x92\x1b\xeb\xb8\xd2\xa2\xa9\xb4\xec\x68\xf1\x14\xd7\x8c\x13\xc7\x0b\xbf\x91\xa2\xc5\xd5\x34\xa7\x05\x67\x25\xa9\xed\x68\xb7\x88\x68\x16\x2f\xe2\x1c\x16\xd3\x07\x7d\x13\xe1\x35\x25\x37\x8a\x9c\xd2\xca\xd2\xd4\x81\x3f\xdf\x88\x8c\x01\xa0\x8f\x1e\x21\xd0\xbf\xbd\xe4\x10\x82\x3e\x7a\xc3\x30\x38\x80\xc3\xc9\x40\x78\x8a\x37\x3b\xef\x76\xd6\xa4\x47\xe7\xee\x9d\x6f\x6b\x12\xe0\xb5\xf1\x0f\x4c\x5f\x81\x98\x46\xbe\x98\x2b\x95\xb9\x27\xda\x00\x31\x93\xbf\x91\x72\xfd\xae\x34\x28\x6f\x77\x8d\xc3\x88\x87\xa0\x05\x89\x77\x83\xd5\x31\x4a\x3c\x14\x87\xc2\xe4\x34\x97\x13\xe2\xe4\x04\x7b\x36\x26\x3a\x6f\x82\x81\x6b\x0b\xdb\x78\xa0\x88\x94\x6c\x03\xec\x55\xaa\xc8\x3f\x8a\x39\xd7\x32\xcd\x48\xb8\x8b\x86\x6c\x41\xd6\x52\x32\x8e\x8a\x89\x3e\xec\x44\x13\xd3\xec\x31\x6c\x01\xca\xa1\x4c\xce\xbe\x55\x99\x10\x00\x60\x17\x12\x06\x15\xf4\xbf\x4d\x5c\x8a\x4a\x02\x52\x9b\x50\xb2\x4f\x52\x90\xad\xc4\xf5\xbc\x25\x7f\xad\xe1\x95\xa3\x06\xb6\x2c\xe1\xfa\x22\xb2\x49\x00\x66\xa9\x08\xcc\x31\x03\xa7\x68\x29\x19\x08\x80\x84\x7d\x83\xfd\x85\xad\xc3\x3d\xd8\xde\x36\x27\x9e\x61\xaf\xba\x90\x16\x6f\x41\x2b\xe4\x3c\x44\xd8\x63\xb4\x0f\x20\xb5\xb3\x6f\x71\xf8\x12\x8c\xa9\x94\xbe\xd7\x6c\x3b\xd1\x3f\xe0\x1f\x7d\xd7\xd5\x34\x53\x8e\x3a\x6a\xce\x49\x85\xad\x84\x6d\x06\x7f\x05\xfc\x58\x45\xc9\x59\x89\xa2\xfe\x6a\xe3\x4a\x27\x39\xf5\x13\xfa\xa6\xa8\x49\x11\x18\xc5\xa1\x48\xe1\xc0\x57\x80\x42\x31\x1b\x16\x3a\xe6\xbd\x23\x1a\x49\x4c\xb9\xa6\x79\x41\x76\x18\x65\xbb\x88\x12\xab\x72\x45\x63\x66\x72\x61\x4b\xf2\x3f\x60\xdf\x4d\xde\x69\x49\x7c\x99\xb2\x8a\xc7\x2d\xa2\x3e\x8b\x0a\xca\x31\x55\x3c\x86\x9d\xa4\xba\x51\x16\x63\x85\x40\x53\x28\xe2\x29\xca\x68\x0c\x84\xe4\xdc\xd8\x9a\x78\xc8\x04\x2b\xdf\x8c\x95\x6a\x4a\x8b\xe6\x25\x6f\x94\x00\xed\x38\xa6\x32\xc6\xaf\x48\x39\x81\x8c\xf3\x73\xe1\x0f\x45\xac\x84\x4b\x96\xc3\xa6\xe0\x3a\x53\x1a\xab\xa8\xa6\x76\xa5\xdc\xa6\x9c\xdb\x69\xda\x9a\x93\x9f\x0f\xde\x63\x5e\x55\x8c\xca\x1e\xa5\x9b\x13\x7f\x18\x4b\xb4\xb5\xb0\x01\xf7\xa1\xd2\xf5\x42\x6f\x8c\xd2\xf5\x12\x24\xa5\x7b\x62\xc7\xea\xa1\xd2\xf5\x52\x1c\xa6\x74\x87\x70\x39\x99\xd2\x3d\xc9\xde\xf3\x44\xd4\x79\x63\xe9\xfe\x4d\xc1\x6f\xb9\x31\xc3\x44\xd3\x0d\x69\x04\xf3\xe1\xf5\x3b\x48\x3d\xb4\x14\xa4\xd8\x68\x21\x68\xd5\x84\x10\xe7\xdb\xbc\xa1\x4a\xf2\xf8\x41\x03\xc8\x72\xba\x1a\x5e\xd6\xc7\x49\xbd\x87\xa0\x95\x7a\xef\x1e\xec\x63\xa9\xf7\x50\x1c\x2a\xf5\xa7\xb9\x9c\x50\xea\x4f\xb0\x37\xda\xd5\x48\x44\x94\x8b\x44\x4c\x23\xf4\x47\xbb\xdc\xc7\xfb\x18\x36\x26\x6e\xd9\x11\x17\x19\xc7\xc4\x62\x3f\x26\x56\x1c\x13\x77\xe9\x8b\xce\x87\x4e\x16\xec\x07\x00\x25\x90\xd4\xc8\xda\x25\xde\x9b\x01\x3b\x0b\xbb\x90\x16\x64\xd7\x0b\xf9\x92\xac\x95\x71\x26\x09\x6c\x40\x56\x54\x3a\x8d\xe8\x3e\x6c\x09\x6c\x48\x52\x52\xac\xdd\x24\xbc\x57\xa4\xa6\x0d\x78\x05\xef\xf3\x68\x15\x25\x1f\xa3\x6d\x99\x4d\xe4\x12\xb4\xf7\x03\xb6\x0b\xbe\x93\x12\x64\x43\xca\x82\xfc\x28\xf0\x8a\x36\xc1\x86\x17\x6a\xd7\x9e\xec\xac\xaa\x73\x0a\xa5\x48\xc8\x9f\x4a\x5d\x8b\x1e\xfd\xe3\x30\x06\x7a\xfd\x94\x08\x73\xae\x33\x0d\x0e\xc1\xd6\x4f\x63\x18\xca\xbc\x9c\x4c\x06\x2f\x37\x27\x36\xd6\x1d\x87\x2b\x51\x4e\x85\xab\xe3\x03\x22\xde\x7a\xa5\xaf\x6f\x57\xed\xd8\x08\x17\xe0\x49\x6b\x76\xf2\x78\x35\xa2\xa9\xe9\x3f\x22\x5e\xd7\x84\x6c\xcd\x19\xfe\x42\xbc\xe4\x1a\x3b\x00\xe0\xec\xb0\x71\x28\x70\x92\xb3\x50\xf0\x9c\xe0\x71\x8c\x07\x27\xb5\xa1\xa0\x38\xc5\xdd\x84\xc8\xf0\x32\x36\x3a\x11\x04\xf0\x28\x93\x89\x7c\xad\xbe\xd3\x51\xc6\x5b\x9e\xa4\xa1\xe7\x8c\x20\x4a\x8a\x1e\x13\x4e\x50\x37\x3b\x00\x0b\xda\xb9\x07\x81\xae\x1b\xda\x16\x02\x1f\xca\x24\xb4\x23\x1a\xca\x78\x57\x5c\x48\x5b\xbc\x21\xe8\x00\x08\xae\x21\xca\x43\x74\x65\x66\x7a\x23\xb2\x2c\xb0\x20\xb9\xd5\xea\xb0\x0c\x2d\x69\x76\x44\x9f\x75\x41\xb3\xb6\x0d\x47\x1d\x52\x50\x94\x23\x62\xb2\x12\x11\x6f\x97\x41\x14\x26\xd8\x02\xc5\xbc\xc4\x08\x3e\x4b\xde\xe1\xd7\xd9\xe8\xd2\xe6\x97\x70\x4e\x25\x2c\x4e\xcb\xa9\xc8\x88\x60\x45\x44\x96\x09\x6d\x4e\x05\x2d\x11\xc2\xe7\x6b\x61\xcd\x6a\xfa\x8f\x72\x65\x4d\xed\x28\x39\x9a\xea\x78\xd6\xb8\x61\x2b\x09\x8b\x9a\x70\xde\x18\x80\xad\x78\xf6\x1a\x56\x11\xcf\x22\xf2\x4c\x24\xdd\x47\x39\x44\xd0\x88\xb4\x50\x0e\xd1\x5e\xc6\x11\x16\xda\x84\x08\x15\xca\x4a\x74\xd4\xb7\x5d\xdb\xbf\x23\xd0\xcc\x0a\x48\xe2\xc1\x46\x74\xbd\xca\xc1\x29\x2e\x63\x54\x83\x93\x18\x29\x06\xcf\xc1\x3d\x87\x6a\xc1\x49\x69\x98\x52\x38\xc5\xd5\x64\x2a\xc1\xcb\x92\xdd\x54\x13\x67\x67\x8d\xbe\x8e\xcf\x43\x7a\xab\xc8\xcb\x95\x81\xe9\x8a\xaa\xe0\x9b\x02\x1d\x82\xf7\xf2\xba\xb6\xc4\xbb\x59\x1a\x25\xb5\x2e\x62\x2c\xb5\xee\xe3\xa4\x8e\xa4\xd6\x45\x69\xa0\xd4\x9e\xe0\x6a\x3a\xa9\xf5\xb1\xf4\x4d\x6c\x8c\xef\x3f\xa4\xeb\xeb\x76\xc4\x0b\x45\x76\x2c\x97\x14\xad\x58\x3b\x96\xee\x1c\x19\x12\xf3\xac\x67\x5e\x92\x0d\x8a\x15\xaf\x20\x72\x9a\x8a\x89\x9c\x22\xde\xfe\x18\x32\xbd\x92\xca\x96\x2c\xe1\x21\xe7\xd6\x77\x82\x56\x04\x61\x27\x80\x1a\xd8\x39\x93\x93\xd8\x11\x5d\x38\x82\x32\x67\xd4\xd4\x14\x29\x75\x1c\x01\xc1\x5e\x20\x42\x32\x76\x28\xa5\xad\x9e\xb0\x01\x16\x15\x29\xaf\x86\x36\x6c\xf7\x60\x2b\xdb\x96\xec\xa4\xd9\x1e\x1a\x72\x7e\x7f\xc9\x36\x29\xa4\x19\x59\xd8\xec\x28\xa5\x59\xd6\xbc\x23\xba\x85\x20\xe4\xd5\x1c\x4d\xc2\x96\xc3\xbe\xa1\x8c\x08\x89\xa7\x84\x77\xa4\xa3\x6c\xc7\xb3\xd9\x66\xcb\xa8\xa2\xd9\xd4\x9c\x67\x33\x6b\x49\xb3\x9f\x79\xcd\xf6\x36\xa5\x2d\xa8\x49\x42\xbc\xc3\x76\x97\x6c\x7b\xd1\x87\xc6\x4e\x86\xd4\x0e\xf4\x45\x93\xb3\xad\x95\x44\x1b\x11\xaf\x59\xf9\x8c\x69\xc6\x3b\x2d\x69\x66\x35\x6f\x79\x56\xb5\xa3\xc8\xb6\xa8\x5f\x76\xc8\xa3\xed\xe0\x1d\xbe\x4a\x53\xd2\x3d\xc1\xb6\x1d\xe3\xfb\x3c\xc6\x8a\x78\x28\x25\xfd\x36\x3b\xf2\x13\x92\x25\xe3\xbf\x08\xf2\x2b\x52\x3e\xa5\x20\x2b\x79\xf9\x89\xcb\x18\x9a\x35\x6f\x97\x95\xb4\xd5\xd7\xac\x46\xa7\x7c\x6a\x40\x46\x34\x0b\x3e\x15\x00\xbe\x83\x19\x87\x84\x22\x5d\xb3\x12\x8c\x32\x2d\xf5\x09\x68\x17\x85\x63\xf5\x37\xa3\xbe\x41\x9f\x25\xac\x65\xfb\x34\xa3\x07\x37\x23\x54\xa3\x87\x9a\xd1\x8d\xde\xa3\xf4\x0e\x94\xa3\x87\xd6\x20\xed\x78\x9a\xb3\xa9\xd4\xe3\x09\xae\x58\x3f\xc6\xe7\x4d\xbc\xe8\x3b\xa4\xf0\xad\xcc\xba\x2f\x35\xc9\x39\x61\xca\xf7\x10\x04\x24\x19\xfd\xef\x17\x60\x27\x5f\xa3\x04\xd8\x49\x8d\x05\xd8\x73\xd4\xe3\x91\x00\x3b\x69\x0d\x14\xe0\x53\x9c\x4d\x27\xc0\x5e\xae\xac\x81\x3f\x6b\xca\x82\xeb\x0c\xcd\xaf\x30\xf1\x29\xa9\x58\x84\x91\x08\x55\x85\x35\xf1\xbc\xb0\xd9\xf2\x42\xa3\x39\x9d\x81\x0f\x79\x31\x8b\x68\x19\x4d\x4c\x36\x2c\x9d\x26\xd1\xa8\x7c\x39\x93\xc9\x9c\x0a\x11\x53\x38\x87\xb0\x32\x95\x7c\x18\x4d\x46\xaa\x1b\xe1\x62\xce\xdb\x7c\xcc\x09\x0a\x6c\x26\x61\xc2\xe0\x12\x98\x85\x40\x56\xe1\x26\x1c\x2b\x69\xb1\x35\x8f\xe9\xe4\x86\x8c\x17\x81\xd1\x86\x22\x24\x53\x2b\xd8\x9d\x80\x6b\x81\xe7\xc0\x0b\x4c\x11\xcc\x4e\xc3\x93\xa2\x11\x3b\xc9\xa6\x1d\x92\x4c\x24\xcc\x2a\x4c\x15\x42\x42\x98\xdb\x4c\xd2\x24\xaa\x59\xd8\xcd\x69\x61\x53\x86\xb4\x50\x08\x13\x9d\xf3\x42\x5f\xc9\xe8\x8e\xed\xc2\x5f\xcb\xf3\x57\x82\x78\x2b\x6d\x78\xcc\x0b\xa5\x6d\x49\x7d\x29\x6b\x9a\x22\x40\x38\x0b\xb3\x87\x3e\x82\xdb\x82\x76\x96\x7c\x0a\x9c\xdd\x36\xd5\x71\xb2\x96\x59\xdc\x4e\x79\x5b\x47\xc3\x8b\xcf\x19\x2d\x46\x46\x0d\x99\x53\xd9\xd0\x12\x8b\x39\x41\x2e\xa7\xbe\x40\x59\xc9\x5b\x23\x51\xb7\x39\x81\x83\x17\x43\x61\xbe\xd1\x56\x98\xcf\x3a\xa3\xf1\x92\x8e\x44\x2a\x98\xe6\x8c\xb7\x3c\xc2\x95\xa9\x1d\xdb\x1e\xbd\x12\x3a\x42\x17\x79\xe9\x19\x6d\x74\xe2\x5c\xd9\x03\x7d\xe4\xa5\x37\x48\x23\x0d\xe1\x70\x2a\x9d\x74\x92\xb7\x67\xad\x74\x66\xb5\xd4\x77\x6e\xef\x5b\xc6\xcb\x4d\x43\x5e\x2b\x3e\x66\x2a\xb8\xe1\x19\x28\xe5\x37\xb0\xf0\xba\x55\x44\x9e\x74\xcb\x87\xd4\xf4\x8b\xb5\x87\xc3\x51\x62\xed\xa1\xc7\x62\xed\x3d\x0b\xf9\x48\xac\x3d\xf4\x06\x8a\xf5\x69\x0e\xa7\x13\xeb\x13\xbc\x59\x6f\xf1\xac\xbb\x03\xfb\x8f\x9a\xfe\xfa\x68\x1a\x91\x2a\xd4\xb9\xc8\x77\x66\x85\x39\xb7\xc4\x1c\xf8\x50\xd2\x6c\x6b\x29\x48\x2e\x61\xee\xcc\xc1\xa1\x7c\x88\x90\xcb\xdc\x9a\x35\xc2\x94\xa2\xd5\x32\x27\x53\x91\x71\x14\x98\x71\xde\x11\x1c\x4a\x33\x33\x2d\xf9\x20\x24\xde\x2c\x15\x47\x84\x99\xa2\xa1\x28\x3a\xe1\x1d\xf2\x82\x4d\x03\xa2\x39\x73\xa0\x2a\xe7\xf2\x44\x7c\xa4\x0a\xcc\xb8\x31\xad\x92\x22\x52\xb3\xa3\x3e\xe3\x59\xdf\x82\xcf\x98\x63\x33\x8f\xf6\x99\xb9\xaa\x90\x4c\x55\xc2\xd1\xaa\xc9\xab\x89\x28\xaa\x53\x6c\x8e\x1a\x36\x73\x30\xc5\xc0\xb1\x39\x80\x35\xe2\x7c\x29\xce\x31\x46\x3b\x50\x57\xce\x39\x37\x31\xe7\x3b\x81\x66\xd7\x92\xc9\x35\xb3\xeb\xec\xc2\x14\x9c\x63\x96\x0b\xaa\x1f\xee\x08\xfa\x05\x91\x32\x5c\x1b\x98\xde\x98\xf5\x87\xc9\x09\x6b\x28\xba\x2c\x39\x57\x0c\xe6\x3d\x6a\xc9\x5d\x2a\x38\x7f\x0b\xf7\x10\x95\xc2\xdc\x86\x1c\x9d\x43\xe7\xc0\x35\x29\xf9\xf0\x0e\xb8\x2d\x88\x5e\x4d\xbd\x9c\x37\x64\xda\x9d\x92\x5b\xd1\x24\xa4\x87\x30\xce\x18\x77\xf4\x29\x5c\x9a\x56\x70\xf4\x9e\xd0\x0c\x76\xc3\x39\xd1\x25\xbb\x26\xe6\x00\xda\x88\xc6\x14\xa6\xbe\xe1\x33\x04\x21\x2b\x35\xe7\x4b\x63\x3c\x33\xfe\x6d\x93\x3b\xe1\x92\x98\x5c\x6d\x5e\x4f\x96\xed\xcb\x79\x82\x49\x4c\xe3\x03\x57\x0a\xee\x17\xda\x1f\xf1\x29\x07\x11\xe7\xcb\xf5\xad\x2b\x77\xbc\x0a\x61\x73\xf2\x20\x57\x7d\xf9\x4c\x1e\x4c\x8d\xd0\xa2\x1e\x6a\x46\x87\x7a\x0f\x8b\x3f\xd0\xa0\x1e\x5a\x83\xf4\xe7\x69\xce\xa6\xd2\x9e\x27\xb8\xb2\x79\x1c\xf9\x59\x4f\x22\xe9\x3b\x86\xff\x2d\x53\x97\x5c\x59\xd5\xbe\xf4\x24\x94\x85\x8f\x8f\xba\x00\x6c\x08\x7c\x9f\x33\xe0\xe1\x6d\x94\x10\x3b\xa9\xb1\x10\x7b\x5e\x68\x70\x24\xc4\x4e\x5a\x03\x85\xf8\x14\x67\xd3\x09\xb1\x97\x2b\xeb\xd7\x9e\x35\xef\xf9\xf0\x4d\x11\xdf\xd7\xe1\x39\x82\xcf\x2b\x84\x6b\x01\x53\x1d\x71\xba\x2b\x90\x50\x70\xea\x90\xe0\x73\xc6\xcd\xc4\x71\x4d\xc8\x30\xee\x07\x2f\xb2\xc2\x84\xc7\x6c\x2a\xf0\x2c\xca\x74\x96\xd7\x9e\xb3\xc4\xe1\x26\xa0\xbd\x32\x22\x33\x9c\x38\xb2\x2b\x7a\x7b\x76\x04\x76\x7a\xe9\x18\xd4\x38\xde\xf2\x71\x80\x97\xde\xf2\x83\x90\xe2\xe3\x60\x2a\x8c\x38\x79\x60\x74\x64\x67\xcd\x4f\xed\x79\x59\xca\xf7\x78\x4e\x8d\xe0\xb5\x0b\x91\xed\xc3\xc4\x75\x5c\x7e\x67\x8f\x35\x15\xe4\xcd\xbb\x12\x88\xdc\xdd\x33\x4a\xce\x5d\xc4\x58\xd8\xdd\xef\xad\x39\x92\x78\x17\xa5\x81\x62\x7f\x82\xab\xe9\x64\xdf\xc7\xd2\x37\x71\x7a\xcc\xde\xdb\x80\xbe\xb5\x4d\xce\xaf\x3a\x5e\x6d\x67\xa7\x98\xd9\xf4\xc2\xe9\x42\xb8\x6f\xca\xc6\x54\xd6\x24\xc6\x46\x14\x04\x76\x1c\xd4\xf4\xf9\x51\x66\x29\x50\xf2\x7c\x72\xed\x3e\x21\xa0\xaf\x03\x47\x80\xa3\x8f\x8c\x81\x45\xff\xeb\x9a\x0e\x00\xd1\x57\x7a\x10\x14\x3c\xad\x9f\x0a\x04\x2e\x06\xbe\x89\xbd\xfe\x87\xaf\xbc\xfa\xb6\x4e\xc8\x78\xf5\x31\x65\x0e\x0c\xb8\x64\xbc\xe1\x75\x03\xb3\x41\xb9\x71\x6f\x65\xe8\xed\xa5\x51\x42\xde\x43\x87\xa5\xbc\xf7\xd5\x63\x47\x62\xde\x53\x7e\xa0\x9c\xbb\x39\x98\x4e\xd0\x1d\x3c\x7c\x13\xfb\x1f\x8f\xdf\xe0\xf6\xfd\xbc\xc9\xa8\x11\x2f\x31\xb0\xd9\xbe\xd3\x1d\xbf\xcd\xc8\xe2\xc8\x9e\xb7\xbc\xdb\x96\xdd\xd3\x60\xcc\x7a\x54\xbd\x1f\x09\x98\x09\xbb\x90\x9e\x2d\x73\x72\x9f\x54\xc6\x9b\x0c\xd8\x25\x33\xb9\xdf\xfc\x41\x34\x62\x52\x50\x38\xa1\xcd\x6c\xcc\x97\x3c\x21\xca\xeb\x80\x8a\x9f\x2d\xd3\x17\x7a\x39\xa7\x03\xf9\xde\x64\x54\xf0\xda\xa1\xc5\x78\xee\x98\xcc\x77\x8c\xe7\x08\x54\x3a\x28\x19\x5c\x3a\xdf\xfb\x77\x80\x4c\x07\x8d\x41\xd8\xf4\x73\x32\x15\x3a\x3d\x9c\xd8\x38\x3d\x3c\xab\x27\xd6\xfb\x16\xc5\xb7\xde\x28\x77\x88\x32\xe7\x1b\x8c\x52\xb2\x6e\x88\xc1\x93\xce\x9d\xae\xe9\x63\x6a\x94\xa8\xba\xc9\xb1\xbc\xfa\x5e\x45\x79\x24\xb4\x6e\x6a\x03\x25\xf7\x24\x77\xd3\x89\xaf\x9f\xb1\x6f\x22\x75\x73\xf7\x35\x9f\x13\x6d\x79\x2b\x77\xb6\xbc\x35\xfd\x5b\xde\x54\x49\x53\xf5\xad\xa2\x4c\x8f\x24\x63\x4d\xcf\xda\x39\xe2\xa5\x1a\x7b\x0c\x0c\xe4\x15\xb4\x50\x5e\xb1\xec\x42\x83\x4b\x45\x6d\x83\x76\xce\xf8\x3d\x1e\x89\xdd\xa2\xcd\xde\x1d\x82\x65\x9b\xd4\x18\x15\xb4\x5c\x01\xcb\xd3\x96\x94\x75\x50\xf0\x92\x4e\x5d\xf6\x1f\x03\x13\xa7\xc4\x17\xbc\x36\x8b\x33\xb3\xe5\x2d\x22\xad\x9f\xf0\xb2\x53\x5f\xf6\x82\x2a\xf8\x15\x4d\x11\xef\x16\x72\xcc\xec\x1e\x8d\xc2\x08\xa0\x1d\xd1\x30\xe8\xea\x79\x8d\xeb\x01\xa4\x8e\xca\x0d\xc2\x91\xab\xc5\x53\x81\xa7\xb7\xdd\x76\x4b\xdb\x99\x11\xb3\xff\x06\xdc\xef\x79\x37\x5b\xc1\x4b\x98\x46\xa6\xd9\x0b\x73\x45\x1e\x19\xbf\x8a\x2c\x8f\x68\x09\xd3\x75\x6e\xa5\xa3\x7f\x46\x49\x74\x2f\x25\x96\x6b\xc7\x7b\x88\x8f\xa4\xbb\x97\xc6\x40\x19\xf7\x71\x32\x9d\xa4\x3b\x39\xf9\x26\x4e\xa6\xec\x7d\xa9\xf3\x77\x74\x54\xd1\xff\xd1\xd7\x4c\xfd\x6f\x00\x00\x00\xff\xff\xb2\xda\xbe\xa7\x00\x80\x00\x00")

func bindataGoBytes() ([]byte, error) {
	return bindataRead(
		_bindataGo,
		"bindata.go",
	)
}

func bindataGo() (*asset, error) {
	bytes, err := bindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bindata.go", size: 53248, mode: os.FileMode(436), modTime: time.Unix(1523817052, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"0_create_users_table.up.sql": _0_create_users_tableUpSql,
	"0_drop_users_table.down.sql": _0_drop_users_tableDownSql,
	"10_add_reports_delete_cascade.up.sql": _10_add_reports_delete_cascadeUpSql,
	"10_remove_reports_delete_cascade.down.sql": _10_remove_reports_delete_cascadeDownSql,
	"11_add_lat_long.up.sql": _11_add_lat_longUpSql,
	"11_drop_lat_long.down.sql": _11_drop_lat_longDownSql,
	"12_add_end_date_rename_start_date.up.sql": _12_add_end_date_rename_start_dateUpSql,
	"12_drop_end_date_rename_start_date.down.sql": _12_drop_end_date_rename_start_dateDownSql,
	"13_add_notes_field.up.sql": _13_add_notes_fieldUpSql,
	"13_remove_notes_field.down.sql": _13_remove_notes_fieldDownSql,
	"14_add_youtube_url_table.up.sql": _14_add_youtube_url_tableUpSql,
	"14_remove_youtube_url.down.sql": _14_remove_youtube_urlDownSql,
	"15_add_is_blue_reports.down.sql": _15_add_is_blue_reportsDownSql,
	"15_remove_is_blue_reports.up.sql": _15_remove_is_blue_reportsUpSql,
	"16_create_picklist_tables.up.sql": _16_create_picklist_tablesUpSql,
	"16_drop_picklist_tables.down.sql": _16_drop_picklist_tablesDownSql,
	"17_add_is_verified.up.sql": _17_add_is_verifiedUpSql,
	"17_remove_is_verified.down.sql": _17_remove_is_verifiedDownSql,
	"1_create_events_table.up.sql": _1_create_events_tableUpSql,
	"1_drop_events_table.down.sql": _1_drop_events_tableDownSql,
	"2_create_matches_table.up.sql": _2_create_matches_tableUpSql,
	"2_drop_matches_table.down.sql": _2_drop_matches_tableDownSql,
	"3_create_alliances_table.up.sql": _3_create_alliances_tableUpSql,
	"3_drop_alliances_table.down.sql": _3_drop_alliances_tableDownSql,
	"4_create_reports_table.up.sql": _4_create_reports_tableUpSql,
	"4_drop_reports_table.down.sql": _4_drop_reports_tableDownSql,
	"5_add_event_type.up.sql": _5_add_event_typeUpSql,
	"5_remove_event_type.down.sql": _5_remove_event_typeDownSql,
	"6_add_bluewon.down.sql": _6_add_bluewonDownSql,
	"6_remove_bluewon.up.sql": _6_remove_bluewonUpSql,
	"7_add_photos_table.up.sql": _7_add_photos_tableUpSql,
	"7_remove_photos_table.down.sql": _7_remove_photos_tableDownSql,
	"8_add_isdmin.up.sql": _8_add_isdminUpSql,
	"8_remove_isadmin.down.sql": _8_remove_isadminDownSql,
	"9_add_reports_cascade.up.sql": _9_add_reports_cascadeUpSql,
	"9_remove_reports_cascade.down.sql": _9_remove_reports_cascadeDownSql,
	"bindata.go": bindataGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"0_create_users_table.up.sql": &bintree{_0_create_users_tableUpSql, map[string]*bintree{}},
	"0_drop_users_table.down.sql": &bintree{_0_drop_users_tableDownSql, map[string]*bintree{}},
	"10_add_reports_delete_cascade.up.sql": &bintree{_10_add_reports_delete_cascadeUpSql, map[string]*bintree{}},
	"10_remove_reports_delete_cascade.down.sql": &bintree{_10_remove_reports_delete_cascadeDownSql, map[string]*bintree{}},
	"11_add_lat_long.up.sql": &bintree{_11_add_lat_longUpSql, map[string]*bintree{}},
	"11_drop_lat_long.down.sql": &bintree{_11_drop_lat_longDownSql, map[string]*bintree{}},
	"12_add_end_date_rename_start_date.up.sql": &bintree{_12_add_end_date_rename_start_dateUpSql, map[string]*bintree{}},
	"12_drop_end_date_rename_start_date.down.sql": &bintree{_12_drop_end_date_rename_start_dateDownSql, map[string]*bintree{}},
	"13_add_notes_field.up.sql": &bintree{_13_add_notes_fieldUpSql, map[string]*bintree{}},
	"13_remove_notes_field.down.sql": &bintree{_13_remove_notes_fieldDownSql, map[string]*bintree{}},
	"14_add_youtube_url_table.up.sql": &bintree{_14_add_youtube_url_tableUpSql, map[string]*bintree{}},
	"14_remove_youtube_url.down.sql": &bintree{_14_remove_youtube_urlDownSql, map[string]*bintree{}},
	"15_add_is_blue_reports.down.sql": &bintree{_15_add_is_blue_reportsDownSql, map[string]*bintree{}},
	"15_remove_is_blue_reports.up.sql": &bintree{_15_remove_is_blue_reportsUpSql, map[string]*bintree{}},
	"16_create_picklist_tables.up.sql": &bintree{_16_create_picklist_tablesUpSql, map[string]*bintree{}},
	"16_drop_picklist_tables.down.sql": &bintree{_16_drop_picklist_tablesDownSql, map[string]*bintree{}},
	"17_add_is_verified.up.sql": &bintree{_17_add_is_verifiedUpSql, map[string]*bintree{}},
	"17_remove_is_verified.down.sql": &bintree{_17_remove_is_verifiedDownSql, map[string]*bintree{}},
	"1_create_events_table.up.sql": &bintree{_1_create_events_tableUpSql, map[string]*bintree{}},
	"1_drop_events_table.down.sql": &bintree{_1_drop_events_tableDownSql, map[string]*bintree{}},
	"2_create_matches_table.up.sql": &bintree{_2_create_matches_tableUpSql, map[string]*bintree{}},
	"2_drop_matches_table.down.sql": &bintree{_2_drop_matches_tableDownSql, map[string]*bintree{}},
	"3_create_alliances_table.up.sql": &bintree{_3_create_alliances_tableUpSql, map[string]*bintree{}},
	"3_drop_alliances_table.down.sql": &bintree{_3_drop_alliances_tableDownSql, map[string]*bintree{}},
	"4_create_reports_table.up.sql": &bintree{_4_create_reports_tableUpSql, map[string]*bintree{}},
	"4_drop_reports_table.down.sql": &bintree{_4_drop_reports_tableDownSql, map[string]*bintree{}},
	"5_add_event_type.up.sql": &bintree{_5_add_event_typeUpSql, map[string]*bintree{}},
	"5_remove_event_type.down.sql": &bintree{_5_remove_event_typeDownSql, map[string]*bintree{}},
	"6_add_bluewon.down.sql": &bintree{_6_add_bluewonDownSql, map[string]*bintree{}},
	"6_remove_bluewon.up.sql": &bintree{_6_remove_bluewonUpSql, map[string]*bintree{}},
	"7_add_photos_table.up.sql": &bintree{_7_add_photos_tableUpSql, map[string]*bintree{}},
	"7_remove_photos_table.down.sql": &bintree{_7_remove_photos_tableDownSql, map[string]*bintree{}},
	"8_add_isdmin.up.sql": &bintree{_8_add_isdminUpSql, map[string]*bintree{}},
	"8_remove_isadmin.down.sql": &bintree{_8_remove_isadminDownSql, map[string]*bintree{}},
	"9_add_reports_cascade.up.sql": &bintree{_9_add_reports_cascadeUpSql, map[string]*bintree{}},
	"9_remove_reports_cascade.down.sql": &bintree{_9_remove_reports_cascadeDownSql, map[string]*bintree{}},
	"bindata.go": &bintree{bindataGo, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

